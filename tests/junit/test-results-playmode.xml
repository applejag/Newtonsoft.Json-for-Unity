<?xml version="1.0"?>
<testsuites tests="2851" failures="8" disabled="0" time="112.6964298">
  
    
    
    
      
      
        
        
          
          
            
          
        
      
    
    
      
      
      
        
        
        
          
          
          
            
            
            
              
              <testsuite tests="60" time="1.269307" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:38:54Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Bson.BsonReaderTests."><testcase name="Bson_SupportMultipleContent" assertions="0" time="0.268838" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="CanRoundTripStackOverflowData" assertions="0" time="0.006826" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="CloseInput" assertions="0" time="0.001218" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="DateTimeKindHandling" assertions="0" time="0.003236" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="DeserializeBsonDocumentWithGuid" assertions="0" time="0.010867" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="DeserializeBsonDocumentWithString" assertions="0" time="0.001517" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="DeserializeByteArrayWithTypeNameHandling" assertions="0" time="0.017519" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="DeserializeLargeBsonObject" assertions="0" time="0.562971" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="DeserializeRegexBson" assertions="0" time="0.012491" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="DeserializeRegexNonConverterBson" assertions="0" time="0.003871" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="GuidsShouldBeProperlyDeserialised" assertions="0" time="0.004024" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="GuidsShouldBeProperlyDeserialised_AsBytes" assertions="0" time="0.004904" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="GuidsShouldBeProperlyDeserialised_AsBytes_ReadAhead" assertions="0" time="0.008017" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="LocalDateTimeKindHandling" assertions="0" time="0.001139" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="MultibyteCharacterPropertyNamesAndStrings" assertions="0" time="0.001040" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="OidAndBytesAreEqual" assertions="0" time="0.005930" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadArrayBsonFromSite" assertions="0" time="0.001872" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadAsInt32BadString" assertions="0" time="0.009029" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadBytes" assertions="0" time="0.006367" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadCode" assertions="0" time="0.001008" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadCodeWScope" assertions="0" time="0.001965" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadDouble" assertions="0" time="0.001693" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadDouble_Decimal" assertions="0" time="0.003193" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadEmptyStrings" assertions="0" time="0.000832" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadEndOfStream" assertions="0" time="0.001081" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadGuid_Bytes" assertions="0" time="0.020399" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadGuid_Text" assertions="0" time="0.002997" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadLargeStrings" assertions="0" time="0.001531" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadLong" assertions="0" time="0.001368" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadNestedArray" assertions="0" time="0.001831" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadNestedArrayIntoLinq" assertions="0" time="0.003397" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadObjectBsonFromSite" assertions="0" time="0.001280" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadOid" assertions="0" time="0.001088" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadReference" assertions="0" time="0.001634" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadRegex" assertions="0" time="0.000939" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadRegexWithOptions" assertions="0" time="0.001095" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadSingleObject" assertions="0" time="0.000976" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadUndefined" assertions="0" time="0.000725" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="ReadValues" assertions="0" time="0.002343" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="TestReadLenStringValueShortTripleByte" assertions="0" time="0.001070" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="TestReadLenStringValueTripleByteCharBufferBoundry0" assertions="0" time="0.000764" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="TestReadLenStringValueTripleByteCharBufferBoundry1" assertions="0" time="0.000627" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="TestReadLenStringValueTripleByteCharBufferBoundry2" assertions="0" time="0.000566" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="TestReadLenStringValueTripleByteCharOne" assertions="0" time="0.000475" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="TestReadStringPropertyName" assertions="0" time="0.000778" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="TestReadStringPropertyNameLong" assertions="0" time="0.000561" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="TestReadStringPropertyNameShortTripleByte" assertions="0" time="0.000633" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="TestReadStringPropertyNameTripleByteCharBufferBoundry0" assertions="0" time="0.000574" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="TestReadStringPropertyNameTripleByteCharBufferBoundry1" assertions="0" time="0.000596" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="TestReadStringPropertyNameTripleByteCharBufferBoundry2" assertions="0" time="0.000596" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="TestReadStringPropertyNameTripleByteCharOne" assertions="0" time="0.000577" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="TestReadStringValue" assertions="0" time="0.000554" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="TestReadStringValueLong" assertions="0" time="0.000545" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="TypeNameHandlingAuto" assertions="0" time="0.024885" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="UnspecifiedDateTimeKindHandling" assertions="0" time="0.001275" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="UriGuidTimeSpanTestClassEmptyTest" assertions="0" time="0.020135" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="UriGuidTimeSpanTestClassValuesTest" assertions="0" time="0.018599" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="Utf8Text" assertions="0" time="0.024002" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="WriteAndReadEmptyListsAndDictionaries" assertions="0" time="0.001454" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase><testcase name="WriteBigInteger" assertions="0" time="0.014489" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonReaderTests">
                  
                </testcase></testsuite>
              <testsuite tests="36" time="0.250854" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:38:55Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Bson.BsonWriterTests."><testcase name="AutoCompleteOnClose_False" assertions="0" time="0.000893" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="CloseOutput" assertions="0" time="0.000617" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="DateTimeZoneHandling" assertions="0" time="0.001114" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="Example" assertions="0" time="0.038414" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="SerializeByteArray_ErrorWhenTopLevel" assertions="0" time="0.003766" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="SerializeDeserializeRegex" assertions="0" time="0.011429" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="SerializeEmptyAndNullStrings" assertions="0" time="0.002012" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="SerializeGoogleGeoCode" assertions="0" time="0.041982" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteArrayBsonFromSite" assertions="0" time="0.000859" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteBigInteger" assertions="0" time="0.003931" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteByteArray" assertions="0" time="0.001293" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteBytes" assertions="0" time="0.000961" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteComment" assertions="0" time="0.001012" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteConstructor" assertions="0" time="0.000791" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteDateTimes" assertions="0" time="0.001358" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteDouble" assertions="0" time="0.000661" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteEmptyStrings" assertions="0" time="0.000635" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteEndOnProperty" assertions="0" time="0.000514" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteEndOnProperty_Close" assertions="0" time="0.000509" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteEndOnProperty_Dispose" assertions="0" time="0.000725" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteGuid" assertions="0" time="0.000665" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteLargeStrings" assertions="0" time="0.001016" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteNestedArray" assertions="0" time="0.000860" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteOid" assertions="0" time="0.001097" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteOidPlusContent" assertions="0" time="0.000804" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteRaw" assertions="0" time="0.000845" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteRawValue" assertions="0" time="0.000833" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteReadEmptyAndNullStrings" assertions="0" time="0.000959" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteReadGuid" assertions="0" time="0.002184" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteRegexPlusContent" assertions="0" time="0.000777" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteSerializedStore" assertions="0" time="0.034586" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteSingleObject" assertions="0" time="0.000813" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteStringReadGuid" assertions="0" time="0.002256" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteUri" assertions="0" time="0.001009" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteValueOutsideOfObjectOrArray" assertions="0" time="0.000852" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase><testcase name="WriteValues" assertions="0" time="0.003907" status="Passed" classname="Newtonsoft.Json.Tests.Bson.BsonWriterTests">
                  
                </testcase></testsuite>
            
            
              
              
              <testsuite tests="5" time="0.042167" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:38:56Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Converters.BinaryConverterTests."><testcase name="DeserializeByteArrayClass" assertions="0" time="0.005321" status="Passed" classname="Newtonsoft.Json.Tests.Converters.BinaryConverterTests">
                  
                </testcase><testcase name="DeserializeByteArrayFromJsonArray" assertions="0" time="0.002086" status="Passed" classname="Newtonsoft.Json.Tests.Converters.BinaryConverterTests">
                  
                </testcase><testcase name="DeserializeSqlBinaryClass" assertions="0" time="0.014569" status="Passed" classname="Newtonsoft.Json.Tests.Converters.BinaryConverterTests">
                  
                </testcase><testcase name="SerializeByteArrayClass" assertions="0" time="0.005035" status="Passed" classname="Newtonsoft.Json.Tests.Converters.BinaryConverterTests">
                  
                </testcase><testcase name="SerializeSqlBinaryClass" assertions="0" time="0.001317" status="Passed" classname="Newtonsoft.Json.Tests.Converters.BinaryConverterTests">
                  
                </testcase></testsuite>
              <testsuite tests="4" time="0.057708" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:38:56Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests."><testcase name="AssertDoesDeserialize" assertions="0" time="0.008387" status="Passed" classname="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests">
                  
                </testcase><testcase name="AssertShouldSerializeTest" assertions="0" time="0.001593" status="Passed" classname="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests">
                  
                </testcase><testcase name="DeserializeAndConvertNullValue" assertions="0" time="0.016846" status="Passed" classname="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests">
                  
                </testcase><testcase name="DeserializeObject" assertions="0" time="0.018967" status="Passed" classname="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests">
                  
                </testcase></testsuite>
              <testsuite tests="4" time="0.535487" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:38:56Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests."><testcase name="DeserializeExpandoObject" assertions="0" time="0.482713" status="Passed" classname="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests">
                  
                </testcase><testcase name="DeserializeNullExpandoObject" assertions="0" time="0.001055" status="Passed" classname="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests">
                  
                </testcase><testcase name="SerializeExpandoObject" assertions="0" time="0.026457" status="Passed" classname="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests">
                  
                </testcase><testcase name="SerializeNullExpandoObject" assertions="0" time="0.000802" status="Passed" classname="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests">
                  
                </testcase></testsuite>
              <testsuite tests="7" time="0.024058" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:38:57Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Converters.GenericJsonConverterTests."><testcase name="ReadJsonGenericExistingValueNull" assertions="0" time="0.000995" status="Passed" classname="Newtonsoft.Json.Tests.Converters.GenericJsonConverterTests">
                  
                </testcase><testcase name="ReadJsonGenericExistingValueString" assertions="0" time="0.000665" status="Passed" classname="Newtonsoft.Json.Tests.Converters.GenericJsonConverterTests">
                  
                </testcase><testcase name="ReadJsonObjectExistingValueNull" assertions="0" time="0.000827" status="Passed" classname="Newtonsoft.Json.Tests.Converters.GenericJsonConverterTests">
                  
                </testcase><testcase name="ReadJsonObjectExistingValueWrongType" assertions="0" time="0.000899" status="Passed" classname="Newtonsoft.Json.Tests.Converters.GenericJsonConverterTests">
                  
                </testcase><testcase name="WriteJsonBadType" assertions="0" time="0.001276" status="Passed" classname="Newtonsoft.Json.Tests.Converters.GenericJsonConverterTests">
                  
                </testcase><testcase name="WriteJsonGeneric" assertions="0" time="0.000729" status="Passed" classname="Newtonsoft.Json.Tests.Converters.GenericJsonConverterTests">
                  
                </testcase><testcase name="WriteJsonObject" assertions="0" time="0.000634" status="Passed" classname="Newtonsoft.Json.Tests.Converters.GenericJsonConverterTests">
                  
                </testcase></testsuite>
              <testsuite tests="14" time="0.089861" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:38:57Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests."><testcase name="BlogCodeSample" assertions="0" time="0.008068" status="Passed" classname="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests">
                  
                </testcase><testcase name="DeserializeDateTimeOffset" assertions="0" time="0.006642" status="Passed" classname="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests">
                  
                </testcase><testcase name="DeserializeNullToNonNullable" assertions="0" time="0.005326" status="Passed" classname="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests">
                  
                </testcase><testcase name="NullableDeserializeEmptyString" assertions="0" time="0.005154" status="Passed" classname="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests">
                  
                </testcase><testcase name="NullableSerializeUTC" assertions="0" time="0.004041" status="Passed" classname="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests">
                  
                </testcase><testcase name="PropertiesShouldBeSet" assertions="0" time="0.001219" status="Passed" classname="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests">
                  
                </testcase><testcase name="SerializeCustomFormattedDateTime" assertions="0" time="0.006718" status="Passed" classname="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests">
                  
                </testcase><testcase name="SerializeDateTime" assertions="0" time="0.001885" status="Passed" classname="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests">
                  
                </testcase><testcase name="SerializeDateTimeCulture" assertions="0" time="0.007506" status="Passed" classname="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests">
                  
                </testcase><testcase name="SerializeDateTimeOffset" assertions="0" time="0.001072" status="Passed" classname="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests">
                  
                </testcase><testcase name="SerializeFormattedDateTimeInvariantCulture" assertions="0" time="0.002887" status="Passed" classname="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests">
                  
                </testcase><testcase name="SerializeFormattedDateTimeNewZealandCulture" assertions="0" time="0.002185" status="Passed" classname="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests">
                  
                </testcase><testcase name="SerializeShouldChangeNonUTCDates" assertions="0" time="0.001995" status="Passed" classname="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests">
                  
                </testcase><testcase name="SerializeUTC" assertions="0" time="0.001588" status="Passed" classname="Newtonsoft.Json.Tests.Converters.IsoDateTimeConverterTests">
                  
                </testcase></testsuite>
              <testsuite tests="14" time="0.064459" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:38:57Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Converters.JavaScriptDateTimeConverterTests."><testcase name="ConverterDictionary" assertions="0" time="0.011081" status="Passed" classname="Newtonsoft.Json.Tests.Converters.JavaScriptDateTimeConverterTests">
                  
                </testcase><testcase name="ConverterList" assertions="0" time="0.004225" status="Passed" classname="Newtonsoft.Json.Tests.Converters.JavaScriptDateTimeConverterTests">
                  
                </testcase><testcase name="ConverterObject" assertions="0" time="0.004466" status="Passed" classname="Newtonsoft.Json.Tests.Converters.JavaScriptDateTimeConverterTests">
                  
                </testcase><testcase name="DeserializeDateTime" assertions="0" time="0.000760" status="Passed" classname="Newtonsoft.Json.Tests.Converters.JavaScriptDateTimeConverterTests">
                  
                </testcase><testcase name="DeserializeDateTime_MultipleArguments" assertions="0" time="0.002791" status="Passed" classname="Newtonsoft.Json.Tests.Converters.JavaScriptDateTimeConverterTests">
                  
                </testcase><testcase name="DeserializeDateTime_NoArguments" assertions="0" time="0.000879" status="Passed" classname="Newtonsoft.Json.Tests.Converters.JavaScriptDateTimeConverterTests">
                  
                </testcase><testcase name="DeserializeDateTime_NotArgumentsNotClosed" assertions="0" time="0.000778" status="Passed" classname="Newtonsoft.Json.Tests.Converters.JavaScriptDateTimeConverterTests">
                  
                </testcase><testcase name="DeserializeDateTime_NotClosed" assertions="0" time="0.000987" status="Passed" classname="Newtonsoft.Json.Tests.Converters.JavaScriptDateTimeConverterTests">
                  
                </testcase><testcase name="DeserializeDateTime_TooManyArguments" assertions="0" time="0.000925" status="Passed" classname="Newtonsoft.Json.Tests.Converters.JavaScriptDateTimeConverterTests">
                  
                </testcase><testcase name="DeserializeDateTimeOffset" assertions="0" time="0.000844" status="Passed" classname="Newtonsoft.Json.Tests.Converters.JavaScriptDateTimeConverterTests">
                  
                </testcase><testcase name="DeserializeNullToNonNullable" assertions="0" time="0.001129" status="Passed" classname="Newtonsoft.Json.Tests.Converters.JavaScriptDateTimeConverterTests">
                  
                </testcase><testcase name="SerializeDateTime" assertions="0" time="0.000627" status="Passed" classname="Newtonsoft.Json.Tests.Converters.JavaScriptDateTimeConverterTests">
                  
                </testcase><testcase name="SerializeDateTimeOffset" assertions="0" time="0.000629" status="Passed" classname="Newtonsoft.Json.Tests.Converters.JavaScriptDateTimeConverterTests">
                  
                </testcase><testcase name="SerializeNullableDateTimeClass" assertions="0" time="0.000989" status="Passed" classname="Newtonsoft.Json.Tests.Converters.JavaScriptDateTimeConverterTests">
                  
                </testcase></testsuite>
              <testsuite tests="2" time="0.029596" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:38:57Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Converters.KeyValuePairConverterTests."><testcase name="DeserializeUnexpectedEnd" assertions="0" time="0.009079" status="Passed" classname="Newtonsoft.Json.Tests.Converters.KeyValuePairConverterTests">
                  
                </testcase><testcase name="SerializeUsingInternalConverter" assertions="0" time="0.011258" status="Passed" classname="Newtonsoft.Json.Tests.Converters.KeyValuePairConverterTests">
                  
                </testcase></testsuite>
              <testsuite tests="2" time="0.014049" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:38:57Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Converters.ObjectIdConverterTests."><testcase name="Deserialize" assertions="0" time="0.004168" status="Passed" classname="Newtonsoft.Json.Tests.Converters.ObjectIdConverterTests">
                  
                </testcase><testcase name="Serialize" assertions="0" time="0.001123" status="Passed" classname="Newtonsoft.Json.Tests.Converters.ObjectIdConverterTests">
                  
                </testcase></testsuite>
              <testsuite tests="16" time="0.086517" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:38:57Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Converters.RegexConverterTests."><testcase name="ConvertEmptyRegexBson" assertions="0" time="0.002719" status="Passed" classname="Newtonsoft.Json.Tests.Converters.RegexConverterTests">
                  
                </testcase><testcase name="ConvertEmptyRegexJson" assertions="0" time="0.001241" status="Passed" classname="Newtonsoft.Json.Tests.Converters.RegexConverterTests">
                  
                </testcase><testcase name="ConvertRegexWithAllOptionsBson" assertions="0" time="0.001008" status="Passed" classname="Newtonsoft.Json.Tests.Converters.RegexConverterTests">
                  
                </testcase><testcase name="DeserializeCamelCaseAndStringEnums" assertions="0" time="0.003648" status="Passed" classname="Newtonsoft.Json.Tests.Converters.RegexConverterTests">
                  
                </testcase><testcase name="DeserializeFromBson" assertions="0" time="0.000946" status="Passed" classname="Newtonsoft.Json.Tests.Converters.RegexConverterTests">
                  
                </testcase><testcase name="DeserializeFromText" assertions="0" time="0.000864" status="Passed" classname="Newtonsoft.Json.Tests.Converters.RegexConverterTests">
                  
                </testcase><testcase name="DeserializeISerializeRegexJson" assertions="0" time="0.000836" status="Passed" classname="Newtonsoft.Json.Tests.Converters.RegexConverterTests">
                  
                </testcase><testcase name="DeserializeNullRegex" assertions="0" time="0.002338" status="Passed" classname="Newtonsoft.Json.Tests.Converters.RegexConverterTests">
                  
                </testcase><testcase name="DeserializeStringRegex" assertions="0" time="0.000836" status="Passed" classname="Newtonsoft.Json.Tests.Converters.RegexConverterTests">
                  
                </testcase><testcase name="DeserializeStringRegex_NoEndSlash_Error" assertions="0" time="0.001039" status="Passed" classname="Newtonsoft.Json.Tests.Converters.RegexConverterTests">
                  
                </testcase><testcase name="DeserializeStringRegex_NoStartAndEndSlashes_Error" assertions="0" time="0.000844" status="Passed" classname="Newtonsoft.Json.Tests.Converters.RegexConverterTests">
                  
                </testcase><testcase name="DeserializeStringRegex_NoStartSlash_Error" assertions="0" time="0.000826" status="Passed" classname="Newtonsoft.Json.Tests.Converters.RegexConverterTests">
                  
                </testcase><testcase name="SerializeCamelCaseAndStringEnums" assertions="0" time="0.030942" status="Passed" classname="Newtonsoft.Json.Tests.Converters.RegexConverterTests">
                  
                </testcase><testcase name="SerializeToBson" assertions="0" time="0.001078" status="Passed" classname="Newtonsoft.Json.Tests.Converters.RegexConverterTests">
                  
                </testcase><testcase name="SerializeToText" assertions="0" time="0.000823" status="Passed" classname="Newtonsoft.Json.Tests.Converters.RegexConverterTests">
                  
                </testcase><testcase name="WriteJsonNull" assertions="0" time="0.000763" status="Passed" classname="Newtonsoft.Json.Tests.Converters.RegexConverterTests">
                  
                </testcase></testsuite>
              <testsuite tests="57" time="0.473428" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:38:57Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Converters.StringEnumConverterTests."><testcase name="AllowIntegerValueAndDash" assertions="0" time="0.003777" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="AllowIntegerValueAndNegativeStringNumber" assertions="0" time="0.001055" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="AllowIntegerValueAndNonNamedValue" assertions="0" time="0.000897" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="AllowIntegerValueAndPositiveStringNumber" assertions="0" time="0.000855" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="AllowIntegerValueAndStringNumber" assertions="0" time="0.000834" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="CamelCaseTextFlagEnumDeserialization" assertions="0" time="0.003428" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="CamelCaseTextFlagEnumSerialization" assertions="0" time="0.001055" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="CannotPassNullArgumentToConverter" assertions="0" time="0.002362" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DataContractSerializerDuplicateNameEnumTest" assertions="0" time="0.209167" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="Deserialize_AllowIntegerValuesAttribute" assertions="0" time="0.003099" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="Deserialize_CamelCaseFromAttribute" assertions="0" time="0.002340" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="Deserialize_CamelCaseFromAttribute_Obsolete" assertions="0" time="0.002346" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="Deserialize_NotAllowIntegerValuesFromAttribute" assertions="0" time="0.002582" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="Deserialize_SnakeCaseFromAttribute" assertions="0" time="0.003033" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DeserializeEmptyStringIntoNullable" assertions="0" time="0.004274" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DeserializeEnumCaseIncensitive_ByEnumMemberValue_MixedCase" assertions="0" time="0.002467" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DeserializeEnumCaseIncensitive_ByEnumMemberValue_UpperCase" assertions="0" time="0.000614" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DeserializeEnumCaseIncensitive_ByName_LowerCase" assertions="0" time="0.000644" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DeserializeEnumCaseIncensitive_ByName_UperCase" assertions="0" time="0.000567" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DeserializeEnumCaseIncensitive_FromAttribute" assertions="0" time="0.000812" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DeserializeEnumClass" assertions="0" time="0.000818" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DeserializeEnumClassUndefined" assertions="0" time="0.000864" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DeserializeEnumMemberWithDifferentCases" assertions="0" time="0.002074" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DeserializeEnumMemberWithDifferentCasing_ByEnumMemberValue_First" assertions="0" time="0.002231" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DeserializeEnumMemberWithDifferentCasing_ByEnumMemberValue_Second" assertions="0" time="0.000661" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DeserializeEnumWithDifferentCases" assertions="0" time="0.001941" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DeserializeFlagEnum" assertions="0" time="0.000728" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DeserializeIntegerButNotAllowed" assertions="0" time="0.003303" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DeserializeInvalidString" assertions="0" time="0.001056" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DeserializeNameEnumTest" assertions="0" time="0.003062" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DeserializeNegativeEnum" assertions="0" time="0.004221" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DeserializeNegativeFlagsEnum" assertions="0" time="0.003468" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="DuplicateNameEnumTest" assertions="0" time="0.002130" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="EnumMemberPlusFlags" assertions="0" time="0.014030" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="EnumMemberWithNumbers" assertions="0" time="0.002280" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="EnumMemberWithNumbers_NoIntegerValues" assertions="0" time="0.000957" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="NamedEnumCommaCaseInsensitiveTest" assertions="0" time="0.003609" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="NamedEnumCommaTest" assertions="0" time="0.000876" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="NamedEnumCommaTest2" assertions="0" time="0.000855" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="NamedEnumDuplicateTest" assertions="0" time="0.003053" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="NamingStrategyAndCamelCaseText" assertions="0" time="0.000935" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="Serialize_CamelCaseFromAttribute" assertions="0" time="0.000503" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="Serialize_CamelCaseFromAttribute_Obsolete" assertions="0" time="0.000482" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="Serialize_SnakeCaseFromAttribute" assertions="0" time="0.000639" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="SerializeEnumClass" assertions="0" time="0.000653" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="SerializeEnumClassUndefined" assertions="0" time="0.000798" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="SerializeEnumClassWithCamelCase" assertions="0" time="0.000947" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="SerializeEnumMemberWithDifferentCases" assertions="0" time="0.000789" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="SerializeEnumWithDifferentCases" assertions="0" time="0.000567" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="SerializeFlagEnum" assertions="0" time="0.000734" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="SerializeNameEnumTest" assertions="0" time="0.000812" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="SerializeNegativeEnum" assertions="0" time="0.000670" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="SerializeNegativeFlagsEnum" assertions="0" time="0.000726" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="StringEnumConverter_CamelCaseTextCtor" assertions="0" time="0.000670" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="StringEnumConverter_NamingStrategyTypeCtor" assertions="0" time="0.001689" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="StringEnumConverter_NamingStrategyTypeCtor_Null" assertions="0" time="0.000958" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase><testcase name="StringEnumConverter_NamingStrategyTypeWithArgsCtor_Null" assertions="0" time="0.000702" status="Passed" classname="Newtonsoft.Json.Tests.Converters.StringEnumConverterTests">
                  
                </testcase></testsuite>
              <testsuite tests="17" time="0.062152" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:38:58Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests."><testcase name="ConverterDictionary" assertions="0" time="0.005723" status="Passed" classname="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests">
                  
                </testcase><testcase name="ConverterList" assertions="0" time="0.003678" status="Passed" classname="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests">
                  
                </testcase><testcase name="ConverterObject" assertions="0" time="0.003650" status="Passed" classname="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests">
                  
                </testcase><testcase name="DeserializeDateTimeOffset" assertions="0" time="0.001033" status="Passed" classname="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests">
                  
                </testcase><testcase name="DeserializeIntegerToDateTime" assertions="0" time="0.000802" status="Passed" classname="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests">
                  
                </testcase><testcase name="DeserializeInvalidStringToDateTimeOffset" assertions="0" time="0.001227" status="Passed" classname="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests">
                  
                </testcase><testcase name="DeserializeInvalidValue" assertions="0" time="0.000767" status="Passed" classname="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests">
                  
                </testcase><testcase name="DeserializeInvalidValueType" assertions="0" time="0.000812" status="Passed" classname="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests">
                  
                </testcase><testcase name="DeserializeNullToNonNullable" assertions="0" time="0.000769" status="Passed" classname="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests">
                  
                </testcase><testcase name="DeserializeNullToNullable" assertions="0" time="0.000768" status="Passed" classname="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests">
                  
                </testcase><testcase name="DeserializeStringToDateTimeOffset" assertions="0" time="0.000851" status="Passed" classname="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests">
                  
                </testcase><testcase name="SerializeDateTime" assertions="0" time="0.000624" status="Passed" classname="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests">
                  
                </testcase><testcase name="SerializeDateTimeNow" assertions="0" time="0.000851" status="Passed" classname="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests">
                  
                </testcase><testcase name="SerializeDateTimeOffset" assertions="0" time="0.000584" status="Passed" classname="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests">
                  
                </testcase><testcase name="SerializeInvalidDate" assertions="0" time="0.000745" status="Passed" classname="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests">
                  
                </testcase><testcase name="SerializeNullableDateTimeClass" assertions="0" time="0.000968" status="Passed" classname="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests">
                  
                </testcase><testcase name="WriteJsonInvalidType" assertions="0" time="0.000664" status="Passed" classname="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests">
                  
                </testcase></testsuite>
              <testsuite tests="4" time="0.032290" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:38:58Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Converters.VersionConverterTests."><testcase name="DeserializeVersionClass" assertions="0" time="0.011635" status="Passed" classname="Newtonsoft.Json.Tests.Converters.VersionConverterTests">
                  
                </testcase><testcase name="RoundtripImplicitConverter" assertions="0" time="0.005478" status="Passed" classname="Newtonsoft.Json.Tests.Converters.VersionConverterTests">
                  
                </testcase><testcase name="SerializeVersionClass" assertions="0" time="0.002506" status="Passed" classname="Newtonsoft.Json.Tests.Converters.VersionConverterTests">
                  
                </testcase><testcase name="WriteJsonNull" assertions="0" time="0.000645" status="Passed" classname="Newtonsoft.Json.Tests.Converters.VersionConverterTests">
                  
                </testcase></testsuite>
              <testsuite tests="100" time="0.809145" errors="0" failures="3" skipped="0" timestamp="2019-11-12 05:38:58Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest."><testcase name="ComplexSingleItemArrayPropertySerialization" assertions="0" time="0.080709" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="ConvertNullString" assertions="0" time="0.021694" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DateTimeParseHandlingOffset" assertions="0" time="0.009946" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DateTimeToXml_Local" assertions="0" time="0.004240" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DateTimeToXml_Local_Precision" assertions="0" time="0.001426" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DateTimeToXml_Unspecified" assertions="0" time="0.000908" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DateTimeToXml_Unspecified_Precision" assertions="0" time="0.001383" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DateTimeToXml_Utc" assertions="0" time="0.001355" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DateTimeToXml_Utc_Precision" assertions="0" time="0.000896" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="Deserialize_XDocument_NoRoot" assertions="0" time="0.001317" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="Deserialize_XDocument_NoRootWithDeclaration" assertions="0" time="0.001903" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DeserializeAttributePropertyNotAtStart" assertions="0" time="0.002511" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DeserializeBigInteger" assertions="0" time="0.002966" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DeserializeDateInElementText" assertions="0" time="0.023994" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DeserializeExample" assertions="0" time="0.004890" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DeserializeMultipleRootElements" assertions="0" time="0.001049" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DeserializeNonInt64IntegerValues" assertions="0" time="0.004459" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DeserializeUndeclaredNamespacePrefix" assertions="0" time="0.002340" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DeserializeXmlIncompatibleCharsInPropertyName" assertions="0" time="0.002382" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DeserializeXmlNode_DefaultDate" assertions="0" time="0.000601" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DeserializeXmlNodeDefaultNamespace" assertions="0" time="0.009747" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DeserializeXNode_DefaultDate" assertions="0" time="0.000756" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DeserializeXNodeDefaultNamespace" assertions="0" time="0.010551" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DeserializingBooleanValues" assertions="0" time="0.008068" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DocumentDeserialize" assertions="0" time="0.004421" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DocumentFragmentSerialize" assertions="0" time="0.006874" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="DocumentSerializeIndented" assertions="0" time="0.012720" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="EmptyNode" assertions="0" time="0.001639" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="EmptyPropertyName" assertions="0" time="0.001347" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="EmtpyElementWithArrayAttributeShouldWriteAttributes" assertions="0" time="0.002237" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="EmtpyElementWithArrayAttributeShouldWriteElement" assertions="0" time="0.000933" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="Encoding" assertions="0" time="0.000773" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="EscapingNames" assertions="0" time="0.001943" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="FailOnIncomplete" assertions="0" time="0.000818" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="FloatParseHandlingDecimal" assertions="0" time="0.004663" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="ForceJsonArray" assertions="0" time="0.002724" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="GroupElementsOfTheSameName" assertions="0" time="0.003284" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="IgnoreCultureForTypedAttributes" assertions="0" time="0.001045" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="JavaScriptConstructor" assertions="0" time="0.001062" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="MultipleNamespacesXDocument" assertions="0" time="0.001902" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="MultipleNamespacesXmlDocument" assertions="0" time="0.001520" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="MultipleNestedArraysToXml" assertions="0" time="0.001758" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="MultipleRootPropertiesAddRootElement" assertions="0" time="0.000826" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="MultipleRootPropertiesXDocument" assertions="0" time="0.000969" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="MultipleRootPropertiesXmlDocument" assertions="0" time="0.000865" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="NamespaceSerializeDeserialize" assertions="0" time="0.002799" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="NestedArrays" assertions="0" time="0.001756" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="NonStandardAttributeValues" assertions="0" time="0.002941" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="NonStandardElementsValues" assertions="0" time="0.001295" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="NoRootObject" assertions="0" time="0.001593" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="NullAttributeValue" assertions="0" time="0.000702" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="OmitRootObject" assertions="0" time="0.001054" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="OtherElementDataTypes" assertions="0" time="0.002718" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="RootObjectMultipleProperties" assertions="0" time="0.001631" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="RootPropertyError" assertions="0" time="0.001221" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="RoundTripNestedArrays" assertions="0" time="0.002315" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="Serialize_XDocument_NoRoot" assertions="0" time="0.000755" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="Serialize_XDocument_NoRootWithDeclaration" assertions="0" time="0.000843" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeAndDeserializeNullableXml" assertions="0" time="0.017363" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeAndDeserializeXElement" assertions="0" time="0.002341" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace" assertions="0" time="0.001923" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeAndDeserializeXmlElement" assertions="0" time="0.001791" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace" assertions="0" time="0.000950" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren" assertions="0" time="0.000792" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeComment" assertions="0" time="0.003577" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeDeserializeMetadataArray" assertions="0" time="0.001484" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeDeserializeMetadataArrayNoId" assertions="0" time="0.001339" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeDeserializeMetadataArrayNull" assertions="0" time="0.001120" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeDeserializeMetadataArrayWithIdLast" assertions="0" time="0.001444" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeDeserializeMetadataProperties" assertions="0" time="0.010987" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeDeserializeMetadataWithNullValue" assertions="0" time="0.001028" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeDocumentExplicitAttributeNamespace" assertions="0" time="0.000877" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeDocumentImplicitAttributeNamespace" assertions="0" time="0.000952" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeDollarProperty" assertions="0" time="0.000828" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeElementExplicitAttributeNamespace" assertions="0" time="0.002291" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeElementImplicitAttributeNamespace" assertions="0" time="0.001091" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeEmptyDocument" assertions="0" time="0.001048" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeEmptyNodeAndOmitRoot" assertions="0" time="0.000829" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeEmptyNodeAndOmitRoot_XElement" assertions="0" time="0.000738" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeExample" assertions="0" time="0.001901" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeMetadataPropertyWithBadValue" assertions="0" time="0.000952" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeNodeTypes" assertions="0" time="0.015470" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeNodeTypes_Encoding" assertions="0" time="0.001942" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeNonKnownDollarProperty" assertions="0" time="0.001320" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeXElement" assertions="0" time="0.009438" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializeXmlElement" assertions="0" time="0.006230" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SerializingXmlNamespaceScope" assertions="0" time="0.001244" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SingleItemArrayPropertySerialization" assertions="0" time="0.001609" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="SingleTextNode" assertions="0" time="0.001358" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="WriteJsonNull" assertions="0" time="0.000742" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="XmlDocumentTypeSerialize" assertions="0" time="0.026192" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="XmlNode_EncodeSpecialCharacters" assertions="0" time="0.013045" status="Failed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                  <failure message="  Expected string length 804 but was 768. Strings differ at index 1.&#10;  Expected: &quot;{\r\n  &quot;?xml&quot;: {\r\n    &quot;@version&quot;: &quot;1.0&quot;,\r\n    &quot;@standalone&quot;: &quot;n...&quot;&#10;  But was:  &quot;{\n  &quot;?xml&quot;: {\n    &quot;@version&quot;: &quot;1.0&quot;,\n    &quot;@standalone&quot;: &quot;no&quot;\n...&quot;&#10;  -------------^&#10;">at Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlNode_EncodeSpecialCharacters () [0x00035] in /root/repo/Src/Newtonsoft.Json-for-Unity.Tests/Assets/Newtonsoft.Json.Tests/Converters/XmlNodeConverterTest.cs:270
</failure>
                </testcase><testcase name="XmlNode_Roundtrip_PropertyNameWithColon" assertions="0" time="0.000827" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="XmlNode_Roundtrip_PropertyNameWithEscapedValue" assertions="0" time="0.000670" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="XmlNode_UnescapeTextContent" assertions="0" time="0.001373" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="XNode_EncodeSpecialCharacters" assertions="0" time="0.003112" status="Failed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                  <failure message="  Expected string length 804 but was 768. Strings differ at index 1.&#10;  Expected: &quot;{\r\n  &quot;?xml&quot;: {\r\n    &quot;@version&quot;: &quot;1.0&quot;,\r\n    &quot;@standalone&quot;: &quot;n...&quot;&#10;  But was:  &quot;{\n  &quot;?xml&quot;: {\n    &quot;@version&quot;: &quot;1.0&quot;,\n    &quot;@standalone&quot;: &quot;no&quot;\n...&quot;&#10;  -------------^&#10;">at Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XNode_EncodeSpecialCharacters () [0x0002f] in /root/repo/Src/Newtonsoft.Json-for-Unity.Tests/Assets/Newtonsoft.Json.Tests/Converters/XmlNodeConverterTest.cs:425
</failure>
                </testcase><testcase name="XNode_MetadataArray_EncodeSpecialCharacters" assertions="0" time="0.002053" status="Failed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                  <failure message="  Expected string length 89 but was 80. Strings differ at index 1.&#10;  Expected: &quot;{\r\n  &quot;$id&quot;: &quot;1&quot;,\r\n  &quot;$values&quot;: [\r\n    &quot;1&quot;,\r\n    &quot;2&quot;,\r\n    &quot;3&quot;...&quot;&#10;  But was:  &quot;{\n  &quot;$id&quot;: &quot;1&quot;,\n  &quot;$values&quot;: [\n    &quot;1&quot;,\n    &quot;2&quot;,\n    &quot;3&quot;,\n   ...&quot;&#10;  -------------^&#10;">at Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XNode_MetadataArray_EncodeSpecialCharacters () [0x0002f] in /root/repo/Src/Newtonsoft.Json-for-Unity.Tests/Assets/Newtonsoft.Json.Tests/Converters/XmlNodeConverterTest.cs:455
</failure>
                </testcase><testcase name="XNode_Roundtrip_PropertyNameWithColon" assertions="0" time="0.000614" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="XNode_Roundtrip_PropertyNameWithEscapedValue" assertions="0" time="0.000759" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase><testcase name="XNode_UnescapeTextContent" assertions="0" time="0.000605" status="Passed" classname="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest">
                  
                </testcase></testsuite>
            
            <testsuite tests="13" time="0.182365" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:38:59Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.DemoTests."><testcase name="DeserializationBasics1" assertions="0" time="0.002966" status="Passed" classname="Newtonsoft.Json.Tests.DemoTests">
                
              </testcase><testcase name="DeserializationBasics2" assertions="0" time="0.001450" status="Passed" classname="Newtonsoft.Json.Tests.DemoTests">
                
              </testcase><testcase name="JsonConverter" assertions="0" time="0.004245" status="Passed" classname="Newtonsoft.Json.Tests.DemoTests">
                
              </testcase><testcase name="JsonPathRegex" assertions="0" time="0.014957" status="Passed" classname="Newtonsoft.Json.Tests.DemoTests">
                
              </testcase><testcase name="MergeJson" assertions="0" time="0.009405" status="Passed" classname="Newtonsoft.Json.Tests.DemoTests">
                
              </testcase><testcase name="RoundtripTypesAndReferences" assertions="0" time="0.010263" status="Passed" classname="Newtonsoft.Json.Tests.DemoTests">
                
              </testcase><testcase name="SerializationBasics" assertions="0" time="0.004305" status="Passed" classname="Newtonsoft.Json.Tests.DemoTests">
                
              </testcase><testcase name="SerializationBasics2" assertions="0" time="0.001124" status="Passed" classname="Newtonsoft.Json.Tests.DemoTests">
                
              </testcase><testcase name="SerializationGuide" assertions="0" time="0.009790" status="Passed" classname="Newtonsoft.Json.Tests.DemoTests">
                
              </testcase><testcase name="SerializeAttributes" assertions="0" time="0.003289" status="Passed" classname="Newtonsoft.Json.Tests.DemoTests">
                
              </testcase><testcase name="SerializeDataTable" assertions="0" time="0.085936" status="Passed" classname="Newtonsoft.Json.Tests.DemoTests">
                
              </testcase><testcase name="SerializeReferencesByValue" assertions="0" time="0.004173" status="Passed" classname="Newtonsoft.Json.Tests.DemoTests">
                
              </testcase><testcase name="SerializeReferencesWithMetadata" assertions="0" time="0.001223" status="Passed" classname="Newtonsoft.Json.Tests.DemoTests">
                
              </testcase></testsuite>
            
              
              
              <testsuite tests="2" time="0.023894" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.ConditionalPropertiesTests."><testcase name="ShouldSerializeClassTest" assertions="0" time="0.007326" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.ConditionalPropertiesTests">
                  
                </testcase><testcase name="ShouldSerializeContractResolverTest" assertions="0" time="0.008105" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.ConditionalPropertiesTests">
                  
                </testcase></testsuite>
              <testsuite tests="3" time="0.012428" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests."><testcase name="DeserializeXmlNode" assertions="0" time="0.000777" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests">
                  
                </testcase><testcase name="ForceJsonArray" assertions="0" time="0.000895" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests">
                  
                </testcase><testcase name="SerializeXmlNode" assertions="0" time="0.000746" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests">
                  
                </testcase></testsuite>
              <testsuite tests="13" time="0.086125" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.LinqToJsonTests."><testcase name="LinqToJsonBasic" assertions="0" time="0.002164" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests">
                  
                </testcase><testcase name="LinqToJsonCreateDeclaratively" assertions="0" time="0.003687" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests">
                  
                </testcase><testcase name="LinqToJsonCreateFromObject" assertions="0" time="0.016687" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests">
                  
                </testcase><testcase name="LinqToJsonCreateNormal" assertions="0" time="0.000867" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests">
                  
                </testcase><testcase name="LinqToJsonCreateParse" assertions="0" time="0.000629" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests">
                  
                </testcase><testcase name="LinqToJsonCreateParseArray" assertions="0" time="0.000490" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests">
                  
                </testcase><testcase name="LinqToJsonDeserializeExample" assertions="0" time="0.004402" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests">
                  
                </testcase><testcase name="LinqToJsonQuerying" assertions="0" time="0.013514" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests">
                  
                </testcase><testcase name="LinqToJsonReadObject" assertions="0" time="0.000895" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests">
                  
                </testcase><testcase name="LinqToJsonSimpleQuerying" assertions="0" time="0.001317" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests">
                  
                </testcase><testcase name="SelectTokenComplex" assertions="0" time="0.005882" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests">
                  
                </testcase><testcase name="SelectTokenLinq" assertions="0" time="0.003749" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests">
                  
                </testcase><testcase name="SelectTokenSimple" assertions="0" time="0.001049" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.LinqToJsonTests">
                  
                </testcase></testsuite>
              
                
                
                  
                  <testsuite tests="1" time="0.009993" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Bson.DeserializeFromBson."><testcase name="Example" assertions="0" time="0.002712" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Bson.DeserializeFromBson">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.013052" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Bson.DeserializeFromBsonCollection."><testcase name="Example" assertions="0" time="0.004727" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Bson.DeserializeFromBsonCollection">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.010858" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Bson.SerializeToBson."><testcase name="Example" assertions="0" time="0.002950" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Bson.SerializeToBson">
                      
                    </testcase></testsuite>
                
                
                  
                  <testsuite tests="1" time="0.018662" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader."><testcase name="Example" assertions="0" time="0.010709" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonReader">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.067537" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonWriter."><testcase name="Example" assertions="0" time="0.058241" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Json.CustomJsonWriter">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.011091" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader."><testcase name="Example" assertions="0" time="0.002777" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.012619" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadMultipleContentWithJsonReader."><testcase name="Example" assertions="0" time="0.004782" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadMultipleContentWithJsonReader">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.011802" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter."><testcase name="Example" assertions="0" time="0.001413" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter">
                      
                    </testcase></testsuite>
                
                
                  
                  <testsuite tests="1" time="0.009947" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.JsonPath.ErrorWhenNoMatchQuery."><testcase name="Example" assertions="0" time="0.001755" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.JsonPath.ErrorWhenNoMatchQuery">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.012939" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.JsonPath.QueryJsonSelectToken."><testcase name="Example" assertions="0" time="0.001987" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.JsonPath.QueryJsonSelectToken">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.014133" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.JsonPath.QueryJsonSelectTokenEscaped."><testcase name="Example" assertions="0" time="0.001531" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.JsonPath.QueryJsonSelectTokenEscaped">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.015305" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.JsonPath.QueryJsonSelectTokenJsonPath."><testcase name="Example" assertions="0" time="0.007963" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.JsonPath.QueryJsonSelectTokenJsonPath">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.012771" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.JsonPath.QueryJsonSelectTokenWithLinq."><testcase name="Example" assertions="0" time="0.004905" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.JsonPath.QueryJsonSelectTokenWithLinq">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.010097" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.JsonPath.RegexQuery."><testcase name="Example" assertions="0" time="0.001799" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.JsonPath.RegexQuery">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.009370" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.JsonPath.StrictEqualsQuery."><testcase name="Example" assertions="0" time="0.001576" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.JsonPath.StrictEqualsQuery">
                      
                    </testcase></testsuite>
                
                
                  
                  <testsuite tests="1" time="0.014280" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.Clone."><testcase name="Example" assertions="0" time="0.004191" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.Clone">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.018967" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject."><testcase name="Example" assertions="0" time="0.009686" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.009904" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonCollectionInitializer."><testcase name="Example" assertions="0" time="0.001475" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonCollectionInitializer">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.014287" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively."><testcase name="Example" assertions="0" time="0.005984" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.114848" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDynamic."><testcase name="Example" assertions="0" time="0.106756" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDynamic">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.010078" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:00Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter."><testcase name="Example" assertions="0" time="0.001242" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.008729" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonManually."><testcase name="Example" assertions="0" time="0.001133" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonManually">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.010638" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateReader."><testcase name="Example" assertions="0" time="0.002822" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateReader">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.009895" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateWriter."><testcase name="Example" assertions="0" time="0.001399" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateWriter">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.009648" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeepEquals."><testcase name="Example" assertions="0" time="0.001588" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeepEquals">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.128250" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq."><testcase name="Example" assertions="0" time="0.120212" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.013789" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.FromObject."><testcase name="Example" assertions="0" time="0.004954" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.FromObject">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.009968" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.JObjectProperties."><testcase name="Example" assertions="0" time="0.002300" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JObjectProperties">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.010254" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.JTokenAnnotation."><testcase name="Example" assertions="0" time="0.002667" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JTokenAnnotation">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.012026" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast."><testcase name="Example" assertions="0" time="0.004459" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueCast">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.009101" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueValue."><testcase name="Example" assertions="0" time="0.001071" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.JValueValue">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.008868" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.MergeJson."><testcase name="Example" assertions="0" time="0.001081" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.MergeJson">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.012175" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.ModifyJson."><testcase name="Example" assertions="0" time="0.004022" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ModifyJson">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.010525" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.ParseJsonAny."><testcase name="Example" assertions="0" time="0.002053" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ParseJsonAny">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.008736" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.ParseJsonArray."><testcase name="Example" assertions="0" time="0.000904" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ParseJsonArray">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.009285" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.ParseJsonObject."><testcase name="Example" assertions="0" time="0.001081" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ParseJsonObject">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.009859" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJson."><testcase name="Example" assertions="0" time="0.001788" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJson">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.054035" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonDynamic."><testcase name="Example" assertions="0" time="0.044248" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonDynamic">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.010448" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonIgnoreCase."><testcase name="Example" assertions="0" time="0.001532" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonIgnoreCase">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.016768" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonLinq."><testcase name="Example" assertions="0" time="0.003340" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonLinq">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.010540" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.ReadJson."><testcase name="Example" assertions="0" time="0.001158" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ReadJson">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.008973" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.ReadJTokenFromBson."><testcase name="Example" assertions="0" time="0.001057" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ReadJTokenFromBson">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.013046" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.SerializeWithLinq."><testcase name="Example" assertions="0" time="0.004757" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.SerializeWithLinq">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.014538" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToObjectComplex."><testcase name="Example" assertions="0" time="0.006478" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToObjectComplex">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.010367" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToObjectGeneric."><testcase name="Example" assertions="0" time="0.002350" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToObjectGeneric">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.010782" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToObjectType."><testcase name="Example" assertions="0" time="0.002127" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToObjectType">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.009179" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString."><testcase name="Example" assertions="0" time="0.001362" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.009024" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToStringJsonConverter."><testcase name="Example" assertions="0" time="0.001427" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToStringJsonConverter">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.009352" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteJTokenToBson."><testcase name="Example" assertions="0" time="0.001211" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteJTokenToBson">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.009966" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile."><testcase name="Example" assertions="0" time="0.002612" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile">
                      
                    </testcase></testsuite>
                
                
                  
                  <testsuite tests="1" time="0.032750" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomContractResolver."><testcase name="Example" assertions="0" time="0.021164" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomContractResolver">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.015894" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter."><testcase name="Example" assertions="0" time="0.007578" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.012433" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverterGeneric."><testcase name="Example" assertions="0" time="0.004129" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverterGeneric">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.009655" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter."><testcase name="Example" assertions="0" time="0.001934" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomTraceWriter">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.021287" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DataContractAndDataMember."><testcase name="Example" assertions="0" time="0.006132" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DataContractAndDataMember">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.017915" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultSettings."><testcase name="Example" assertions="0" time="0.010180" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultSettings">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.012576" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueAttributeIgnore."><testcase name="Example" assertions="0" time="0.004474" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueAttributeIgnore">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.014067" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore."><testcase name="Example" assertions="0" time="0.005182" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.011394" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeAnonymousType."><testcase name="Example" assertions="0" time="0.003312" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeAnonymousType">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.009401" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCollection."><testcase name="Example" assertions="0" time="0.001534" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCollection">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.012654" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling."><testcase name="Example" assertions="0" time="0.004556" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.014491" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter."><testcase name="Example" assertions="0" time="0.006540" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeCustomCreationConverter">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.032859" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:01Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeDataSet."><testcase name="Example" assertions="0" time="0.025089" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeDataSet">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.015171" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeDateFormatString."><testcase name="Example" assertions="0" time="0.007089" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeDateFormatString">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.011631" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeDictionary."><testcase name="Example" assertions="0" time="0.003937" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeDictionary">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.021268" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeExtensionData."><testcase name="Example" assertions="0" time="0.010585" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeExtensionData">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.013342" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeMetadataPropertyHandling."><testcase name="Example" assertions="0" time="0.005630" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeMetadataPropertyHandling">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.012220" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeMissingMemberHandling."><testcase name="Example" assertions="0" time="0.004540" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeMissingMemberHandling">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.028533" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObject."><testcase name="Example" assertions="0" time="0.004323" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObject">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.011842" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling."><testcase name="Example" assertions="0" time="0.004609" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeObjectCreationHandling">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.010324" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithJsonSerializerFromFile."><testcase name="Example" assertions="0" time="0.003071" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeWithJsonSerializerFromFile">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.012846" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ErrorHandlingAttribute."><testcase name="Example" assertions="0" time="0.005060" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ErrorHandlingAttribute">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.013245" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ErrorHandlingEvent."><testcase name="Example" assertions="0" time="0.005975" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ErrorHandlingEvent">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.010767" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute."><testcase name="Example" assertions="0" time="0.002941" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.010927" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass."><testcase name="Example" assertions="0" time="0.002490" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.012923" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeProperty."><testcase name="Example" assertions="0" time="0.004499" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeProperty">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.011212" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonObjectAttributeOptIn."><testcase name="Example" assertions="0" time="0.003536" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonObjectAttributeOptIn">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.012103" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonObjectAttributeOverrideIEnumerable."><testcase name="Example" assertions="0" time="0.004348" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonObjectAttributeOverrideIEnumerable">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.018742" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyItemLevelSetting."><testcase name="Example" assertions="0" time="0.011068" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyItemLevelSetting">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.011042" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyName."><testcase name="Example" assertions="0" time="0.003289" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyName">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.013800" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyOrder."><testcase name="Example" assertions="0" time="0.005746" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyOrder">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.011572" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyPropertyLevelSetting."><testcase name="Example" assertions="0" time="0.004193" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyPropertyLevelSetting">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.015110" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyRequired."><testcase name="Example" assertions="0" time="0.007507" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyRequired">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.015826" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.MaxDepth."><testcase name="Example" assertions="0" time="0.008036" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.MaxDepth">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.012127" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NamingStrategyAttributes."><testcase name="Example" assertions="0" time="0.004076" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NamingStrategyAttributes">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.014472" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NamingStrategyCamelCase."><testcase name="Example" assertions="0" time="0.006358" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NamingStrategyCamelCase">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.020409" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NamingStrategySkipDictionaryKeys."><testcase name="Example" assertions="0" time="0.012779" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NamingStrategySkipDictionaryKeys">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.015522" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NamingStrategySkipSpecifiedNames."><testcase name="Example" assertions="0" time="0.006701" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NamingStrategySkipSpecifiedNames">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.015390" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NamingStrategySnakeCase."><testcase name="Example" assertions="0" time="0.007103" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NamingStrategySnakeCase">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.012804" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NullValueHandlingIgnore."><testcase name="Example" assertions="0" time="0.005349" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NullValueHandlingIgnore">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.013464" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PopulateObject."><testcase name="Example" assertions="0" time="0.005575" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PopulateObject">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.019705" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject."><testcase name="Example" assertions="0" time="0.011623" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PreserveReferencesHandlingObject">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.011782" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore."><testcase name="Example" assertions="0" time="0.003739" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.PropertyJsonIgnore">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.011189" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ReferenceLoopHandlingIgnore."><testcase name="Example" assertions="0" time="0.003544" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.ReferenceLoopHandlingIgnore">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.015934" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializationCallbackAttributes."><testcase name="Example" assertions="0" time="0.007438" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializationCallbackAttributes">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.008788" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeCollection."><testcase name="Example" assertions="0" time="0.000980" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeCollection">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.014126" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeConditionalProperty."><testcase name="Example" assertions="0" time="0.006900" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeConditionalProperty">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.012510" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeContractResolver."><testcase name="Example" assertions="0" time="0.004327" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeContractResolver">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.016919" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDataSet."><testcase name="Example" assertions="0" time="0.009332" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDataSet">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.009524" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateFormatHandling."><testcase name="Example" assertions="0" time="0.001910" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateFormatHandling">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.010561" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateFormatString."><testcase name="Example" assertions="0" time="0.002811" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateFormatString">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.016127" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateTimeZoneHandling."><testcase name="Example" assertions="0" time="0.008636" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateTimeZoneHandling">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.011457" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDictionary."><testcase name="Example" assertions="0" time="0.003626" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDictionary">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.017377" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeExtensionData."><testcase name="Example" assertions="0" time="0.010015" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeExtensionData">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.013942" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeObject."><testcase name="Example" assertions="0" time="0.005729" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeObject">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.014611" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeRawJson."><testcase name="Example" assertions="0" time="0.006355" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeRawJson">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.011628" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeSerializationBinder."><testcase name="Example" assertions="0" time="0.004312" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeSerializationBinder">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.040175" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling."><testcase name="Example" assertions="0" time="0.032320" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.012005" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeUnindentedJson."><testcase name="Example" assertions="0" time="0.004341" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeUnindentedJson">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.021310" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters."><testcase name="Example" assertions="0" time="0.012930" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonConverters">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.010355" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonSerializerToFile."><testcase name="Example" assertions="0" time="0.003062" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeWithJsonSerializerToFile">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.012656" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:02Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Serializer.TraceWriter."><testcase name="Example" assertions="0" time="0.005287" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.TraceWriter">
                      
                    </testcase></testsuite>
                
                
                  
                  <testsuite tests="1" time="0.008484" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:03Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertJsonToXml."><testcase name="Example" assertions="0" time="0.001674" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertJsonToXml">
                      
                    </testcase></testsuite>
                  <testsuite tests="1" time="0.009411" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:03Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson."><testcase name="Example" assertions="0" time="0.001890" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson">
                      
                    </testcase></testsuite>
                
              
              <testsuite tests="19" time="0.166816" errors="0" failures="1" skipped="0" timestamp="2019-11-12 05:39:03Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.SerializationTests."><testcase name="ContractResolver" assertions="0" time="0.005484" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.SerializationTests">
                  
                </testcase><testcase name="CustomCreationConverterExample" assertions="0" time="0.011196" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.SerializationTests">
                  
                </testcase><testcase name="JsonSerializerToStream" assertions="0" time="0.018116" status="Failed" classname="Newtonsoft.Json.Tests.Documentation.SerializationTests">
                  
                  <failure message="System.IO.IOException : Win32 IO returned 50. Path: /root/repo/Src/Newtonsoft.Json-for-Unity.Tests/Assets/StreamingAssets/c:\json.txt">  at System.IO.FileStream..ctor (System.String path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.Int32 bufferSize, System.Boolean anonymous, System.IO.FileOptions options) [0x0019e] in &lt;567df3e0919241ba98db88bec4c6696f&gt;:0 
  at System.IO.FileStream..ctor (System.String path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.Int32 bufferSize, System.IO.FileOptions options, System.String msgPath, System.Boolean bFromProxy, System.Boolean useLongPath, System.Boolean checkHost) [0x00000] in &lt;567df3e0919241ba98db88bec4c6696f&gt;:0 
  at (wrapper remoting-invoke-with-check) System.IO.FileStream..ctor(string,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,int,System.IO.FileOptions,string,bool,bool,bool)
  at System.IO.StreamWriter.CreateFile (System.String path, System.Boolean append, System.Boolean checkHost) [0x0001c] in &lt;567df3e0919241ba98db88bec4c6696f&gt;:0 
  at System.IO.StreamWriter..ctor (System.String path, System.Boolean append, System.Text.Encoding encoding, System.Int32 bufferSize, System.Boolean checkHost) [0x00055] in &lt;567df3e0919241ba98db88bec4c6696f&gt;:0 
  at System.IO.StreamWriter..ctor (System.String path, System.Boolean append, System.Text.Encoding encoding, System.Int32 bufferSize) [0x00000] in &lt;567df3e0919241ba98db88bec4c6696f&gt;:0 
  at System.IO.StreamWriter..ctor (System.String path) [0x00008] in &lt;567df3e0919241ba98db88bec4c6696f&gt;:0 
  at Newtonsoft.Json.Tests.Documentation.SerializationTests+StreamWriter..ctor (System.String path) [0x00000] in /root/repo/Src/Newtonsoft.Json-for-Unity.Tests/Assets/Newtonsoft.Json.Tests/Documentation/SerializationTests.cs:59 
  at (wrapper remoting-invoke-with-check) Newtonsoft.Json.Tests.Documentation.SerializationTests+StreamWriter..ctor(string)
  at Newtonsoft.Json.Tests.Documentation.SerializationTests.JsonSerializerToStream () [0x0003a] in /root/repo/Src/Newtonsoft.Json-for-Unity.Tests/Assets/Newtonsoft.Json.Tests/Documentation/SerializationTests.cs:104 
  at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke(System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00032] in &lt;567df3e0919241ba98db88bec4c6696f&gt;:0 </failure>
                </testcase><testcase name="PreservingObjectReferencesOff" assertions="0" time="0.007612" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.SerializationTests">
                  
                </testcase><testcase name="PreservingObjectReferencesOn" assertions="0" time="0.002318" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.SerializationTests">
                  
                </testcase><testcase name="ReducingSerializedJsonSizeContractResolverExample" assertions="0" time="0.015570" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.SerializationTests">
                  
                </testcase><testcase name="ReducingSerializedJsonSizeDefaultValueHandlingExample" assertions="0" time="0.005416" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.SerializationTests">
                  
                </testcase><testcase name="ReducingSerializedJsonSizeNullValueHandlingExample" assertions="0" time="0.005140" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.SerializationTests">
                  
                </testcase><testcase name="SerializationCallbacksExample" assertions="0" time="0.007905" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.SerializationTests">
                  
                </testcase><testcase name="SerializationErrorHandling" assertions="0" time="0.002113" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.SerializationTests">
                  
                </testcase><testcase name="SerializationErrorHandlingAttributeExample" assertions="0" time="0.005311" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.SerializationTests">
                  
                </testcase><testcase name="SerializationErrorHandlingWithParent" assertions="0" time="0.000796" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.SerializationTests">
                  
                </testcase><testcase name="SerializeMultidimensionalArrayExample" assertions="0" time="0.010850" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.SerializationTests">
                  
                </testcase><testcase name="SerializeObject" assertions="0" time="0.001186" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.SerializationTests">
                  
                </testcase><testcase name="SerializingCollectionsDeserializing" assertions="0" time="0.001181" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.SerializationTests">
                  
                </testcase><testcase name="SerializingCollectionsDeserializingDictionaries" assertions="0" time="0.001013" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.SerializationTests">
                  
                </testcase><testcase name="SerializingCollectionsSerializing" assertions="0" time="0.002347" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.SerializationTests">
                  
                </testcase><testcase name="SerializingPartialJsonFragmentsExample" assertions="0" time="0.004645" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.SerializationTests">
                  
                </testcase><testcase name="WriteJsonDates" assertions="0" time="0.002777" status="Passed" classname="Newtonsoft.Json.Tests.Documentation.SerializationTests">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.015026" errors="0" failures="1" skipped="0" timestamp="2019-11-12 05:39:04Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Documentation.TraceWriterTests."><testcase name="MemoryTraceWriterTest" assertions="0" time="0.007110" status="Failed" classname="Newtonsoft.Json.Tests.Documentation.TraceWriterTests">
                  
                  <failure message="  Expected: 916&#10;  But was:  901&#10;">at Newtonsoft.Json.Tests.Documentation.TraceWriterTests.MemoryTraceWriterTest () [0x00080] in /root/repo/Src/Newtonsoft.Json-for-Unity.Tests/Assets/Newtonsoft.Json.Tests/Documentation/TraceWriterTests.cs:169
</failure>
                </testcase></testsuite>
            
            <testsuite tests="5" time="0.048211" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.ExceptionTests."><testcase name="BinarySerializeException" assertions="0" time="0.030532" status="Passed" classname="Newtonsoft.Json.Tests.ExceptionTests">
                
              </testcase><testcase name="JsonReaderException" assertions="0" time="0.001137" status="Passed" classname="Newtonsoft.Json.Tests.ExceptionTests">
                
              </testcase><testcase name="JsonSchemaException" assertions="0" time="0.000925" status="Passed" classname="Newtonsoft.Json.Tests.ExceptionTests">
                
              </testcase><testcase name="JsonSerializationException" assertions="0" time="0.000621" status="Passed" classname="Newtonsoft.Json.Tests.ExceptionTests">
                
              </testcase><testcase name="JsonWriterException" assertions="0" time="0.001182" status="Passed" classname="Newtonsoft.Json.Tests.ExceptionTests">
                
              </testcase></testsuite>
            
              
              
              <testsuite tests="2" time="0.035254" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue0198."><testcase name="Test_Collection" assertions="0" time="0.006367" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue0198">
                  
                </testcase><testcase name="Test_List" assertions="0" time="0.020710" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue0198">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.025882" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue0573."><testcase name="Test" assertions="0" time="0.019573" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue0573">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.012961" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1307."><testcase name="Test" assertions="0" time="0.006232" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1307">
                  
                </testcase></testsuite>
              <testsuite tests="5" time="0.018302" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1321."><testcase name="Test" assertions="0" time="0.001946" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1321">
                  
                </testcase><testcase name="Test2" assertions="0" time="0.000962" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1321">
                  
                </testcase><testcase name="Test3" assertions="0" time="0.000776" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1321">
                  
                </testcase><testcase name="Test4" assertions="0" time="0.001029" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1321">
                  
                </testcase><testcase name="Test5" assertions="0" time="0.000879" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1321">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.017833" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1322."><testcase name="Test" assertions="0" time="0.011293" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1322">
                  
                </testcase></testsuite>
              <testsuite tests="2" time="0.029269" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1327."><testcase name="Test_XmlNode" assertions="0" time="0.008662" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1327">
                  
                </testcase><testcase name="Test_XObject" assertions="0" time="0.012485" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1327">
                  
                </testcase></testsuite>
              <testsuite tests="2" time="0.021913" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1351."><testcase name="Test" assertions="0" time="0.011840" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1351">
                  
                </testcase><testcase name="Test_Replace" assertions="0" time="0.001610" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1351">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.014658" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1353."><testcase name="Test" assertions="0" time="0.008030" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1353">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.012103" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1362."><testcase name="Test" assertions="0" time="0.005677" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1362">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.007471" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1396."><testcase name="Test" assertions="0" time="0.001005" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1396">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.028688" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1445."><testcase name="Test" assertions="0" time="0.022240" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1445">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.007527" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1460."><testcase name="Test" assertions="0" time="0.000867" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1460">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.013177" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1461."><testcase name="Test" assertions="0" time="0.006410" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1461">
                  
                </testcase></testsuite>
              
                
              
              <testsuite tests="2" time="0.021986" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1545."><testcase name="Test_Multidimensional" assertions="0" time="0.003204" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1545">
                  
                </testcase><testcase name="Test_Populate" assertions="0" time="0.009786" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1545">
                  
                </testcase></testsuite>
              <testsuite tests="2" time="0.015852" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1552."><testcase name="Test_Error" assertions="0" time="0.004914" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1552">
                  
                </testcase><testcase name="Test_Ignore" assertions="0" time="0.002428" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1552">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.008880" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1561."><testcase name="Test" assertions="0" time="0.002503" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1561">
                  
                </testcase></testsuite>
              <testsuite tests="2" time="0.012181" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1566."><testcase name="Github_deserialize_pr_state_changes_requested_should_be_case_insensitive" assertions="0" time="0.003357" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1566">
                  
                </testcase><testcase name="Github_deserialize_pr_state_should_be_case_insensitive" assertions="0" time="0.000600" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1566">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.007800" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1574."><testcase name="Test" assertions="0" time="0.001428" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1574">
                  
                </testcase></testsuite>
              <testsuite tests="2" time="0.018349" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1576."><testcase name="Test" assertions="0" time="0.006728" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1576">
                  
                </testcase><testcase name="Test_WithJsonConverterAttribute" assertions="0" time="0.003759" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1576">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.007232" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1592."><testcase name="Test" assertions="0" time="0.000856" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1592">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.010007" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1593."><testcase name="Test" assertions="0" time="0.003847" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1593">
                  
                </testcase></testsuite>
              <testsuite tests="2" time="0.012618" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1598."><testcase name="Test" assertions="0" time="0.003164" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1598">
                  
                </testcase><testcase name="Test_SubClass" assertions="0" time="0.001360" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1598">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.013341" errors="0" failures="1" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1619."><testcase name="Test" assertions="0" time="0.006183" status="Failed" classname="Newtonsoft.Json.Tests.Issues.Issue1619">
                  
                  <failure message="  Expected string length 18 but was 65. Strings differ at index 8.&#10;  Expected: &quot;...r&quot;:&quot;c:\\\\temp&quot;}&quot;&#10;  But was:  &quot;...r&quot;:&quot;/root/repo/Src/Newtonsoft.Json-for-Unity.Tests/c:\\\\temp&quot;}&quot;&#10;  ------------------^&#10;">at Newtonsoft.Json.Tests.Issues.Issue1619.Test () [0x0002d] in /root/repo/Src/Newtonsoft.Json-for-Unity.Tests/Assets/Newtonsoft.Json.Tests/Issues/Issue1619.cs:50
</failure>
                </testcase></testsuite>
              <testsuite tests="1" time="0.013585" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1642."><testcase name="Test" assertions="0" time="0.007308" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1642">
                  
                </testcase></testsuite>
              <testsuite tests="2" time="0.014883" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1682."><testcase name="Test_Deserialize" assertions="0" time="0.003495" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1682">
                  
                </testcase><testcase name="Test_Serialize" assertions="0" time="0.003488" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1682">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.007534" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1708."><testcase name="Test_DateTime" assertions="0" time="0.000952" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1708">
                  
                </testcase></testsuite>
              <testsuite tests="2" time="0.010715" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1711."><testcase name="Test_Raw" assertions="0" time="0.002311" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1711">
                  
                </testcase><testcase name="Test_String" assertions="0" time="0.000700" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1711">
                  
                </testcase></testsuite>
              <testsuite tests="3" time="0.020413" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1719."><testcase name="Test" assertions="0" time="0.004389" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1719">
                  
                </testcase><testcase name="Test_DefaultValue" assertions="0" time="0.002908" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1719">
                  
                </testcase><testcase name="Test_PreviousWorkaround" assertions="0" time="0.003693" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1719">
                  
                </testcase></testsuite>
              <testsuite tests="4" time="0.024705" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1725."><testcase name="Test_In" assertions="0" time="0.004973" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1725">
                  
                </testcase><testcase name="Test_InNullable" assertions="0" time="0.003223" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1725">
                  
                </testcase><testcase name="Test_Ref" assertions="0" time="0.001838" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1725">
                  
                </testcase><testcase name="Test_RefNullable" assertions="0" time="0.002183" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1725">
                  
                </testcase></testsuite>
              <testsuite tests="2" time="0.012499" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1734."><testcase name="Test_XmlNode" assertions="0" time="0.002919" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1734">
                  
                </testcase><testcase name="Test_XNode" assertions="0" time="0.002188" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1734">
                  
                </testcase></testsuite>
              <testsuite tests="2" time="0.012097" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1752."><testcase name="Test_EmptyString" assertions="0" time="0.002288" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1752">
                  
                </testcase><testcase name="Test_Null" assertions="0" time="0.001735" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1752">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.007471" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1778."><testcase name="Test" assertions="0" time="0.001072" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1778">
                  
                </testcase></testsuite>
              <testsuite tests="2" time="0.017326" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1796."><testcase name="Test" assertions="0" time="0.005158" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1796">
                  
                </testcase><testcase name="Test_Generic" assertions="0" time="0.004482" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1796">
                  
                </testcase></testsuite>
              <testsuite tests="2" time="0.029361" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:05Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1798."><testcase name="Test" assertions="0" time="0.014290" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1798">
                  
                </testcase><testcase name="Test_DefaultContractResolver" assertions="0" time="0.006897" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1798">
                  
                </testcase></testsuite>
              <testsuite tests="2" time="0.014881" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:06Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1834."><testcase name="Test" assertions="0" time="0.003517" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1834">
                  
                </testcase><testcase name="Test_UnsetRequired" assertions="0" time="0.003407" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1834">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.009943" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:06Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1837."><testcase name="AllStrictEqualityTests" assertions="0" time="0.003355" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1837">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.009512" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:06Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1874."><testcase name="Test" assertions="0" time="0.003350" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1874">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.011683" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:06Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Issues.Issue1877."><testcase name="Test" assertions="0" time="0.005563" status="Passed" classname="Newtonsoft.Json.Tests.Issues.Issue1877">
                  
                </testcase></testsuite>
            
            <testsuite tests="3" time="0.013251" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:06Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.JsonArrayAttributeTests."><testcase name="DefaultValueHandlingTest" assertions="0" time="0.001140" status="Passed" classname="Newtonsoft.Json.Tests.JsonArrayAttributeTests">
                
              </testcase><testcase name="IsReferenceTest" assertions="0" time="0.001074" status="Passed" classname="Newtonsoft.Json.Tests.JsonArrayAttributeTests">
                
              </testcase><testcase name="NullValueHandlingTest" assertions="0" time="0.000909" status="Passed" classname="Newtonsoft.Json.Tests.JsonArrayAttributeTests">
                
              </testcase></testsuite>
            <testsuite tests="53" time="0.343005" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:06Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.JsonConvertTest."><testcase name="CustomDoubleRounding" assertions="0" time="0.008833" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="CustonNameTableTest" assertions="0" time="0.001133" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="DecimalToString" assertions="0" time="0.001463" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="DefaultSettings" assertions="0" time="0.002750" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="DefaultSettings_Create" assertions="0" time="0.001095" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="DefaultSettings_CreateWithSettings" assertions="0" time="0.001922" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="DefaultSettings_Example" assertions="0" time="0.001087" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="DefaultSettings_Override" assertions="0" time="0.000748" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="DefaultSettings_Override_JsonConverterOrder" assertions="0" time="0.003585" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="DeserializeObject" assertions="0" time="0.003564" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="DeserializeObject_DateTime_EmptyString" assertions="0" time="0.001016" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="DeserializeObject_Decimal_EmptyString" assertions="0" time="0.000985" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="DeserializeObject_EmptyString" assertions="0" time="0.000670" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="DeserializeObject_Integer" assertions="0" time="0.000530" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="DeserializeObject_Integer_EmptyString" assertions="0" time="0.000803" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="DeserializeValueObjects" assertions="0" time="0.002076" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="EnumToString" assertions="0" time="0.000619" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="EscapeJavaScriptString" assertions="0" time="0.001472" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="EscapeJavaScriptString_UnicodeLinefeeds" assertions="0" time="0.000716" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="FloatToString" assertions="0" time="0.001119" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="GenericBaseClassSerialization" assertions="0" time="0.002687" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="GuidToString" assertions="0" time="0.000899" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="IntegerLengthOverflows" assertions="0" time="0.003271" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="JsonConverterConstructor_OverloadsWithArrayParams" assertions="0" time="0.003986" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="JsonConverterConstructor_OverloadsWithBaseTypes" assertions="0" time="0.002006" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="JsonConverterConstructor_OverloadsWithPrimitiveParams" assertions="0" time="0.021905" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="JsonConverterConstructor_OverloadWithTypeParam" assertions="0" time="0.019401" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="JsonConverterConstructor_OverloadWithUnhandledParam_FallbackToObject" assertions="0" time="0.002356" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="MaximumDateTimeLength" assertions="0" time="0.000649" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="MaximumDateTimeMicrosoftDateFormatLength" assertions="0" time="0.000654" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="MaximumDateTimeOffsetLength" assertions="0" time="0.000756" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="NameTableTest" assertions="0" time="0.002298" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="ObjectToString" assertions="0" time="0.004932" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="ParametersPassedToJsonConverterConstructor" assertions="0" time="0.006837" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="ParseIsoDate" assertions="0" time="0.000718" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="PopulateObjectWithHeaderComment" assertions="0" time="0.002005" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="PopulateObjectWithMultipleHeaderComment" assertions="0" time="0.000679" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="PopulateObjectWithNoContent" assertions="0" time="0.000824" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="PopulateObjectWithOnlyComment" assertions="0" time="0.001175" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="SerializeObjectDateTimeZoneHandling" assertions="0" time="0.000611" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="ShouldNotPopulateContructorArgumentEnumerableObject" assertions="0" time="0.002683" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="ShouldNotPopulateEnumerableObjectProperty" assertions="0" time="0.002160" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="ShouldNotPopulateReadOnlyEnumerableObjectWithDefaultConstructor" assertions="0" time="0.001926" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="ShouldNotPopulateReadOnlyEnumerableObjectWithNonDefaultConstructor" assertions="0" time="0.001877" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="ShouldNotRequireIgnoredPropertiesWithItemsRequired" assertions="0" time="0.003132" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="StringEscaping" assertions="0" time="0.000622" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="TestInvalidStrings" assertions="0" time="0.000829" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="TestJsonDateTimeOffsetRoundtrip" assertions="0" time="0.001237" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="ToStringEnsureEscapedArrayLength" assertions="0" time="0.000547" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="ToStringInvalid" assertions="0" time="0.000858" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="ToStringStringEscapeHandling" assertions="0" time="0.000774" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="WriteDateTime" assertions="0" time="0.066395" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase><testcase name="WrongParametersPassedToJsonConvertConstructorShouldThrow" assertions="0" time="0.002696" status="Passed" classname="Newtonsoft.Json.Tests.JsonConvertTest">
                
              </testcase></testsuite>
            
              
              <testsuite tests="78" time="0.565359" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:06Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests."><testcase name="BadCommentStart" assertions="0" time="0.001217" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ErrorReadingComment" assertions="0" time="0.001507" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="EscapedPathInExceptionMessage" assertions="0" time="0.001065" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="MatchWithInsufficentCharacters" assertions="0" time="0.000918" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="MatchWithNoTrailingSeparator" assertions="0" time="0.000815" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="MatchWithWrongCharacters" assertions="0" time="0.000759" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="MaxDepth" assertions="0" time="0.000979" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="MaxDepthDoesNotRecursivelyError" assertions="0" time="0.001769" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="MissingColon" assertions="0" time="0.001060" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="NullTextReader" assertions="0" time="0.001113" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ParseAdditionalContent_Comma" assertions="0" time="0.000755" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ParseAdditionalContent_Text" assertions="0" time="0.001015" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ParseAdditionalContent_WhitespaceThenText" assertions="0" time="0.000949" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ParseConstructorWithBadCharacter" assertions="0" time="0.000789" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ParseConstructorWithUnexpectedCharacter" assertions="0" time="0.000879" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ParseConstructorWithUnexpectedEnd" assertions="0" time="0.000640" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ParseIncompleteCommentSeparator" assertions="0" time="0.000709" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="Read_MissingComma" assertions="0" time="0.000966" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsBoolean_AdditionalBadData" assertions="0" time="0.000748" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsBoolean_BadData" assertions="0" time="0.000725" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsBoolean_MissingComma" assertions="0" time="0.000876" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsBoolean_UnexpectedEnd" assertions="0" time="0.000915" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsBytes_BadData" assertions="0" time="0.000846" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsBytes_CommaErrors" assertions="0" time="0.001220" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsBytes_CommaErrors_Multiple" assertions="0" time="0.000786" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsBytes_InvalidEndArray" assertions="0" time="0.000635" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsBytes_MissingComma" assertions="0" time="0.000958" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsBytesArrayWithBadContent" assertions="0" time="0.000859" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsBytesBadContent" assertions="0" time="0.000967" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsBytesIntegerArrayWithNoEnd" assertions="0" time="0.000938" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsBytesNoContentWrappedObject" assertions="0" time="0.000802" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsDateTime_BadData" assertions="0" time="0.000879" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsDateTime_Boolean" assertions="0" time="0.001023" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsDateTime_MissingComma" assertions="0" time="0.001087" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsDateTimeOffset_MissingComma" assertions="0" time="0.001194" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsDateTimeOffsetBadContent" assertions="0" time="0.000797" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsDecimalBadContent" assertions="0" time="0.000893" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsDecimalBadContent_SecondLine" assertions="0" time="0.000714" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsDouble_BadData" assertions="0" time="0.000890" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsDouble_Boolean" assertions="0" time="0.000781" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsInt32_MissingComma" assertions="0" time="0.000942" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsString_AdditionalBadData" assertions="0" time="0.000781" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsString_BadData" assertions="0" time="0.000864" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsString_MissingComma" assertions="0" time="0.000815" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsString_Null_AdditionalBadData" assertions="0" time="0.000747" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsString_Null_UnexpectedEnd" assertions="0" time="0.000704" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadAsString_UnexpectedEnd" assertions="0" time="0.000962" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadBadCharInArray" assertions="0" time="0.000868" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadBytesEmptyWrappedObject" assertions="0" time="0.000855" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadBytesWithBadCharacter" assertions="0" time="0.000798" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadBytesWithError" assertions="0" time="0.000857" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadBytesWithUnexpectedEnd" assertions="0" time="0.000991" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadInt32Overflow" assertions="0" time="0.063677" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadInt32Overflow_Negative" assertions="0" time="0.082760" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadInt32WithBadCharacter" assertions="0" time="0.001040" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadInt64Overflow" assertions="0" time="0.034774" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadInt64Overflow_Negative" assertions="0" time="0.051320" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadIntegerWithError" assertions="0" time="0.001663" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadIntegerWithErrorInArray" assertions="0" time="0.001528" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadInvalidNonBase10Number" assertions="0" time="0.001159" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadNumberValue_CommaErrors" assertions="0" time="0.000805" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadNumberValue_CommaErrors_Multiple" assertions="0" time="0.000912" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadNumberValue_InvalidEndArray" assertions="0" time="0.000718" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadStringValue_CommaErrors" assertions="0" time="0.000958" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadStringValue_CommaErrors_Multiple" assertions="0" time="0.000825" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadStringValue_InvalidEndArray" assertions="0" time="0.000710" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ReadStringValue_Numbers_NotString" assertions="0" time="0.001163" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ResetJsonTextReaderErrorCount" assertions="0" time="0.002222" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="ThrowErrorWhenParsingUnquoteStringThatStartsWithNE" assertions="0" time="0.001101" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="UnclosedComment" assertions="0" time="0.000690" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="UnexpectedEndAfterReadingN" assertions="0" time="0.000733" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="UnexpectedEndAfterReadingNe" assertions="0" time="0.000694" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="UnexpectedEndAfterReadingNu" assertions="0" time="0.000766" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="UnexpectedEndOfControlCharacter" assertions="0" time="0.000711" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="UnexpectedEndOfHex" assertions="0" time="0.001060" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="UnexpectedEndOfString" assertions="0" time="0.000703" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="UnexpectedEndTokenWhenParsingOddEndToken" assertions="0" time="0.000950" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase><testcase name="UnexpectedEndWhenParsingUnquotedProperty" assertions="0" time="0.000767" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingTests">
                  
                </testcase></testsuite>
              <testsuite tests="10" time="0.051752" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:07Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.JsonTextReaderTests.FloatTests."><testcase name="Float_NaN_Read" assertions="0" time="0.018307" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.FloatTests">
                  
                </testcase><testcase name="Float_NaN_ReadAsInt32" assertions="0" time="0.001041" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.FloatTests">
                  
                </testcase><testcase name="Float_NaNAndInifinity_ReadAsDouble" assertions="0" time="0.001671" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.FloatTests">
                  
                </testcase><testcase name="Float_NaNAndInifinity_ReadAsString" assertions="0" time="0.000874" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.FloatTests">
                  
                </testcase><testcase name="Float_ReadAsString_Exact" assertions="0" time="0.000698" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.FloatTests">
                  
                </testcase><testcase name="FloatingPointNonFiniteNumbers" assertions="0" time="0.000940" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.FloatTests">
                  
                </testcase><testcase name="FloatParseHandling" assertions="0" time="0.001415" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.FloatTests">
                  
                </testcase><testcase name="FloatParseHandling_NaN" assertions="0" time="0.000990" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.FloatTests">
                  
                </testcase><testcase name="FloatParseHandling_ReadAsString" assertions="0" time="0.001024" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.FloatTests">
                  
                </testcase><testcase name="ReadFloatingPointNumber" assertions="0" time="0.001906" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.FloatTests">
                  
                </testcase></testsuite>
              <testsuite tests="23" time="0.280010" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:07Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests."><testcase name="AppendCharsWhileReadingNewLine" assertions="0" time="0.001019" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="AppendCharsWhileReadingNull" assertions="0" time="0.000745" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="BufferTest" assertions="0" time="0.169098" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="BufferTest_WithError" assertions="0" time="0.001244" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="CloseInput" assertions="0" time="0.000842" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="Depth" assertions="0" time="0.005501" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="DisposeSupressesFinalization" assertions="0" time="0.020545" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="EscapedUnicodeText" assertions="0" time="0.001873" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="InvalidUnicodeSequence" assertions="0" time="0.000928" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="JustSinglelineComment" assertions="0" time="0.000947" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="LineInfoAndNewLines" assertions="0" time="0.002430" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="LinePositionOnNewLine" assertions="0" time="0.001283" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="LongStringTest" assertions="0" time="0.001178" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="ReadWithSupportMultipleContentCommaDelimited" assertions="0" time="0.001379" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="ScientificNotation" assertions="0" time="0.002572" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="SingleLineComments" assertions="0" time="0.003183" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="SupportMultipleContent" assertions="0" time="0.001536" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="SurrogatePairReplacement" assertions="0" time="0.002198" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="SurrogatePairValid" assertions="0" time="0.002026" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="UnescapeDoubleQuotes" assertions="0" time="0.001118" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="WriteReadBoundaryDecimals" assertions="0" time="0.001184" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="WriteReadWrite" assertions="0" time="0.006196" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase><testcase name="YahooFinance" assertions="0" time="0.000745" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests">
                  
                </testcase></testsuite>
              <testsuite tests="18" time="0.057455" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:07Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.JsonTextReaderTests.ParseTests."><testcase name="DateParseHandling" assertions="0" time="0.002134" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ParseTests">
                  
                </testcase><testcase name="ParseAdditionalContent_Whitespace" assertions="0" time="0.000736" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ParseTests">
                  
                </testcase><testcase name="ParseArrayWithMissingValues" assertions="0" time="0.001123" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ParseTests">
                  
                </testcase><testcase name="ParseBooleanWithNoExtraContent" assertions="0" time="0.000646" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ParseTests">
                  
                </testcase><testcase name="ParseContentDelimitedByNonStandardWhitespace" assertions="0" time="0.001169" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ParseTests">
                  
                </testcase><testcase name="ParseDecimals" assertions="0" time="0.001827" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ParseTests">
                  
                </testcase><testcase name="ParseDoubles" assertions="0" time="0.002370" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ParseTests">
                  
                </testcase><testcase name="ParseEmptyArray" assertions="0" time="0.000679" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ParseTests">
                  
                </testcase><testcase name="ParseEmptyConstructor" assertions="0" time="0.000642" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ParseTests">
                  
                </testcase><testcase name="ParseEmptyObject" assertions="0" time="0.000621" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ParseTests">
                  
                </testcase><testcase name="ParseHexNumber" assertions="0" time="0.000768" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ParseTests">
                  
                </testcase><testcase name="ParseIntegers" assertions="0" time="0.001957" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ParseTests">
                  
                </testcase><testcase name="ParseLineFeedDelimitedConstructor" assertions="0" time="0.000670" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ParseTests">
                  
                </testcase><testcase name="ParseNullStringConstructor" assertions="0" time="0.000644" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ParseTests">
                  
                </testcase><testcase name="ParseNumbers" assertions="0" time="0.000855" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ParseTests">
                  
                </testcase><testcase name="ParseObjectWithNoEnd" assertions="0" time="0.000583" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ParseTests">
                  
                </testcase><testcase name="ParseOctalNumber" assertions="0" time="0.000755" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ParseTests">
                  
                </testcase><testcase name="ParsingQuotedPropertyWithControlCharacters" assertions="0" time="0.000683" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ParseTests">
                  
                </testcase></testsuite>
              <testsuite tests="68" time="0.416401" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:07Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests."><testcase name="NullCharReading" assertions="0" time="0.001606" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="Read_Boolean_Failure" assertions="0" time="0.001150" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="Read_EmptyStream_ReturnsFalse" assertions="0" time="0.000690" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsBoolean" assertions="0" time="0.003742" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsBoolean_NullChar" assertions="0" time="0.000926" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsBooleanNoContent" assertions="0" time="0.001330" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsBytes" assertions="0" time="0.000924" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsBytes_Base64AndGuid" assertions="0" time="0.000799" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsBytesIntegerArrayWithComments" assertions="0" time="0.000711" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsBytesNoContent" assertions="0" time="0.000609" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsDateTimeOffset" assertions="0" time="0.001061" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsDateTimeOffsetBadString" assertions="0" time="0.002206" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsDateTimeOffsetHoursOnly" assertions="0" time="0.000992" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsDateTimeOffsetIsoDate" assertions="0" time="0.001005" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsDateTimeOffsetNegative" assertions="0" time="0.000821" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsDateTimeOffsetNewZealandDate" assertions="0" time="0.002131" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsDateTimeOffsetNoContent" assertions="0" time="0.000524" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsDateTimeOffsetUnitedStatesDate" assertions="0" time="0.002198" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsDateTimeOffsetWithMinutes" assertions="0" time="0.000936" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsDecimal" assertions="0" time="0.001092" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsDecimal_IntegerTooLarge_ThrowsJsonReaderException" assertions="0" time="0.001146" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsDecimalFrench" assertions="0" time="0.001023" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsDecimalInt" assertions="0" time="0.000867" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsDecimalNoContent" assertions="0" time="0.000667" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsDouble_AllowThousands" assertions="0" time="0.000846" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsDouble_Failure" assertions="0" time="0.001072" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsDouble_Hex" assertions="0" time="0.000583" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsDouble_Null" assertions="0" time="0.000521" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsDouble_Success" assertions="0" time="0.000680" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsInt32_BigIntegerValue_Success" assertions="0" time="0.000850" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsInt32_IntegerTooLarge_ThrowsJsonReaderException" assertions="0" time="0.000860" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsInt32WithUndefined" assertions="0" time="0.000840" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsIntDecimal" assertions="0" time="0.000962" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsString_Boolean" assertions="0" time="0.000600" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadAsString_Boolean_Failure" assertions="0" time="0.000835" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadBadMSDateAsString" assertions="0" time="0.000769" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadBigInteger" assertions="0" time="0.001699" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadBufferOnControlChar" assertions="0" time="0.000787" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadBufferOnEndComment" assertions="0" time="0.001019" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadBytesFollowingNumberInArray" assertions="0" time="0.000822" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadBytesFollowingNumberInObject" assertions="0" time="0.000905" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadBytesNoStartWithUnexpectedEnd" assertions="0" time="0.000526" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadCommentInsideArray" assertions="0" time="0.001020" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadConstructor" assertions="0" time="0.000965" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadContentDelimitedByComments" assertions="0" time="0.001802" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadHexidecimalWithAllLetters" assertions="0" time="0.000890" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadingEscapedStrings" assertions="0" time="0.000854" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadingFromSlowStream" assertions="0" time="0.001716" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadingIndented" assertions="0" time="0.001890" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadLargeObjects" assertions="0" time="0.003542" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadLongJsonArray" assertions="0" time="0.151230" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadLongString" assertions="0" time="0.001103" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadMissingInt64" assertions="0" time="0.000795" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadMultilineString" assertions="0" time="0.000692" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadNewlineLastCharacter" assertions="0" time="0.000516" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadNewLines" assertions="0" time="0.002157" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadNullIntLineNumberAndPosition" assertions="0" time="0.001065" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadNullTerminatorStrings" assertions="0" time="0.000671" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadOctalNumber" assertions="0" time="0.001164" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadOctalNumberAsInt32" assertions="0" time="0.001012" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadOctalNumberAsInt64" assertions="0" time="0.000992" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadRandomJson" assertions="0" time="0.000543" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadSingleBytes" assertions="0" time="0.000620" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadSingleQuoteInsideDoubleQuoteString" assertions="0" time="0.000585" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadUnicode" assertions="0" time="0.000850" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadValue_EmptyString_Position" assertions="0" time="0.000923" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ReadValueComments" assertions="0" time="0.002006" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase><testcase name="ThrowOnDuplicateKeysDeserializing" assertions="0" time="0.001190" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextReaderTests.ReadTests">
                  
                </testcase></testsuite>
            
            <testsuite tests="52" time="0.921083" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:09Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.JsonTextWriterTest."><testcase name="AutoCompleteOnClose_False" assertions="0" time="0.001070" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="BadWriteEndArray" assertions="0" time="0.001114" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="BufferTest" assertions="0" time="0.356699" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="BufferTest_WithError" assertions="0" time="0.001894" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="BuildStateArray" assertions="0" time="0.003006" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="CloseOutput" assertions="0" time="0.001348" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="CloseWithRemainingContent" assertions="0" time="0.001382" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="CompareNewStringEscapingWithOld" assertions="0" time="0.348034" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="Culture" assertions="0" time="0.001368" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="CustomJsonTextWriterTests" assertions="0" time="0.002529" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="DateTimeZoneHandling" assertions="0" time="0.000699" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="DisposeSupressesFinalization" assertions="0" time="0.018167" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="FloatingPointNonFiniteNumbers_QuoteChar" assertions="0" time="0.001388" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="FloatingPointNonFiniteNumbers_String" assertions="0" time="0.000715" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="FloatingPointNonFiniteNumbers_Symbol" assertions="0" time="0.000770" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="FloatingPointNonFiniteNumbers_Zero" assertions="0" time="0.001667" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="HtmlStringEscapeHandling" assertions="0" time="0.000893" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="Indentation" assertions="0" time="0.001567" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="Indenting" assertions="0" time="0.000833" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="InvalidQuoteChar" assertions="0" time="0.000754" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="NewLine" assertions="0" time="0.001142" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="NonAsciiStringEscapeHandling" assertions="0" time="0.000844" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="NullableValueFormatting" assertions="0" time="0.004444" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="Path" assertions="0" time="0.001562" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="QuoteChar" assertions="0" time="0.001577" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="QuoteDictionaryNames" assertions="0" time="0.000972" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="QuoteNameAndStrings" assertions="0" time="0.000891" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="State" assertions="0" time="0.001011" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="StringEscaping" assertions="0" time="0.000651" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="TokenTypeOutOfRange" assertions="0" time="0.001574" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="ValueFormatting" assertions="0" time="0.001119" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteBytesInArray" assertions="0" time="0.000793" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteComments" assertions="0" time="0.000874" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteEnd" assertions="0" time="0.000837" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteEndOnProperty" assertions="0" time="0.000667" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteEndOnProperty_Close" assertions="0" time="0.000628" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteEndOnProperty_Dispose" assertions="0" time="0.000613" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteFloatingPointNumber" assertions="0" time="0.001087" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteIConvertable" assertions="0" time="0.001179" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteIntegerNumber" assertions="0" time="0.001034" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteObjectNestedInConstructor" assertions="0" time="0.001264" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteRawInArray" assertions="0" time="0.001237" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteRawInObject" assertions="0" time="0.000881" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteRawInStart" assertions="0" time="0.001653" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteRawValue" assertions="0" time="0.001027" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteSingleBytes" assertions="0" time="0.001768" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteToken" assertions="0" time="0.000747" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteTokenDirect" assertions="0" time="0.000774" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteTokenDirect_BadValue" assertions="0" time="0.002032" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteTokenNullCheck" assertions="0" time="0.001372" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteValueObjectWithNullable" assertions="0" time="0.000904" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase><testcase name="WriteValueObjectWithUnsupportedValue" assertions="0" time="0.001293" status="Passed" classname="Newtonsoft.Json.Tests.JsonTextWriterTest">
                
              </testcase></testsuite>
            <testsuite tests="47" time="0.253037" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:10Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.JsonValidatingReaderTests."><testcase name="ArrayCountGreaterThanMaximumItems" assertions="0" time="0.033858" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="ArrayCountLessThanMinimumItems" assertions="0" time="0.001236" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="BigIntegerDivisibleBy_Failure" assertions="0" time="0.006839" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="BigIntegerDivisibleBy_Fraction" assertions="0" time="0.001331" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="BigIntegerDivisibleBy_FractionWithZeroValue" assertions="0" time="0.001267" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="BigIntegerDivisibleBy_Success" assertions="0" time="0.001296" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="BooleanNotInEnum" assertions="0" time="0.002872" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="CheckInnerReader" assertions="0" time="0.000643" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="CloseAlsoClosesUnderlyingReader" assertions="0" time="0.000823" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="DisableAdditionalProperties" assertions="0" time="0.011381" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="DuplicateErrorsTest" assertions="0" time="0.007891" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="ExtendedComplex" assertions="0" time="0.010291" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="ExtendsDisallowAdditionProperties" assertions="0" time="0.002401" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="ExtendsMissingRequiredProperties" assertions="0" time="0.001408" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="ExtendsStringGreaterThanMaximumLength" assertions="0" time="0.001262" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="FloatDivisibleBy" assertions="0" time="0.002579" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="FloatGreaterThanMaximumValue" assertions="0" time="0.001269" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="FloatIsNotInEnum" assertions="0" time="0.001326" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="FloatLessThanMinimumValue" assertions="0" time="0.001176" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="IntegerGreaterThanMaximumValue" assertions="0" time="0.001080" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="IntegerGreaterThanMaximumValue_BigInteger" assertions="0" time="0.001941" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="IntegerIsNotInEnum" assertions="0" time="0.001263" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="IntegerLessThanMaximumValue_BigInteger" assertions="0" time="0.001065" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="IntegerLessThanMinimumValue" assertions="0" time="0.001033" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="IntValidForNumber" assertions="0" time="0.001176" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="InvalidDataType" assertions="0" time="0.001416" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="MissingNonRequiredProperties" assertions="0" time="0.001925" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="MissingRequiredProperties" assertions="0" time="0.001681" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="NoAdditionalItems" assertions="0" time="0.001544" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="NullNotInEnum" assertions="0" time="0.001278" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="PatternPropertiesNoAdditionalProperties" assertions="0" time="0.002472" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="ReadAsBytes" assertions="0" time="0.006407" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="ReadAsDecimal" assertions="0" time="0.001081" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="ReadAsDecimalFailure" assertions="0" time="0.001265" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="ReadAsInt32" assertions="0" time="0.000810" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="ReadAsInt32Failure" assertions="0" time="0.001250" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="ReadAsInt32FromSerializer" assertions="0" time="0.002607" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="ReadAsInt32InArray" assertions="0" time="0.001333" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="ReadAsInt32InArrayIncomplete" assertions="0" time="0.001169" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="StringDisallowed" assertions="0" time="0.001427" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="StringDoesNotMatchPattern" assertions="0" time="0.001233" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="StringGreaterThanMaximumLength" assertions="0" time="0.001135" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="StringIsNotInEnum" assertions="0" time="0.001627" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="StringLessThanMinimumLength" assertions="0" time="0.001272" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="ThrowExceptionWhenNoValidationEventHandler" assertions="0" time="0.001029" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="ValidateTypes" assertions="0" time="0.002435" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase><testcase name="ValidateUnrestrictedArray" assertions="0" time="0.002236" status="Passed" classname="Newtonsoft.Json.Tests.JsonValidatingReaderTests">
                
              </testcase></testsuite>
            
              
              <testsuite tests="15" time="0.046310" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:10Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.AnnotationsTests."><testcase name="AddAnnotation" assertions="0" time="0.001426" status="Passed" classname="Newtonsoft.Json.Tests.Linq.AnnotationsTests">
                  
                </testcase><testcase name="AddAnnotation_MultipleOfDifferentTypes" assertions="0" time="0.000799" status="Passed" classname="Newtonsoft.Json.Tests.Linq.AnnotationsTests">
                  
                </testcase><testcase name="AddAnnotation_MultipleOfTheSameType" assertions="0" time="0.000603" status="Passed" classname="Newtonsoft.Json.Tests.Linq.AnnotationsTests">
                  
                </testcase><testcase name="Example" assertions="0" time="0.000986" status="Passed" classname="Newtonsoft.Json.Tests.Linq.AnnotationsTests">
                  
                </testcase><testcase name="GetAnnotation_NeverSet" assertions="0" time="0.000478" status="Passed" classname="Newtonsoft.Json.Tests.Linq.AnnotationsTests">
                  
                </testcase><testcase name="GetAnnotations" assertions="0" time="0.003093" status="Passed" classname="Newtonsoft.Json.Tests.Linq.AnnotationsTests">
                  
                </testcase><testcase name="GetAnnotations_MultipleTypes" assertions="0" time="0.001341" status="Passed" classname="Newtonsoft.Json.Tests.Linq.AnnotationsTests">
                  
                </testcase><testcase name="RemoveAnnotation" assertions="0" time="0.000881" status="Passed" classname="Newtonsoft.Json.Tests.Linq.AnnotationsTests">
                  
                </testcase><testcase name="RemoveAnnotation_Multiple" assertions="0" time="0.000635" status="Passed" classname="Newtonsoft.Json.Tests.Linq.AnnotationsTests">
                  
                </testcase><testcase name="RemoveAnnotation_Multiple_NonGeneric" assertions="0" time="0.001166" status="Passed" classname="Newtonsoft.Json.Tests.Linq.AnnotationsTests">
                  
                </testcase><testcase name="RemoveAnnotation_MultipleCalls" assertions="0" time="0.000720" status="Passed" classname="Newtonsoft.Json.Tests.Linq.AnnotationsTests">
                  
                </testcase><testcase name="RemoveAnnotation_MultipleCalls_NonGeneric" assertions="0" time="0.000687" status="Passed" classname="Newtonsoft.Json.Tests.Linq.AnnotationsTests">
                  
                </testcase><testcase name="RemoveAnnotation_MultipleWithDifferentTypes" assertions="0" time="0.000659" status="Passed" classname="Newtonsoft.Json.Tests.Linq.AnnotationsTests">
                  
                </testcase><testcase name="RemoveAnnotation_MultipleWithDifferentTypes_NonGeneric" assertions="0" time="0.000669" status="Passed" classname="Newtonsoft.Json.Tests.Linq.AnnotationsTests">
                  
                </testcase><testcase name="RemoveAnnotation_NonGeneric" assertions="0" time="0.000652" status="Passed" classname="Newtonsoft.Json.Tests.Linq.AnnotationsTests">
                  
                </testcase></testsuite>
              
                
                <testsuite tests="7" time="0.022376" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:10Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests."><testcase name="GetValue" assertions="0" time="0.001566" status="Passed" classname="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests">
                    
                  </testcase><testcase name="GetValue_NullOwner_ReturnsNull" assertions="0" time="0.000462" status="Passed" classname="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests">
                    
                  </testcase><testcase name="IsReadOnly" assertions="0" time="0.000738" status="Passed" classname="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests">
                    
                  </testcase><testcase name="PropertyType" assertions="0" time="0.000651" status="Passed" classname="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests">
                    
                  </testcase><testcase name="ResetValue" assertions="0" time="0.000723" status="Passed" classname="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests">
                    
                  </testcase><testcase name="SetValue" assertions="0" time="0.000717" status="Passed" classname="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests">
                    
                  </testcase><testcase name="SetValue_NullOwner_NoError" assertions="0" time="0.000432" status="Passed" classname="Newtonsoft.Json.Tests.Linq.ComponentModel.JPropertyDescriptorTests">
                    
                  </testcase></testsuite>
              
              <testsuite tests="22" time="4.623035" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:10Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.DynamicTests."><testcase name="AccessPropertyValue" assertions="0" time="0.011857" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="DeserializeLargeDynamic" assertions="0" time="2.164691" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="DynamicAccess_ToJToken_ShouldFail" assertions="0" time="0.013930" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="DynamicAccess_ToJToken_ShouldNotFail" assertions="0" time="0.005533" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="DynamicAccess_ToJTokenExplicit_ShouldNotFail" assertions="0" time="0.005517" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="DynamicAccess_ToJTokenSafeCast_ShouldNotFail" assertions="0" time="0.002530" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="DynamicLinqExample" assertions="0" time="0.013898" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="DynamicSerializerExample" assertions="0" time="0.053249" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="ImprovedDynamicLinqExample" assertions="0" time="0.066411" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="IndexAccess_ToJToken_ShouldNotFail" assertions="0" time="0.001195" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="JObjectCount" assertions="0" time="0.013065" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="JObjectEnumerator" assertions="0" time="0.015769" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="JObjectGetDynamicPropertyNames" assertions="0" time="0.001927" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="JObjectMethods" assertions="0" time="0.060454" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="JObjectPropertyNames" assertions="0" time="0.051259" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="JObjectPropertyNameWithJArray" assertions="0" time="0.014876" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="JObjectPropertyNameWithNonToken" assertions="0" time="0.002723" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="JValueAddition" assertions="0" time="1.090347" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="JValueConvert" assertions="0" time="0.152563" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="JValueEquals" assertions="0" time="0.694273" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="JValueToString" assertions="0" time="0.116954" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                </testcase><testcase name="PropertyDoesNotEqualNull" assertions="0" time="0.019477" status="Passed" classname="Newtonsoft.Json.Tests.Linq.DynamicTests">
                  
                  <skipped message=""/>
                </testcase></testsuite>
              <testsuite tests="37" time="0.169723" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:15Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.JArrayTests."><testcase name="AddArrayToSelf" assertions="0" time="0.001923" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="AddFirstAddedTokenShouldBeFirst" assertions="0" time="0.001296" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="AddToSelf" assertions="0" time="0.001148" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="ArrayOrder" assertions="0" time="0.004301" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="Clear" assertions="0" time="0.001914" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="Contains" assertions="0" time="0.001617" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="GenericCollectionCopyTo" assertions="0" time="0.002531" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="GenericCollectionCopyToArrayIndexEqualGreaterToArrayLengthShouldThrow" assertions="0" time="0.001443" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="GenericCollectionCopyToInsufficientArrayCapacity" assertions="0" time="0.001308" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="GenericCollectionCopyToNegativeArrayIndexShouldThrow" assertions="0" time="0.002271" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="GenericCollectionCopyToNullArrayShouldThrow" assertions="0" time="0.001692" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="IndexOf" assertions="0" time="0.001049" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="Insert" assertions="0" time="0.001360" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="InsertAddEnd" assertions="0" time="0.001045" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="InsertNegativeIndexShouldThrow" assertions="0" time="0.001952" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="InsertNull" assertions="0" time="0.000729" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="InsertOutOfRangeIndexShouldThrow" assertions="0" time="0.000966" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="InsertShouldInsertAtZeroIndex" assertions="0" time="0.001851" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="Item" assertions="0" time="0.001539" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="Iterate" assertions="0" time="0.001096" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="ITypedListGetItemProperties" assertions="0" time="0.003391" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="Parse_ExcessiveContent" assertions="0" time="0.001003" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="Parse_ExcessiveContentJustComments" assertions="0" time="0.001328" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="Parse_LineInfo" assertions="0" time="0.003219" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="Parse_NoComments" assertions="0" time="0.002477" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="Parse_ShouldThrowOnUnexpectedToken" assertions="0" time="0.001199" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="ParseAdditionalContent" assertions="0" time="0.001247" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="ParseIncomplete" assertions="0" time="0.001957" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="Remove" assertions="0" time="0.001368" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="RemoveAt" assertions="0" time="0.001322" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="RemoveAtNegativeIndexShouldError" assertions="0" time="0.000999" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="RemoveAtOutOfRangeIndexShouldError" assertions="0" time="0.001013" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="RemoveSpecificAndRemoveSelf" assertions="0" time="0.000891" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="ReplaceAll" assertions="0" time="0.000924" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="SetValue" assertions="0" time="0.001869" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="SetValueWithInvalidIndex" assertions="0" time="0.001393" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase><testcase name="ToListOnEmptyArray" assertions="0" time="0.001260" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JArrayTests">
                  
                </testcase></testsuite>
              <testsuite tests="5" time="0.033743" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:15Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.JConstructorTests."><testcase name="CreateWithMultiValue" assertions="0" time="0.003196" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JConstructorTests">
                  
                </testcase><testcase name="Iterate" assertions="0" time="0.001840" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JConstructorTests">
                  
                </testcase><testcase name="Load" assertions="0" time="0.002604" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JConstructorTests">
                  
                </testcase><testcase name="SetValue" assertions="0" time="0.001935" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JConstructorTests">
                  
                </testcase><testcase name="SetValueWithInvalidIndex" assertions="0" time="0.001703" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JConstructorTests">
                  
                </testcase></testsuite>
              <testsuite tests="121" time="0.617475" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:15Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.JObjectTests."><testcase name="Blog" assertions="0" time="0.001403" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="CollectionChanged" assertions="0" time="0.004179" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="Contains" assertions="0" time="0.001116" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="DeepEqualsIgnoreOrder" assertions="0" time="0.002102" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="DeserializeClassManually" assertions="0" time="0.001910" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="DeserializeFromRaw" assertions="0" time="0.003824" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="DictionaryItemShouldSet" assertions="0" time="0.001141" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="DuplicatePropertyNameShouldThrow" assertions="0" time="0.000756" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="EmbedJValueStringInNewJObject" assertions="0" time="0.010882" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="EmptyObjectDeepEquals" assertions="0" time="0.000743" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="Example" assertions="0" time="0.000726" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="FromObjectGuid" assertions="0" time="0.000568" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="FromObjectInsideConverterWithCustomSerializer" assertions="0" time="0.002640" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="FromObjectRaw" assertions="0" time="0.001329" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="FromObjectTimeSpan" assertions="0" time="0.001213" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="FromObjectUri" assertions="0" time="0.000618" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericCollectionAdd" assertions="0" time="0.000910" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericCollectionClear" assertions="0" time="0.000964" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericCollectionContains" assertions="0" time="0.001224" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericCollectionCopyTo" assertions="0" time="0.001940" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericCollectionCopyToArrayIndexEqualGreaterToArrayLengthShouldThrow" assertions="0" time="0.000636" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericCollectionCopyToInsufficientArrayCapacity" assertions="0" time="0.001479" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericCollectionCopyToNegativeArrayIndexShouldThrow" assertions="0" time="0.001058" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericCollectionCopyToNullArrayShouldThrow" assertions="0" time="0.000886" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericCollectionRemove" assertions="0" time="0.001679" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericDictionaryAdd" assertions="0" time="0.000794" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericDictionaryContains" assertions="0" time="0.000722" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericListJTokenAdd" assertions="0" time="0.000810" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericListJTokenAddBadToken" assertions="0" time="0.000872" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericListJTokenAddBadValue" assertions="0" time="0.001386" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericListJTokenAddPropertyWithExistingName" assertions="0" time="0.000878" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericListJTokenClear" assertions="0" time="0.000834" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericListJTokenContains" assertions="0" time="0.000610" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericListJTokenCopyTo" assertions="0" time="0.000851" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericListJTokenIndexOf" assertions="0" time="0.000783" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericListJTokenInsert" assertions="0" time="0.000691" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericListJTokenIsReadOnly" assertions="0" time="0.000571" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericListJTokenRemove" assertions="0" time="0.000848" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericListJTokenRemoveAt" assertions="0" time="0.001288" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericListJTokenSetItem" assertions="0" time="0.001006" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericListJTokenSetItemAlreadyExists" assertions="0" time="0.000726" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GenericValueCast" assertions="0" time="0.001449" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GetGeocodeAddress" assertions="0" time="0.000812" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GetProperties" assertions="0" time="0.001406" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GetPropertyOwner_ReturnsJObject" assertions="0" time="0.000816" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GetValue" assertions="0" time="0.001134" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="GetValueBlogExample" assertions="0" time="0.002551" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IBindingListAddIndex" assertions="0" time="0.000714" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IBindingListAddNew" assertions="0" time="0.001416" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IBindingListAddNewWithEvent" assertions="0" time="0.000810" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IBindingListAllowEdit" assertions="0" time="0.000598" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IBindingListAllowNew" assertions="0" time="0.000603" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IBindingListAllowRemove" assertions="0" time="0.000605" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IBindingListApplySort" assertions="0" time="0.000803" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IBindingListFind" assertions="0" time="0.001845" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IBindingListIsSorted" assertions="0" time="0.000752" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IBindingListRemoveIndex" assertions="0" time="0.000596" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IBindingListRemoveSort" assertions="0" time="0.000742" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IBindingListSortDirection" assertions="0" time="0.000632" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IBindingListSortProperty" assertions="0" time="0.000630" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IBindingListSupportsChangeNotification" assertions="0" time="0.000486" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IBindingListSupportsSearching" assertions="0" time="0.000616" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IBindingListSupportsSorting" assertions="0" time="0.000561" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IListAdd" assertions="0" time="0.002017" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IListAddBadToken" assertions="0" time="0.000977" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IListAddBadValue" assertions="0" time="0.000758" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IListAddPropertyWithExistingName" assertions="0" time="0.000754" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IListClear" assertions="0" time="0.000782" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IListContains" assertions="0" time="0.000764" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IListCopyTo" assertions="0" time="0.000713" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IListIndexOf" assertions="0" time="0.000627" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IListInsert" assertions="0" time="0.000776" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IListIsFixedSize" assertions="0" time="0.000644" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IListIsReadOnly" assertions="0" time="0.000962" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IListIsSynchronized" assertions="0" time="0.000698" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IListRemove" assertions="0" time="0.000747" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IListRemoveAt" assertions="0" time="0.000799" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IListSetItem" assertions="0" time="0.000590" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IListSetItemAlreadyExists" assertions="0" time="0.000718" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IListSetItemInvalid" assertions="0" time="0.000619" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="IListSyncRoot" assertions="0" time="0.000785" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="ImplicitValueConversions" assertions="0" time="0.000998" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="InvalidPropertyValueCastExceptionMessage" assertions="0" time="0.002207" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="InvalidValueCastExceptionMessage" assertions="0" time="0.001258" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="Iterate" assertions="0" time="0.000982" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="ITypedListGetItemProperties" assertions="0" time="0.000656" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="ITypedListGetListName" assertions="0" time="0.000668" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="JObjectContainingHtml" assertions="0" time="0.000743" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="JObjectWithComments" assertions="0" time="0.000546" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="JTokenReader" assertions="0" time="0.001087" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="Keys" assertions="0" time="0.001184" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="KeyValuePairIterate" assertions="0" time="0.001212" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="ListChanged" assertions="0" time="0.002100" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="LoadFromNestedObject" assertions="0" time="0.000755" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="LoadFromNestedObjectIncomplete" assertions="0" time="0.000820" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="Parse_ExcessiveContent" assertions="0" time="0.000821" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="Parse_ExcessiveContentJustComments" assertions="0" time="0.000756" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="Parse_NoComments" assertions="0" time="0.000755" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="Parse_ShouldThrowOnUnexpectedToken" assertions="0" time="0.000671" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="ParseAdditionalContent" assertions="0" time="0.001643" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="ParseEmptyObjectWithComment" assertions="0" time="0.000729" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="ParseIncomplete" assertions="0" time="0.000910" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="ParseJavaScriptDate" assertions="0" time="0.001117" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="ParseMultipleProperties" assertions="0" time="0.000749" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="ParseMultipleProperties_EmptySettings" assertions="0" time="0.000523" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="ParseMultipleProperties_IgnoreDuplicateSetting" assertions="0" time="0.000519" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="ParseMultipleProperties_ReplaceDuplicateSetting" assertions="0" time="0.000654" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="Property" assertions="0" time="0.001246" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="PropertyChanged" assertions="0" time="0.001666" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="PropertyChanging" assertions="0" time="0.002140" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="RawChildValues" assertions="0" time="0.000678" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="ReadWithSupportMultipleContent" assertions="0" time="0.001315" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="Remove" assertions="0" time="0.000826" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="ReplaceJPropertyWithJPropertyWithSameName" assertions="0" time="0.000906" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="SetValue" assertions="0" time="0.001229" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="SetValueWithInvalidPropertyName" assertions="0" time="0.001749" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="ToListOnEmptyObject" assertions="0" time="0.001667" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="TryGetValue" assertions="0" time="0.000828" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="WriteObjectNullDBNullValue" assertions="0" time="0.000674" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="WriteObjectNullStringValue" assertions="0" time="0.000614" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase><testcase name="WritePropertyWithNoValue" assertions="0" time="0.000474" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JObjectTests">
                  
                </testcase></testsuite>
              <testsuite tests="15" time="0.043077" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:16Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.JPropertyTests."><testcase name="IListAdd" assertions="0" time="0.001250" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JPropertyTests">
                  
                </testcase><testcase name="IListClear" assertions="0" time="0.000958" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JPropertyTests">
                  
                </testcase><testcase name="IListCount" assertions="0" time="0.000541" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JPropertyTests">
                  
                </testcase><testcase name="IListGenericAdd" assertions="0" time="0.000768" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JPropertyTests">
                  
                </testcase><testcase name="IListRemove" assertions="0" time="0.000837" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JPropertyTests">
                  
                </testcase><testcase name="IListRemoveAt" assertions="0" time="0.000721" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JPropertyTests">
                  
                </testcase><testcase name="JPropertyContains" assertions="0" time="0.000806" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JPropertyTests">
                  
                </testcase><testcase name="JPropertyDeepEquals" assertions="0" time="0.000661" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JPropertyTests">
                  
                </testcase><testcase name="JPropertyIndexOf" assertions="0" time="0.000734" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JPropertyTests">
                  
                </testcase><testcase name="JPropertyLinq" assertions="0" time="0.000694" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JPropertyTests">
                  
                </testcase><testcase name="ListChanged" assertions="0" time="0.001057" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JPropertyTests">
                  
                </testcase><testcase name="Load" assertions="0" time="0.001067" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JPropertyTests">
                  
                </testcase><testcase name="MultiContentConstructor" assertions="0" time="0.000620" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JPropertyTests">
                  
                </testcase><testcase name="NullParent" assertions="0" time="0.004659" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JPropertyTests">
                  
                </testcase><testcase name="NullValue" assertions="0" time="0.000628" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JPropertyTests">
                  
                </testcase></testsuite>
              <testsuite tests="3" time="0.010492" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:16Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.JRawTests."><testcase name="RawClone" assertions="0" time="0.000835" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JRawTests">
                  
                </testcase><testcase name="RawEquals" assertions="0" time="0.000625" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JRawTests">
                  
                </testcase><testcase name="RawToObject" assertions="0" time="0.000466" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JRawTests">
                  
                </testcase></testsuite>
              
                
                <testsuite tests="90" time="0.409787" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:16Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests."><testcase name="Equals_FloatWithInt" assertions="0" time="0.000864" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EqualsQuery" assertions="0" time="0.000913" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateArray" assertions="0" time="0.000847" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateArrayMultipleIndexes" assertions="0" time="0.001980" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateArrayOutOfBoundsIndxerWithError" assertions="0" time="0.000783" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateArraySlice" assertions="0" time="0.004033" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateArraySliceWithError" assertions="0" time="0.001310" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateConstructorOutOfBoundsIndxer" assertions="0" time="0.000673" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateConstructorOutOfBoundsIndxerWithError" assertions="0" time="0.001339" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateDollarString" assertions="0" time="0.000478" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateDollarTypeString" assertions="0" time="0.000679" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateEmptyPropertyIndexer" assertions="0" time="0.000774" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateEmptyString" assertions="0" time="0.000579" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateEmptyStringWithMatchingEmptyProperty" assertions="0" time="0.000460" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateIndexerOnObject" assertions="0" time="0.000502" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateIndexerOnObjectWithError" assertions="0" time="0.000812" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateLastSingleCharacterProperty" assertions="0" time="0.000634" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateMissingProperty" assertions="0" time="0.000560" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateMissingPropertyIndexWithError" assertions="0" time="0.003083" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateMissingPropertyWithError" assertions="0" time="0.000896" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateMultipleResultsError" assertions="0" time="0.000896" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateMultiPropertyIndexOnArrayWithError" assertions="0" time="0.001522" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateNoResultsWithMultipleArrayIndexes" assertions="0" time="0.000771" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateOutOfBoundsIndxer" assertions="0" time="0.000588" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluatePropertyOnArray" assertions="0" time="0.000552" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluatePropertyOnArrayWithError" assertions="0" time="0.000969" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluatePropertyWithoutError" assertions="0" time="0.000720" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluatePropertyWithRequired" assertions="0" time="0.000824" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateScan" assertions="0" time="0.001677" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateScanNestResults" assertions="0" time="0.001692" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateSingleProperty" assertions="0" time="0.000710" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateSinglePropertyReturningArray" assertions="0" time="0.000834" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateSliceOnObjectWithError" assertions="0" time="0.001414" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateWhitespaceString" assertions="0" time="0.000743" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateWildcardArray" assertions="0" time="0.002054" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateWildcardIndexOnObjectWithError" assertions="0" time="0.000760" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateWildcardProperty" assertions="0" time="0.000846" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateWildcardScan" assertions="0" time="0.001116" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="EvaluateWildcardScanNestResults" assertions="0" time="0.001132" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="Example" assertions="0" time="0.028559" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="Exists_Null" assertions="0" time="0.001375" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="Exists_True" assertions="0" time="0.001697" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="ExistsQuery" assertions="0" time="0.001543" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="FilterTrue" assertions="0" time="0.001120" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="GreaterOrEqualQuery" assertions="0" time="0.001115" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="GreaterQuery" assertions="0" time="0.000886" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="GreaterQueryBigInteger" assertions="0" time="0.001464" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="GreaterThanIssue1518" assertions="0" time="0.004060" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="GreaterThanWithIntegerParameterAndStringValue" assertions="0" time="0.002187" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="GreaterThanWithStringParameterAndIntegerValue" assertions="0" time="0.001000" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="IdentityOperator" assertions="0" time="0.002743" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="LesserQuery_ValueFirst" assertions="0" time="0.001007" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="MultiplePaths" assertions="0" time="0.001080" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="MultipleQueries" assertions="0" time="0.002287" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="NestedQuery" assertions="0" time="0.001673" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="NoPathQuery" assertions="0" time="0.001142" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="NotEqualsAndNonPrimativeValues" assertions="0" time="0.001144" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="NotEqualsQuery" assertions="0" time="0.000770" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="ParseWithEmptyArrayContent" assertions="0" time="0.000857" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="PathWithConstructor" assertions="0" time="0.000828" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="QueryAgainstNonStringValues" assertions="0" time="0.004662" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="QuoteName" assertions="0" time="0.001075" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="RecursiveWildcard" assertions="0" time="0.001339" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="RootInFilter" assertions="0" time="0.001261" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="RootInFilterWithInitializers" assertions="0" time="0.001058" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="RootInFilterWithRootObject" assertions="0" time="0.002446" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="ScanFilter" assertions="0" time="0.001361" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="ScanFilterTrue" assertions="0" time="0.001267" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="ScanMultipleQuoted" assertions="0" time="0.002144" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="ScanQuoted" assertions="0" time="0.000766" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="SelectTokenAfterEmptyContainer" assertions="0" time="0.000629" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase><testcase name="WildcardWithProperty" assertions="0" time="0.001750" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                    
                  </testcase></testsuite><testsuite tests="18" time="0.061837" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:16Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests.EqualsStrict."><testcase name="EqualsStrict(&quot;1&quot;,&quot;1&quot;,True)" assertions="0" time="0.001704" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                      
                    </testcase><testcase name="EqualsStrict(&quot;1&quot;,&quot;1.0&quot;,True)" assertions="0" time="0.000497" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                      
                    </testcase><testcase name="EqualsStrict(&quot;1.0&quot;,&quot;1&quot;,True)" assertions="0" time="0.000591" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                      
                    </testcase><testcase name="EqualsStrict(&quot;1&quot;,&quot;true&quot;,False)" assertions="0" time="0.000601" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                      
                    </testcase><testcase name="EqualsStrict(&quot;true&quot;,&quot;1&quot;,False)" assertions="0" time="0.000763" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                      
                    </testcase><testcase name="EqualsStrict(&quot;1&quot;,&quot;'1'&quot;,False)" assertions="0" time="0.000539" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                      
                    </testcase><testcase name="EqualsStrict(&quot;'1'&quot;,&quot;1&quot;,False)" assertions="0" time="0.000515" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                      
                    </testcase><testcase name="EqualsStrict(&quot;'1'&quot;,&quot;'1'&quot;,True)" assertions="0" time="0.000535" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                      
                    </testcase><testcase name="EqualsStrict(&quot;false&quot;,&quot;false&quot;,True)" assertions="0" time="0.000490" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                      
                    </testcase><testcase name="EqualsStrict(&quot;true&quot;,&quot;false&quot;,False)" assertions="0" time="0.000699" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                      
                    </testcase><testcase name="EqualsStrict(&quot;false&quot;,&quot;true&quot;,False)" assertions="0" time="0.000470" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                      
                    </testcase><testcase name="EqualsStrict(&quot;1&quot;,&quot;1.1&quot;,False)" assertions="0" time="0.000603" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                      
                    </testcase><testcase name="EqualsStrict(&quot;1.1&quot;,&quot;1&quot;,False)" assertions="0" time="0.000654" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                      
                    </testcase><testcase name="EqualsStrict(&quot;1&quot;,&quot;null&quot;,False)" assertions="0" time="0.000535" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                      
                    </testcase><testcase name="EqualsStrict(&quot;null&quot;,&quot;1&quot;,False)" assertions="0" time="0.000570" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                      
                    </testcase><testcase name="EqualsStrict(&quot;null&quot;,&quot;null&quot;,True)" assertions="0" time="0.000529" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                      
                    </testcase><testcase name="EqualsStrict(&quot;null&quot;,&quot;'null'&quot;,False)" assertions="0" time="0.000558" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                      
                    </testcase><testcase name="EqualsStrict(&quot;'null'&quot;,&quot;null&quot;,False)" assertions="0" time="0.000551" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathExecuteTests">
                      
                    </testcase></testsuite>
                <testsuite tests="80" time="0.321353" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:17Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests."><testcase name="AdjacentIndexers" assertions="0" time="0.001146" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="BadCharactersInIndexer" assertions="0" time="0.000876" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="BaddOr2" assertions="0" time="0.001009" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="BaddOr3" assertions="0" time="0.000631" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="BaddOr4" assertions="0" time="0.001177" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="BadOr1" assertions="0" time="0.001137" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="BooleanQuery_TwoPaths" assertions="0" time="0.001195" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="BooleanQuery_TwoValues" assertions="0" time="0.000945" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="EmptyIndexer" assertions="0" time="0.000659" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="FilterExistWithAnd" assertions="0" time="0.000911" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="FilterExistWithAndOr" assertions="0" time="0.001109" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="FilterWithFloat" assertions="0" time="0.000569" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="FilterWithFloatExp" assertions="0" time="0.000576" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="FilterWithGreaterThan" assertions="0" time="0.000596" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="FilterWithGreaterThanOrEquals" assertions="0" time="0.000782" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="FilterWithInteger" assertions="0" time="0.000801" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="FilterWithLessThan" assertions="0" time="0.000628" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="FilterWithLessThanOrEquals" assertions="0" time="0.000636" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="FilterWithNegativeInteger" assertions="0" time="0.000537" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="FilterWithNotEquals" assertions="0" time="0.000665" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="FilterWithNotEquals2" assertions="0" time="0.000558" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="FilterWithRoot" assertions="0" time="0.000758" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="FilterWithScan" assertions="0" time="0.000537" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="IndexerCloseInProperty" assertions="0" time="0.000784" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="IndexerOnly" assertions="0" time="0.001763" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="IndexerOnlyWithWhitespace" assertions="0" time="0.000909" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="MissingDotAfterIndexer" assertions="0" time="0.000857" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="MultipleIndexes" assertions="0" time="0.001003" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="MultipleIndexesWithWhitespace" assertions="0" time="0.000943" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="MultiplePropertiesAndIndexers" assertions="0" time="0.001128" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="MultipleQuotedIndexes" assertions="0" time="0.000986" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="MultipleQuotedIndexesWithWhitespace" assertions="0" time="0.001789" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="NoAtAfterOr" assertions="0" time="0.000938" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="NoFieldNameAfterDot" assertions="0" time="0.000683" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="NoPathAfterAt" assertions="0" time="0.000810" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="NoPathAfterDot" assertions="0" time="0.000795" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="NoPathAfterDot2" assertions="0" time="0.000616" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="OnePropertyOneScan" assertions="0" time="0.000656" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="PropertyFollowingEscapedPropertyName" assertions="0" time="0.000872" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="QueryTrue" assertions="0" time="0.000595" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="QuotedWildcardPropertyWithRoot" assertions="0" time="0.000820" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="RootArrayNoDot" assertions="0" time="0.000764" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="RootWithBadWhitespace" assertions="0" time="0.000851" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="RootWithBadWhitespace2" assertions="0" time="0.001091" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="ScanQuery" assertions="0" time="0.000774" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SingleProperty" assertions="0" time="0.000557" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SinglePropertyAndExistsQuery" assertions="0" time="0.000821" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SinglePropertyAndFilterWithDoubleEscape" assertions="0" time="0.000761" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SinglePropertyAndFilterWithEscapedRegex" assertions="0" time="0.000867" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SinglePropertyAndFilterWithEscapeQuote" assertions="0" time="0.001805" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SinglePropertyAndFilterWithFalse" assertions="0" time="0.000934" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SinglePropertyAndFilterWithNull" assertions="0" time="0.000826" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SinglePropertyAndFilterWithOpenRegex" assertions="0" time="0.000751" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SinglePropertyAndFilterWithRegex" assertions="0" time="0.000753" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SinglePropertyAndFilterWithRegexAndOptions" assertions="0" time="0.000755" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SinglePropertyAndFilterWithTrue" assertions="0" time="0.000897" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SinglePropertyAndFilterWithUnknownEscape" assertions="0" time="0.001292" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SinglePropertyAndFilterWithWhitespace" assertions="0" time="0.001533" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SinglePropertyAndIndexer" assertions="0" time="0.000770" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SinglePropertyWithRoot" assertions="0" time="0.000597" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SinglePropertyWithRootWithStartAndEndWhitespace" assertions="0" time="0.000706" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SingleQuotedProperty" assertions="0" time="0.001181" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SingleQuotedPropertyWithBrackets" assertions="0" time="0.000667" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SingleQuotedPropertyWithDots" assertions="0" time="0.000827" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SingleQuotedPropertyWithWhitespace" assertions="0" time="0.000986" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SingleScanWithRoot" assertions="0" time="0.000682" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SlicingIndex" assertions="0" time="0.000833" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SlicingIndexAll" assertions="0" time="0.000775" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SlicingIndexEmptyStart" assertions="0" time="0.000869" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SlicingIndexEmptyStop" assertions="0" time="0.000828" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SlicingIndexNegative" assertions="0" time="0.000954" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="SlicingIndexWhitespace" assertions="0" time="0.001551" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="TwoProperties" assertions="0" time="0.000991" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="UnclosedIndexer" assertions="0" time="0.000670" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="WildcardArray" assertions="0" time="0.000840" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="WildcardArrayWithProperty" assertions="0" time="0.000882" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="WildcardArrayWithRoot" assertions="0" time="0.000695" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="WildcardPropertyWithRoot" assertions="0" time="0.000671" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="WildcardScanWithRoot" assertions="0" time="0.000720" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase><testcase name="WildcardScanWithRootWithWhitespace" assertions="0" time="0.000840" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.JPathParseTests">
                    
                  </testcase></testsuite>
                <testsuite tests="7" time="0.026621" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:17Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests."><testcase name="AndExpressionTest" assertions="0" time="0.001873" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests">
                    
                  </testcase><testcase name="BooleanExpressionTest" assertions="0" time="0.001426" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests">
                    
                  </testcase><testcase name="BooleanExpressionTest_GreaterThanOperator" assertions="0" time="0.000845" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests">
                    
                  </testcase><testcase name="BooleanExpressionTest_GreaterThanOrEqualsOperator" assertions="0" time="0.000983" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests">
                    
                  </testcase><testcase name="BooleanExpressionTest_RegexEqualsOperator" assertions="0" time="0.001780" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests">
                    
                  </testcase><testcase name="BooleanExpressionTest_RegexEqualsOperator_CornerCase" assertions="0" time="0.000996" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests">
                    
                  </testcase><testcase name="OrExpressionTest" assertions="0" time="0.000838" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JsonPath.QueryExpressionTests">
                    
                  </testcase></testsuite>
              
              <testsuite tests="5" time="0.022885" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:18Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.JTokenEqualityComparerTests."><testcase name="CompareEmptyProperties" assertions="0" time="0.001076" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenEqualityComparerTests">
                  
                </testcase><testcase name="JArrayDictionary" assertions="0" time="0.003824" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenEqualityComparerTests">
                  
                </testcase><testcase name="JConstructorDictionary" assertions="0" time="0.001425" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenEqualityComparerTests">
                  
                </testcase><testcase name="JObjectDictionary" assertions="0" time="0.001113" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenEqualityComparerTests">
                  
                </testcase><testcase name="JValueDictionary" assertions="0" time="0.000730" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenEqualityComparerTests">
                  
                </testcase></testsuite>
              <testsuite tests="49" time="0.180913" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:18Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.JTokenReaderTest."><testcase name="ConvertBigIntegerToDecimal" assertions="0" time="0.000931" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ConvertBigIntegerToDouble" assertions="0" time="0.001383" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="DeserializeByteArrayWithTypeNameHandling" assertions="0" time="0.000959" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="DeserializeStringInt" assertions="0" time="0.002517" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ErrorTokenIndex" assertions="0" time="0.006278" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="InitialPath_ArrayBase_ArrayToken" assertions="0" time="0.001017" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="InitialPath_ArrayBase_PropertyToken" assertions="0" time="0.001008" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="InitialPath_PropertyBase_ArrayToken" assertions="0" time="0.000741" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="InitialPath_PropertyBase_PropertyToken" assertions="0" time="0.000645" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsBoolean_BigInteger_Success" assertions="0" time="0.000754" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsBoolean_Integer_Success" assertions="0" time="0.000960" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsBoolean_InvalidToken" assertions="0" time="0.001125" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsBoolean_Null_Success" assertions="0" time="0.000741" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsBoolean_String_Success" assertions="0" time="0.000973" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsBytes_Array" assertions="0" time="0.001484" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsBytes_Integer_Success" assertions="0" time="0.000718" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsBytes_Null" assertions="0" time="0.000960" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsBytesNull" assertions="0" time="0.001747" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDateTime_DateTimeOffset" assertions="0" time="0.001909" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDateTime_InvalidToken" assertions="0" time="0.000953" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDateTime_Null_Success" assertions="0" time="0.000598" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDateTime_String" assertions="0" time="0.000691" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDateTimeOffset_DateTime" assertions="0" time="0.001139" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDateTimeOffset_InvalidToken" assertions="0" time="0.000749" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDateTimeOffset_Null_Success" assertions="0" time="0.000578" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDateTimeOffset_String" assertions="0" time="0.000519" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDateTimeOffsetBadString" assertions="0" time="0.001875" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDateTimeOffsetBoolean" assertions="0" time="0.001069" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDateTimeOffsetString" assertions="0" time="0.000890" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDecimalBadString" assertions="0" time="0.000924" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDecimalBoolean" assertions="0" time="0.000897" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDecimalInt" assertions="0" time="0.000649" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDecimalNull" assertions="0" time="0.000682" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDecimalString" assertions="0" time="0.000702" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDouble_Integer_Success" assertions="0" time="0.000606" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDouble_InvalidToken" assertions="0" time="0.001041" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDouble_Null_Success" assertions="0" time="0.000505" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsDouble_String_Success" assertions="0" time="0.000592" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsInt32BadString" assertions="0" time="0.000913" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsInt32Boolean" assertions="0" time="0.000852" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsInt32Int" assertions="0" time="0.000696" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsString_Guid_Success" assertions="0" time="0.000633" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadAsString_Integer_Success" assertions="0" time="0.000576" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadBytes" assertions="0" time="0.000873" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadBytesFailure" assertions="0" time="0.001051" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadBytesFromEmptyString" assertions="0" time="0.002091" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadBytesFromString" assertions="0" time="0.000857" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="ReadLineInfo" assertions="0" time="0.002770" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase><testcase name="YahooFinance" assertions="0" time="0.002405" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenReaderTest">
                  
                </testcase></testsuite>
              <testsuite tests="57" time="0.251012" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:18Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.JTokenTests."><testcase name="AddAfterSelf" assertions="0" time="0.001213" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="AddBeforeSelf" assertions="0" time="0.001157" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="AddFirst" assertions="0" time="0.000938" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="AddPropertyToArray" assertions="0" time="0.000863" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="AddValueToObject" assertions="0" time="0.000573" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="AfterSelf" assertions="0" time="0.001399" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="Ancestors" assertions="0" time="0.001295" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="Ancestors_Many" assertions="0" time="0.001860" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="AncestorsAndSelf" assertions="0" time="0.000806" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="AncestorsAndSelf_Many" assertions="0" time="0.001747" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="BeforeAfter" assertions="0" time="0.001171" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="BeforeSelf" assertions="0" time="0.000920" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="Casting" assertions="0" time="0.020776" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="Children" assertions="0" time="0.001647" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="Clone" assertions="0" time="0.001177" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="CreateWriter" assertions="0" time="0.000945" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="DeepClone" assertions="0" time="0.001516" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="DeepEqualsObjectOrder" assertions="0" time="0.000529" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="Descendants" assertions="0" time="0.001047" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="Descendants_Many" assertions="0" time="0.002883" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="DescendantsAndSelf" assertions="0" time="0.001483" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="DescendantsAndSelf_Many" assertions="0" time="0.002013" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="DoubleDeepEquals" assertions="0" time="0.000648" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="FailedCasting" assertions="0" time="0.010721" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="HasValues" assertions="0" time="0.001007" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="ImplicitCastingTo" assertions="0" time="0.006856" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="Load" assertions="0" time="0.000805" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="Next" assertions="0" time="0.000822" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="Parent" assertions="0" time="0.001450" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="Parse" assertions="0" time="0.000503" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="Parse_ExcessiveContent" assertions="0" time="0.000894" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="Parse_ExcessiveContentJustComments" assertions="0" time="0.000703" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="Parse_NoComments" assertions="0" time="0.000649" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="ParseAdditionalContent" assertions="0" time="0.000973" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="Path" assertions="0" time="0.002376" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="Previous" assertions="0" time="0.000988" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="ReadFrom" assertions="0" time="0.002422" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="Remove" assertions="0" time="0.001613" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="RemoveAll" assertions="0" time="0.001455" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="Replace" assertions="0" time="0.002141" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="Root" assertions="0" time="0.001012" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="ToObject" assertions="0" time="0.005344" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="ToStringWithConverters" assertions="0" time="0.001481" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase><testcase name="ToStringWithNoIndenting" assertions="0" time="0.000975" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                  
                </testcase></testsuite><testsuite tests="13" time="0.041242" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:18Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.JTokenTests.PathEscapingTest."><testcase name="PathEscapingTest(&quot;test customer&quot;,&quot;['test customer']&quot;)" assertions="0" time="0.001297" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                    
                  </testcase><testcase name="PathEscapingTest(&quot;test customer's&quot;,&quot;['test customer\\'s']&quot;)" assertions="0" time="0.000571" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                    
                  </testcase><testcase name="PathEscapingTest(&quot;testcustomer's&quot;,&quot;['testcustomer\\'s']&quot;)" assertions="0" time="0.000544" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                    
                  </testcase><testcase name="PathEscapingTest(&quot;testcustomer&quot;,&quot;testcustomer&quot;)" assertions="0" time="0.000376" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                    
                  </testcase><testcase name="PathEscapingTest(&quot;test.customer&quot;,&quot;['test.customer']&quot;)" assertions="0" time="0.000422" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                    
                  </testcase><testcase name="PathEscapingTest(&quot;test\rcustomer&quot;,&quot;['test\\rcustomer']&quot;)" assertions="0" time="0.000340" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                    
                  </testcase><testcase name="PathEscapingTest(&quot;test\ncustomer&quot;,&quot;['test\\ncustomer']&quot;)" assertions="0" time="0.000656" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                    
                  </testcase><testcase name="PathEscapingTest(&quot;test\tcustomer&quot;,&quot;['test\\tcustomer']&quot;)" assertions="0" time="0.000340" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                    
                  </testcase><testcase name="PathEscapingTest(&quot;test\bcustomer&quot;,&quot;['test\\bcustomer']&quot;)" assertions="0" time="0.000404" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                    
                  </testcase><testcase name="PathEscapingTest(&quot;test\fcustomer&quot;,&quot;['test\\fcustomer']&quot;)" assertions="0" time="0.000418" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                    
                  </testcase><testcase name="PathEscapingTest(&quot;test/customer&quot;,&quot;['test/customer']&quot;)" assertions="0" time="0.000483" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                    
                  </testcase><testcase name="PathEscapingTest(&quot;test\\customer&quot;,&quot;['test\\\\customer']&quot;)" assertions="0" time="0.000529" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                    
                  </testcase><testcase name="PathEscapingTest(&quot;\&quot;test\&quot;customer&quot;,&quot;['\&quot;test\&quot;customer']&quot;)" assertions="0" time="0.000794" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenTests">
                    
                  </testcase></testsuite>
              <testsuite tests="13" time="0.043449" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:18Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.JTokenWriterTest."><testcase name="CurrentToken" assertions="0" time="0.001996" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenWriterTest">
                  
                </testcase><testcase name="DateTimeZoneHandling" assertions="0" time="0.000682" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenWriterTest">
                  
                </testcase><testcase name="State" assertions="0" time="0.001192" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenWriterTest">
                  
                </testcase><testcase name="ValueFormatting" assertions="0" time="0.002069" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenWriterTest">
                  
                </testcase><testcase name="WriteBigInteger" assertions="0" time="0.000870" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenWriterTest">
                  
                </testcase><testcase name="WriteComment" assertions="0" time="0.000767" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenWriterTest">
                  
                </testcase><testcase name="WriteDuplicatePropertyName" assertions="0" time="0.000685" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenWriterTest">
                  
                </testcase><testcase name="WriteEmptyToken" assertions="0" time="0.000843" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenWriterTest">
                  
                </testcase><testcase name="WriteRaw" assertions="0" time="0.000810" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenWriterTest">
                  
                </testcase><testcase name="WriteRawValue" assertions="0" time="0.000899" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenWriterTest">
                  
                </testcase><testcase name="WriteTokenWithParent" assertions="0" time="0.001864" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenWriterTest">
                  
                </testcase><testcase name="WriteTokenWithPropertyParent" assertions="0" time="0.001615" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenWriterTest">
                  
                </testcase><testcase name="WriteValueTokenWithParent" assertions="0" time="0.000815" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JTokenWriterTest">
                  
                </testcase></testsuite>
              <testsuite tests="65" time="0.251300" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:18Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.JValueTests."><testcase name="CastNullValueToNonNullable" assertions="0" time="0.001215" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ChangeValue" assertions="0" time="0.002075" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="Children" assertions="0" time="0.000922" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="CompareTo_MismatchedTypes" assertions="0" time="0.003160" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToBoolean" assertions="0" time="0.001115" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToBoolean_String" assertions="0" time="0.000568" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToByte" assertions="0" time="0.000703" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToChar" assertions="0" time="0.000850" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToDateTime" assertions="0" time="0.000897" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToDateTime_DateTimeOffset" assertions="0" time="0.000727" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToDecimal" assertions="0" time="0.000682" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToDecimal_Int64" assertions="0" time="0.000518" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToDouble" assertions="0" time="0.000584" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToInt16" assertions="0" time="0.000620" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToInt32" assertions="0" time="0.000484" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToInt32_BigInteger" assertions="0" time="0.000515" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToInt64" assertions="0" time="0.000580" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToSByte" assertions="0" time="0.000612" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToSingle" assertions="0" time="0.000602" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToString_Decimal" assertions="0" time="0.000744" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToString_Guid" assertions="0" time="0.000867" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToString_Null" assertions="0" time="0.000573" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToString_Uri" assertions="0" time="0.000524" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToType" assertions="0" time="0.000466" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToUInt16" assertions="0" time="0.000634" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToUInt32" assertions="0" time="0.000817" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertsToUInt64" assertions="0" time="0.000574" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertValueToCompatibleType" assertions="0" time="0.000821" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ConvertValueToFormattableType" assertions="0" time="0.000605" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="CreateComment" assertions="0" time="0.000542" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="CreateString" assertions="0" time="0.000669" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="DeepEquals" assertions="0" time="0.000638" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="EnumTests" assertions="0" time="0.019648" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ExpicitConversionTest" assertions="0" time="0.014867" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="First" assertions="0" time="0.001008" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="FloatParseHandling" assertions="0" time="0.000981" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="GetTypeCode" assertions="0" time="0.001037" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="HasValues" assertions="0" time="0.000511" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="Item" assertions="0" time="0.000776" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="JValueIConvertable" assertions="0" time="0.000479" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="JValueParse" assertions="0" time="0.000983" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="JValueToString" assertions="0" time="0.001450" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="Last" assertions="0" time="0.000980" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="Next" assertions="0" time="0.000570" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="Ordering" assertions="0" time="0.002415" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ParseAndConvertDateTimeOffset" assertions="0" time="0.001048" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ParseIsoTimeZones" assertions="0" time="0.000812" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="Previous" assertions="0" time="0.000465" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ReadDatesAsDateTimeOffsetViaJsonConvert" assertions="0" time="0.000822" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ReadOnlyConverterTest" assertions="0" time="0.000899" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="RemoveParentNull" assertions="0" time="0.000746" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="Root" assertions="0" time="0.000438" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="RoundTripDecimal" assertions="0" time="0.001941" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="SetDateTimeOffsetProperty" assertions="0" time="0.001859" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="SetValue" assertions="0" time="0.000853" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ToObjectEnum" assertions="0" time="0.001806" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ToObjectWithDefaultSettings" assertions="0" time="0.001063" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ToStringFormat" assertions="0" time="0.000678" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ToStringNewTypes" assertions="0" time="0.000876" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ToStringUri" assertions="0" time="0.000568" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="ToType" assertions="0" time="0.001291" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="UndefinedTests" assertions="0" time="0.000787" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="Values" assertions="0" time="0.000742" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="WriteFullDecimalPrecision" assertions="0" time="0.000540" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase><testcase name="WriteSingle" assertions="0" time="0.000474" status="Passed" classname="Newtonsoft.Json.Tests.Linq.JValueTests">
                  
                </testcase></testsuite>
              <testsuite tests="59" time="0.268616" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:19Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.LinqToJsonTest."><testcase name="AsJEnumerable" assertions="0" time="0.002364" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="BasicQuerying" assertions="0" time="0.001372" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="ChildrenExtension" assertions="0" time="0.003496" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="CommentsAndReadFrom" assertions="0" time="0.000823" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="CommentsAndReadFrom_IgnoreComments" assertions="0" time="0.000568" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="CovariantIJEnumerable" assertions="0" time="0.004510" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="CreateJTokenTree" assertions="0" time="0.001248" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="CreateJTokenTreeNested" assertions="0" time="0.006941" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="CreateLongArray" assertions="0" time="0.003790" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="DateTimeOffset" assertions="0" time="0.006573" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="DoubleValue" assertions="0" time="0.000826" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="EmptyJEnumerableAsEnumerable" assertions="0" time="0.000506" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="EmptyJEnumerableCount" assertions="0" time="0.000691" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="EmptyJEnumerableEquals" assertions="0" time="0.000898" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="EmptyJEnumerableGetHashCode" assertions="0" time="0.000571" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="EscapedPath" assertions="0" time="0.000778" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="EscapedPathTests" assertions="0" time="0.001082" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="EscapedQuotePath" assertions="0" time="0.001427" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="ExceptionFromOverloadWithJValue" assertions="0" time="0.009479" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="ForEach" assertions="0" time="0.000928" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="FromAnonDictionary" assertions="0" time="0.006516" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="FromObject" assertions="0" time="0.002056" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="FromObject_ByteMaxValue" assertions="0" time="0.002100" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="FromObject_ULongMaxValue" assertions="0" time="0.002528" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="FromObjectExample" assertions="0" time="0.003696" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="FromObjectGuid" assertions="0" time="0.001030" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="FromObjectTimeSpan" assertions="0" time="0.000694" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="FromObjectUri" assertions="0" time="0.000860" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="GoogleSearchAPI" assertions="0" time="0.003449" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="HashCodeTests" assertions="0" time="0.001205" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="IncompleteContainers" assertions="0" time="0.001240" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="JArrayStringIndex" assertions="0" time="0.000966" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="JConstructorStringIndex" assertions="0" time="0.000706" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="JObjectIntIndex" assertions="0" time="0.000735" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="JPropertyPath" assertions="0" time="0.000532" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="JTokenToString" assertions="0" time="0.000891" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="JTokenToStringTypes" assertions="0" time="0.001454" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="LinqCast" assertions="0" time="0.002577" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="LinqToJsonDeserialize" assertions="0" time="0.001018" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="Manual" assertions="0" time="0.000807" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="ObjectParse" assertions="0" time="0.003191" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="ParseWithPrecendingComments" assertions="0" time="0.000594" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="QueryingExample" assertions="0" time="0.001921" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="SerializeWithNoRedundentIdPropertiesTest" assertions="0" time="0.004834" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="StartingCommentAndReadFrom" assertions="0" time="0.000874" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="StartingCommentAndReadFrom_IgnoreComments" assertions="0" time="0.000687" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="StartingEndArrayAndReadFrom" assertions="0" time="0.000934" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="StartingUndefinedAndReadFrom" assertions="0" time="0.000772" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="ToObject_Base64AndGuid" assertions="0" time="0.000967" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="ToObject_Enum_Converter" assertions="0" time="0.001931" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="ToObject_Enum_NoConverter" assertions="0" time="0.002472" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="ToObject_Guid" assertions="0" time="0.005200" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="ToObjectDecimal" assertions="0" time="0.005133" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="ToObjectFromGuidToString" assertions="0" time="0.000768" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="ToObjectFromIntegerToString" assertions="0" time="0.000422" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="ToObjectFromStringToInteger" assertions="0" time="0.000697" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="ToStringJsonConverter" assertions="0" time="0.001331" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="UriGuidTimeSpanTestClassEmptyTest" assertions="0" time="0.001297" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase><testcase name="UriGuidTimeSpanTestClassValuesTest" assertions="0" time="0.001803" status="Passed" classname="Newtonsoft.Json.Tests.Linq.LinqToJsonTest">
                  
                </testcase></testsuite>
              <testsuite tests="21" time="0.105160" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:19Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Linq.MergeTests."><testcase name="ConcatArray" assertions="0" time="0.008294" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="Merge_IgnorePropertyCase" assertions="0" time="0.001353" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="MergeArray" assertions="0" time="0.015219" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="MergeArrayOverwrite_Nested" assertions="0" time="0.001138" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="MergeArrayOverwrite_Root" assertions="0" time="0.000763" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="MergeChildObject" assertions="0" time="0.006550" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="MergeDefaultContainers" assertions="0" time="0.001341" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="MergeJConstructor" assertions="0" time="0.001952" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="MergeJProperty" assertions="0" time="0.000728" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="MergeMismatchedTypesRoot" assertions="0" time="0.000616" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="MergeMismatchingTypesInArray" assertions="0" time="0.001036" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="MergeMismatchingTypesInObject" assertions="0" time="0.012271" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="MergeMultipleObjects" assertions="0" time="0.003422" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="MergeNull" assertions="0" time="0.000857" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="MergeNullString" assertions="0" time="0.000645" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="MergeNullValue" assertions="0" time="0.001374" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="MergeNullValueHandling_Array" assertions="0" time="0.001010" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="MergeNullValueHandling_Object" assertions="0" time="0.001045" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="MergeObjectProperty" assertions="0" time="0.000592" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="MergeSettingsComparisonDefault" assertions="0" time="0.000690" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase><testcase name="UnionArrays" assertions="0" time="0.001093" status="Passed" classname="Newtonsoft.Json.Tests.Linq.MergeTests">
                  
                </testcase></testsuite>
            
            
              
              <testsuite tests="22" time="0.147623" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:21Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Schema.ExtensionsTests."><testcase name="Blog" assertions="0" time="0.002501" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="DivisibleBy_Approx" assertions="0" time="0.001117" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="DivisibleBy_Int" assertions="0" time="0.001383" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="Enum_Properties" assertions="0" time="0.001683" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="ExclusiveMaximum_Float" assertions="0" time="0.001139" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="ExclusiveMaximum_Int" assertions="0" time="0.001123" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="ExclusiveMinimum_Float" assertions="0" time="0.002290" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="ExclusiveMinimum_Int" assertions="0" time="0.001883" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="GenerateSchemaAndSerializeFromTypeTests" assertions="0" time="0.056845" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="IsValid" assertions="0" time="0.002321" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="Items_Positional" assertions="0" time="0.001663" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="UndefinedPropertyOnNoPropertySchema" assertions="0" time="0.001580" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="UniqueItems_ComplexDuplicate" assertions="0" time="0.002412" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="UniqueItems_NestedDuplicate" assertions="0" time="0.001489" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="UniqueItems_Property" assertions="0" time="0.000954" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="UniqueItems_SimpleDuplicate" assertions="0" time="0.000996" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="UniqueItems_SimpleUnique" assertions="0" time="0.001678" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="ValidateFailureWithOutLineInfoBecauseOfEndToken" assertions="0" time="0.001829" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="ValidateRequiredFieldsWithLineInfo" assertions="0" time="0.001726" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="ValidateWithEventHandler" assertions="0" time="0.001791" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="ValidateWithOutEventHandlerFailure" assertions="0" time="0.001170" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase><testcase name="ValidateWithOutEventHandlerSuccess" assertions="0" time="0.001302" status="Passed" classname="Newtonsoft.Json.Tests.Schema.ExtensionsTests">
                  
                </testcase></testsuite>
              <testsuite tests="34" time="0.119601" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:21Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests."><testcase name="AdditionalItems" assertions="0" time="0.001480" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="AdditionalProperties" assertions="0" time="0.001320" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="AllowAdditionalItems" assertions="0" time="0.001040" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="CircularReference" assertions="0" time="0.001058" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="DefaultComplexType" assertions="0" time="0.000722" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="DefaultPrimitiveType" assertions="0" time="0.000668" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="DisallowAdditionalItems" assertions="0" time="0.000681" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="DisallowMultipleTypes" assertions="0" time="0.000750" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="DisallowSingleType" assertions="0" time="0.000730" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="Enum" assertions="0" time="0.000899" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="EscapedReferences" assertions="0" time="0.002404" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="ExclusiveMinimum_ExclusiveMaximum" assertions="0" time="0.001124" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="Format" assertions="0" time="0.001087" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="Hidden" assertions="0" time="0.001012" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="Id" assertions="0" time="0.001220" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="Location" assertions="0" time="0.001754" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="MinimumMaximum" assertions="0" time="0.001795" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="MultipleItems" assertions="0" time="0.000855" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="MultipleTypes" assertions="0" time="0.000720" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="Pattern" assertions="0" time="0.000705" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="PatternProperties" assertions="0" time="0.000756" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="ReadOnly" assertions="0" time="0.000866" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="Reference_BackwardsLocation" assertions="0" time="0.000759" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="Reference_ForwardsLocation" assertions="0" time="0.000622" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="Reference_NonStandardLocation" assertions="0" time="0.000754" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="References_Array" assertions="0" time="0.001409" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="References_IndexNegative" assertions="0" time="0.001577" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="References_IndexNotInteger" assertions="0" time="0.000920" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="References_IndexTooBig" assertions="0" time="0.000946" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="Required" assertions="0" time="0.000910" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="Requires" assertions="0" time="0.000639" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="Simple" assertions="0" time="0.001041" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="Title" assertions="0" time="0.000710" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase><testcase name="UnresolvedReference" assertions="0" time="0.001125" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaBuilderTests">
                  
                </testcase></testsuite>
              <testsuite tests="20" time="0.124338" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:21Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests."><testcase name="CircularCollectionReferences" assertions="0" time="0.021419" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase><testcase name="CircularReferenceError" assertions="0" time="0.001277" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase><testcase name="CircularReferenceWithExplicitId" assertions="0" time="0.000762" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase><testcase name="CircularReferenceWithMixedRequires" assertions="0" time="0.000955" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase><testcase name="CircularReferenceWithTypeNameId" assertions="0" time="0.000894" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase><testcase name="Generate_DefaultValueAttributeTestClass" assertions="0" time="0.003304" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase><testcase name="Generate_GenericDictionary" assertions="0" time="0.004446" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase><testcase name="Generate_Person" assertions="0" time="0.001098" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase><testcase name="Generate_RequiredMembersClass" assertions="0" time="0.002695" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase><testcase name="Generate_Store" assertions="0" time="0.001470" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase><testcase name="Generate_UserNullable" assertions="0" time="0.004400" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase><testcase name="GenerateForNullableInt32" assertions="0" time="0.001667" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase><testcase name="GenerateSchemaCamelCase" assertions="0" time="0.007944" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase><testcase name="GenerateSchemaForDBNull" assertions="0" time="0.000778" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase><testcase name="GenerateSchemaForISerializable" assertions="0" time="0.001543" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase><testcase name="GenerateSchemaForType" assertions="0" time="0.013564" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase><testcase name="GenerateSchemaSerializable" assertions="0" time="0.006359" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase><testcase name="GenerateSchemaWithNegativeEnum" assertions="0" time="0.002926" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase><testcase name="JsonPropertyWithHandlingValues" assertions="0" time="0.001902" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase><testcase name="MissingSchemaIdHandlingTest" assertions="0" time="0.003789" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests">
                  
                </testcase></testsuite>
              <testsuite tests="3" time="0.015106" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:22Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Schema.JsonSchemaModelBuilderTests."><testcase name="CircularReference" assertions="0" time="0.001035" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaModelBuilderTests">
                  
                </testcase><testcase name="ExtendedComplex" assertions="0" time="0.003013" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaModelBuilderTests">
                  
                </testcase><testcase name="Required" assertions="0" time="0.001296" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaModelBuilderTests">
                  
                </testcase></testsuite>
              <testsuite tests="2" time="0.014907" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:22Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests."><testcase name="AddSchema" assertions="0" time="0.004312" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests">
                  
                </testcase><testcase name="CircularReference" assertions="0" time="0.001549" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests">
                  
                </testcase></testsuite>
              
                
                <testsuite tests="191" time="0.657380" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:22Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest."><testcase name="SpecTest(additionalItems.json - additionalItems as schema - additional items match schema)" assertions="0" time="0.002098" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(additionalItems.json - additionalItems as schema - additional items do not match schema)" assertions="0" time="0.001186" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(additionalItems.json - items is schema, no additionalItems - all items match schema)" assertions="0" time="0.000858" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(additionalItems.json - array of items with no additionalItems - no additional items present)" assertions="0" time="0.001759" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(additionalItems.json - array of items with no additionalItems - additional items are not permitted)" assertions="0" time="0.001548" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(additionalItems.json - additionalItems as false without items - items defaults to empty schema so everything is valid)" assertions="0" time="0.000619" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(additionalItems.json - additionalItems as false without items - ignores non-arrays)" assertions="0" time="0.002066" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(additionalItems.json - additionalItems are allowed by default - only the first items are validated)" assertions="0" time="0.001206" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(additionalProperties.json - additionalProperties being false does not allow other properties - no additional properties is valid)" assertions="0" time="0.001288" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(additionalProperties.json - additionalProperties being false does not allow other properties - an additional property is invalid)" assertions="0" time="0.001643" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(additionalProperties.json - additionalProperties being false does not allow other properties - ignores non-objects)" assertions="0" time="0.001579" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(additionalProperties.json - additionalProperties allows a schema which should validate - no additional properties is valid)" assertions="0" time="0.001967" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(additionalProperties.json - additionalProperties allows a schema which should validate - an additional valid property is valid)" assertions="0" time="0.001338" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(additionalProperties.json - additionalProperties allows a schema which should validate - an additional invalid property is invalid)" assertions="0" time="0.000812" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(additionalProperties.json - additionalProperties are allowed by default - additional properties are allowed)" assertions="0" time="0.000859" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(disallow.json - disallow - allowed)" assertions="0" time="0.000833" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(disallow.json - disallow - disallowed)" assertions="0" time="0.001874" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(disallow.json - multiple disallow - valid)" assertions="0" time="0.000928" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(disallow.json - multiple disallow - mismatch)" assertions="0" time="0.000754" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(disallow.json - multiple disallow - other mismatch)" assertions="0" time="0.001145" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(divisibleBy.json - by int - int by int)" assertions="0" time="0.001148" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(divisibleBy.json - by int - int by int fail)" assertions="0" time="0.000971" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(divisibleBy.json - by int - ignores non-numbers)" assertions="0" time="0.000861" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(divisibleBy.json - by number - zero is divisible by anything (except 0))" assertions="0" time="0.000971" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(divisibleBy.json - by number - 4.5 is divisible by 1.5)" assertions="0" time="0.000817" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(divisibleBy.json - by number - 35 is not divisible by 1.5)" assertions="0" time="0.000790" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(divisibleBy.json - by small number - 0.0075 is divisible by 0.0001)" assertions="0" time="0.000714" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(divisibleBy.json - by small number - 0.00751 is not divisible by 0.0001)" assertions="0" time="0.000935" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(enum.json - simple enum validation - one of the enum is valid)" assertions="0" time="0.001551" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(enum.json - simple enum validation - something else is invalid)" assertions="0" time="0.000967" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(enum.json - heterogeneous enum validation - one of the enum is valid)" assertions="0" time="0.001061" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(enum.json - heterogeneous enum validation - something else is invalid)" assertions="0" time="0.000822" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(enum.json - heterogeneous enum validation - objects are deep compared)" assertions="0" time="0.000921" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(extends.json - extends - extends)" assertions="0" time="0.000934" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(extends.json - extends - mismatch extends)" assertions="0" time="0.001152" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(extends.json - extends - mismatch extended)" assertions="0" time="0.001630" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(extends.json - extends - wrong type)" assertions="0" time="0.001116" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(extends.json - multiple extends - valid)" assertions="0" time="0.001054" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(extends.json - multiple extends - mismatch first extends)" assertions="0" time="0.001319" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(extends.json - multiple extends - mismatch second extends)" assertions="0" time="0.001443" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(extends.json - multiple extends - mismatch both)" assertions="0" time="0.002154" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(extends.json - extends simple types - valid)" assertions="0" time="0.000918" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(extends.json - extends simple types - mismatch extends)" assertions="0" time="0.000837" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(items.json - a schema given for items - valid items)" assertions="0" time="0.000858" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(items.json - a schema given for items - wrong type of items)" assertions="0" time="0.001111" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(items.json - a schema given for items - ignores non-arrays)" assertions="0" time="0.000959" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(items.json - an array of schemas for items - correct types)" assertions="0" time="0.000927" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(items.json - an array of schemas for items - wrong types)" assertions="0" time="0.001743" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(maxItems.json - maxItems validation - shorter is valid)" assertions="0" time="0.001054" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(maxItems.json - maxItems validation - exact length is valid)" assertions="0" time="0.000741" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(maxItems.json - maxItems validation - too long is invalid)" assertions="0" time="0.000858" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(maxItems.json - maxItems validation - ignores non-arrays)" assertions="0" time="0.000837" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(maxLength.json - maxLength validation - shorter is valid)" assertions="0" time="0.001040" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(maxLength.json - maxLength validation - exact length is valid)" assertions="0" time="0.001084" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(maxLength.json - maxLength validation - too long is invalid)" assertions="0" time="0.000913" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(maxLength.json - maxLength validation - ignores non-strings)" assertions="0" time="0.000727" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(maximum.json - maximum validation - below the maximum is valid)" assertions="0" time="0.000680" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(maximum.json - maximum validation - above the maximum is invalid)" assertions="0" time="0.000799" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(maximum.json - maximum validation - ignores non-numbers)" assertions="0" time="0.000654" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(maximum.json - exclusiveMaximum validation - below the maximum is still valid)" assertions="0" time="0.000880" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(maximum.json - exclusiveMaximum validation - boundary point is invalid)" assertions="0" time="0.001215" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(minItems.json - minItems validation - longer is valid)" assertions="0" time="0.001445" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(minItems.json - minItems validation - exact length is valid)" assertions="0" time="0.001815" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(minItems.json - minItems validation - too short is invalid)" assertions="0" time="0.001287" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(minItems.json - minItems validation - ignores non-arrays)" assertions="0" time="0.000850" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(minLength.json - minLength validation - longer is valid)" assertions="0" time="0.001257" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(minLength.json - minLength validation - exact length is valid)" assertions="0" time="0.000881" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(minLength.json - minLength validation - too short is invalid)" assertions="0" time="0.002106" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(minLength.json - minLength validation - ignores non-strings)" assertions="0" time="0.001133" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(minimum.json - minimum validation - above the minimum is valid)" assertions="0" time="0.000700" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(minimum.json - minimum validation - below the minimum is invalid)" assertions="0" time="0.000760" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(minimum.json - minimum validation - ignores non-numbers)" assertions="0" time="0.001872" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(minimum.json - exclusiveMinimum validation - above the minimum is still valid)" assertions="0" time="0.001031" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(minimum.json - exclusiveMinimum validation - boundary point is invalid)" assertions="0" time="0.000935" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(pattern.json - pattern validation - a matching pattern is valid)" assertions="0" time="0.001202" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(pattern.json - pattern validation - a non-matching pattern is invalid)" assertions="0" time="0.001093" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(pattern.json - pattern validation - ignores non-strings)" assertions="0" time="0.001281" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(patternProperties.json - patternProperties validates properties matching a regex - a single valid match is valid)" assertions="0" time="0.001296" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(patternProperties.json - patternProperties validates properties matching a regex - multiple valid matches is valid)" assertions="0" time="0.000978" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(patternProperties.json - patternProperties validates properties matching a regex - a single invalid match is invalid)" assertions="0" time="0.001008" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(patternProperties.json - patternProperties validates properties matching a regex - multiple invalid matches is invalid)" assertions="0" time="0.001289" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(patternProperties.json - patternProperties validates properties matching a regex - ignores non-objects)" assertions="0" time="0.001009" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(patternProperties.json - multiple simultaneous patternProperties are validated - a single valid match is valid)" assertions="0" time="0.001991" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(patternProperties.json - multiple simultaneous patternProperties are validated - a simultaneous match is valid)" assertions="0" time="0.001560" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(patternProperties.json - multiple simultaneous patternProperties are validated - multiple matches is valid)" assertions="0" time="0.001171" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(patternProperties.json - multiple simultaneous patternProperties are validated - an invalid due to one is invalid)" assertions="0" time="0.000974" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(patternProperties.json - multiple simultaneous patternProperties are validated - an invalid due to the other is invalid)" assertions="0" time="0.001812" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(patternProperties.json - multiple simultaneous patternProperties are validated - an invalid due to both is invalid)" assertions="0" time="0.001069" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(properties.json - object properties validation - both properties present and valid is valid)" assertions="0" time="0.001067" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(properties.json - object properties validation - one property invalid is invalid)" assertions="0" time="0.001334" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(properties.json - object properties validation - both properties invalid is invalid)" assertions="0" time="0.001778" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(properties.json - object properties validation - doesn't invalidate other properties)" assertions="0" time="0.002234" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(properties.json - object properties validation - ignores non-objects)" assertions="0" time="0.000934" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(properties.json - properties, patternProperties, additionalProperties interaction - property validates property)" assertions="0" time="0.001657" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(properties.json - properties, patternProperties, additionalProperties interaction - property invalidates property)" assertions="0" time="0.001579" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(properties.json - properties, patternProperties, additionalProperties interaction - patternProperty invalidates property)" assertions="0" time="0.001721" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(properties.json - properties, patternProperties, additionalProperties interaction - patternProperty validates nonproperty)" assertions="0" time="0.001678" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(properties.json - properties, patternProperties, additionalProperties interaction - patternProperty invalidates nonproperty)" assertions="0" time="0.002410" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(properties.json - properties, patternProperties, additionalProperties interaction - additionalProperty ignores property)" assertions="0" time="0.001594" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(properties.json - properties, patternProperties, additionalProperties interaction - additionalProperty validates others)" assertions="0" time="0.001912" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(properties.json - properties, patternProperties, additionalProperties interaction - additionalProperty invalidates others)" assertions="0" time="0.002046" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(ref.json - root pointer ref - match)" assertions="0" time="0.001422" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(ref.json - root pointer ref - recursive match)" assertions="0" time="0.001502" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(ref.json - root pointer ref - mismatch)" assertions="0" time="0.001210" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(ref.json - root pointer ref - recursive mismatch)" assertions="0" time="0.000981" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(ref.json - relative pointer ref - match)" assertions="0" time="0.001162" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(ref.json - relative pointer ref - mismatch)" assertions="0" time="0.001537" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(ref.json - escaped pointer ref - slash)" assertions="0" time="0.001623" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(ref.json - escaped pointer ref - tilda)" assertions="0" time="0.001961" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(ref.json - escaped pointer ref - percent)" assertions="0" time="0.002152" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(required.json - required validation - present required property is valid)" assertions="0" time="0.001668" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(required.json - required validation - non-present required property is invalid)" assertions="0" time="0.001181" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(required.json - required default validation - not required by default)" assertions="0" time="0.001121" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(required.json - required explicitly false validation - not required if required is false)" assertions="0" time="0.000968" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - integer type matches integers - an integer is an integer)" assertions="0" time="0.000831" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - integer type matches integers - a float is not an integer)" assertions="0" time="0.001315" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - integer type matches integers - a float is not an integer even without fractional part)" assertions="0" time="0.001403" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - integer type matches integers - a string is not an integer)" assertions="0" time="0.001415" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - integer type matches integers - an object is not an integer)" assertions="0" time="0.000812" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - integer type matches integers - an array is not an integer)" assertions="0" time="0.001292" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - integer type matches integers - a boolean is not an integer)" assertions="0" time="0.000867" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - integer type matches integers - null is not an integer)" assertions="0" time="0.001124" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - number type matches numbers - an integer is a number)" assertions="0" time="0.000907" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - number type matches numbers - a float is a number)" assertions="0" time="0.000998" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - number type matches numbers - a string is not a number)" assertions="0" time="0.000785" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - number type matches numbers - an object is not a number)" assertions="0" time="0.001013" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - number type matches numbers - an array is not a number)" assertions="0" time="0.001257" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - number type matches numbers - a boolean is not a number)" assertions="0" time="0.001931" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - number type matches numbers - null is not a number)" assertions="0" time="0.000908" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - string type matches strings - 1 is not a string)" assertions="0" time="0.000888" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - string type matches strings - a float is not a string)" assertions="0" time="0.000754" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - string type matches strings - a string is a string)" assertions="0" time="0.000862" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - string type matches strings - an object is not a string)" assertions="0" time="0.001256" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - string type matches strings - an array is not a string)" assertions="0" time="0.002410" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - string type matches strings - a boolean is not a string)" assertions="0" time="0.001090" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - string type matches strings - null is not a string)" assertions="0" time="0.000803" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - object type matches objects - an integer is not an object)" assertions="0" time="0.000891" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - object type matches objects - a float is not an object)" assertions="0" time="0.001484" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - object type matches objects - a string is not an object)" assertions="0" time="0.001521" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - object type matches objects - an object is an object)" assertions="0" time="0.000949" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - object type matches objects - an array is not an object)" assertions="0" time="0.000865" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - object type matches objects - a boolean is not an object)" assertions="0" time="0.000920" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - object type matches objects - null is not an object)" assertions="0" time="0.001340" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - array type matches arrays - an integer is not an array)" assertions="0" time="0.001237" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - array type matches arrays - a float is not an array)" assertions="0" time="0.001338" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - array type matches arrays - a string is not an array)" assertions="0" time="0.001440" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - array type matches arrays - an object is not an array)" assertions="0" time="0.001991" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - array type matches arrays - an array is not an array)" assertions="0" time="0.001297" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - array type matches arrays - a boolean is not an array)" assertions="0" time="0.000842" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - array type matches arrays - null is not an array)" assertions="0" time="0.001633" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - boolean type matches booleans - an integer is not a boolean)" assertions="0" time="0.001021" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - boolean type matches booleans - a float is not a boolean)" assertions="0" time="0.001204" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - boolean type matches booleans - a string is not a boolean)" assertions="0" time="0.000912" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - boolean type matches booleans - an object is not a boolean)" assertions="0" time="0.001039" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - boolean type matches booleans - an array is not a boolean)" assertions="0" time="0.000689" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - boolean type matches booleans - a boolean is not a boolean)" assertions="0" time="0.000740" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - boolean type matches booleans - null is not a boolean)" assertions="0" time="0.000924" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - null type matches only the null object - an integer is not null)" assertions="0" time="0.000750" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - null type matches only the null object - a float is not null)" assertions="0" time="0.000678" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - null type matches only the null object - a string is not null)" assertions="0" time="0.000742" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - null type matches only the null object - an object is not null)" assertions="0" time="0.000738" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - null type matches only the null object - an array is not null)" assertions="0" time="0.000890" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - null type matches only the null object - a boolean is not null)" assertions="0" time="0.000784" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - null type matches only the null object - null is null)" assertions="0" time="0.001640" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - any type matches any type - any type includes integers)" assertions="0" time="0.001024" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - any type matches any type - any type includes float)" assertions="0" time="0.000876" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - any type matches any type - any type includes string)" assertions="0" time="0.000657" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - any type matches any type - any type includes object)" assertions="0" time="0.000684" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - any type matches any type - any type includes array)" assertions="0" time="0.000761" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - any type matches any type - any type includes boolean)" assertions="0" time="0.002491" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - any type matches any type - any type includes null)" assertions="0" time="0.001123" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - multiple types can be specified in an array - an integer is valid)" assertions="0" time="0.000653" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - multiple types can be specified in an array - a string is valid)" assertions="0" time="0.000640" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - multiple types can be specified in an array - a float is invalid)" assertions="0" time="0.000629" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - multiple types can be specified in an array - an object is invalid)" assertions="0" time="0.000707" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - multiple types can be specified in an array - an array is invalid)" assertions="0" time="0.000830" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - multiple types can be specified in an array - a boolean is invalid)" assertions="0" time="0.001291" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(type.json - multiple types can be specified in an array - null is invalid)" assertions="0" time="0.000548" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(uniqueItems.json - uniqueItems validation - unique array of integers is valid)" assertions="0" time="0.000620" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(uniqueItems.json - uniqueItems validation - non-unique array of integers is invalid)" assertions="0" time="0.000551" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(uniqueItems.json - uniqueItems validation - numbers are unique if mathematically unequal)" assertions="0" time="0.000622" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(uniqueItems.json - uniqueItems validation - unique array of objects is valid)" assertions="0" time="0.000563" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(uniqueItems.json - uniqueItems validation - non-unique array of objects is invalid)" assertions="0" time="0.000633" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(uniqueItems.json - uniqueItems validation - unique array of nested objects is valid)" assertions="0" time="0.001030" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(uniqueItems.json - uniqueItems validation - non-unique array of nested objects is invalid)" assertions="0" time="0.001391" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(uniqueItems.json - uniqueItems validation - unique array of arrays is valid)" assertions="0" time="0.000815" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(uniqueItems.json - uniqueItems validation - non-unique array of arrays is invalid)" assertions="0" time="0.000727" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(uniqueItems.json - uniqueItems validation - 1 and true are unique)" assertions="0" time="0.000662" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(uniqueItems.json - uniqueItems validation - 0 and false are unique)" assertions="0" time="0.000532" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(uniqueItems.json - uniqueItems validation - unique heterogeneous types are valid)" assertions="0" time="0.000565" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase><testcase name="SpecTest(uniqueItems.json - uniqueItems validation - non-unique heterogeneous types are invalid)" assertions="0" time="0.001204" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests">
                    
                  </testcase></testsuite>
              
              <testsuite tests="16" time="0.048020" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:23Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Schema.JsonSchemaTests."><testcase name="Extends" assertions="0" time="0.001744" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaTests">
                  
                </testcase><testcase name="Extends_Multiple" assertions="0" time="0.001684" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaTests">
                  
                </testcase><testcase name="IntegerValidatesAgainstFloatFlags" assertions="0" time="0.001030" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaTests">
                  
                </testcase><testcase name="ToString_AdditionalItems" assertions="0" time="0.000592" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaTests">
                  
                </testcase><testcase name="WriteTo_AdditionalProperties" assertions="0" time="0.000859" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaTests">
                  
                </testcase><testcase name="WriteTo_CircularReference" assertions="0" time="0.000939" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaTests">
                  
                </testcase><testcase name="WriteTo_DisallowMultiple" assertions="0" time="0.001014" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaTests">
                  
                </testcase><testcase name="WriteTo_DisallowSingle" assertions="0" time="0.000858" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaTests">
                  
                </testcase><testcase name="WriteTo_Enum" assertions="0" time="0.000991" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaTests">
                  
                </testcase><testcase name="WriteTo_ExclusiveMinimum_ExclusiveMaximum" assertions="0" time="0.000720" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaTests">
                  
                </testcase><testcase name="WriteTo_MultipleItems" assertions="0" time="0.000703" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaTests">
                  
                </testcase><testcase name="WriteTo_PatternProperties" assertions="0" time="0.000763" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaTests">
                  
                </testcase><testcase name="WriteTo_PositionalItemsValidation_FalseWithItemsSchema" assertions="0" time="0.000803" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaTests">
                  
                </testcase><testcase name="WriteTo_PositionalItemsValidation_True" assertions="0" time="0.000682" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaTests">
                  
                </testcase><testcase name="WriteTo_PositionalItemsValidation_TrueWithItemsSchema" assertions="0" time="0.000707" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaTests">
                  
                </testcase><testcase name="WriteTo_Properties" assertions="0" time="0.000897" status="Passed" classname="Newtonsoft.Json.Tests.Schema.JsonSchemaTests">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="4.388435" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:24Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Schema.PerformanceTests."><testcase name="ReaderPerformance" assertions="0" time="4.380761" status="Passed" classname="Newtonsoft.Json.Tests.Schema.PerformanceTests">
                  
                </testcase></testsuite>
            
            
              
              
              <testsuite tests="9" time="0.087690" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:29Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.CamelCaseNamingStrategyTests."><testcase name="BlogPostExample" assertions="0" time="0.009273" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.CamelCaseNamingStrategyTests">
                  
                </testcase><testcase name="DictionaryCamelCasePropertyNames_Disabled" assertions="0" time="0.004568" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.CamelCaseNamingStrategyTests">
                  
                </testcase><testcase name="DictionaryCamelCasePropertyNames_Enabled" assertions="0" time="0.004484" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.CamelCaseNamingStrategyTests">
                  
                </testcase><testcase name="DynamicCamelCasePropertyNames" assertions="0" time="0.030585" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.CamelCaseNamingStrategyTests">
                  
                </testcase><testcase name="JsonConvertSerializerSettings" assertions="0" time="0.007090" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.CamelCaseNamingStrategyTests">
                  
                </testcase><testcase name="JsonDictionaryAttribute_NamingStrategyType" assertions="0" time="0.003127" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.CamelCaseNamingStrategyTests">
                  
                </testcase><testcase name="JsonObjectAttribute_NamingStrategyType" assertions="0" time="0.002647" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.CamelCaseNamingStrategyTests">
                  
                </testcase><testcase name="JsonPropertyAttribute_NamingStrategyType" assertions="0" time="0.002158" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.CamelCaseNamingStrategyTests">
                  
                </testcase><testcase name="JTokenWriter_OverrideSpecifiedName" assertions="0" time="0.002959" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.CamelCaseNamingStrategyTests">
                  
                </testcase></testsuite>
              <testsuite tests="7" time="0.045570" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:29Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests."><testcase name="BlogPostExample" assertions="0" time="0.000988" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests">
                  
                </testcase><testcase name="DictionaryCamelCasePropertyNames" assertions="0" time="0.002497" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests">
                  
                </testcase><testcase name="DynamicCamelCasePropertyNames" assertions="0" time="0.016288" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests">
                  
                </testcase><testcase name="EnsureContractsShared" assertions="0" time="0.001912" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests">
                  
                </testcase><testcase name="JsonConvertSerializerSettings" assertions="0" time="0.001733" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests">
                  
                </testcase><testcase name="JTokenWriter" assertions="0" time="0.002264" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests">
                  
                </testcase><testcase name="MemberSearchFlags" assertions="0" time="0.002992" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.CamelCasePropertyNamesContractResolverTests">
                  
                </testcase></testsuite>
              <testsuite tests="13" time="0.059434" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:29Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.ConstructorHandlingTests."><testcase name="ConstructorParametersRespectDefaultValueTest" assertions="0" time="0.006161" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ConstructorHandlingTests">
                  
                </testcase><testcase name="ConstructorParametersRespectDefaultValueTest_Attrbutes" assertions="0" time="0.003526" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ConstructorHandlingTests">
                  
                </testcase><testcase name="FailWithPrivateConstructorPlusParameterizedAndDefault" assertions="0" time="0.002362" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ConstructorHandlingTests">
                  
                </testcase><testcase name="PublicParameterizedConstructorWithPropertyNameConflictWithAttribute" assertions="0" time="0.001919" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ConstructorHandlingTests">
                  
                </testcase><testcase name="SuccessWithPrivateConstructorAndAllowNonPublic" assertions="0" time="0.001960" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ConstructorHandlingTests">
                  
                </testcase><testcase name="SuccessWithPrivateConstructorPlusParameterizedAndAllowNonPublic" assertions="0" time="0.001123" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ConstructorHandlingTests">
                  
                </testcase><testcase name="SuccessWithPublicParameterizedConstructor" assertions="0" time="0.001745" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ConstructorHandlingTests">
                  
                </testcase><testcase name="SuccessWithPublicParameterizedConstructorWhenParameterIsNotAProperty" assertions="0" time="0.001563" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ConstructorHandlingTests">
                  
                </testcase><testcase name="SuccessWithPublicParameterizedConstructorWhenParameterNameConflictsWithPropertyName" assertions="0" time="0.001879" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ConstructorHandlingTests">
                  
                </testcase><testcase name="SuccessWithPublicParameterizedConstructorWhenParameterRequiresAConverter" assertions="0" time="0.002750" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ConstructorHandlingTests">
                  
                </testcase><testcase name="SuccessWithPublicParameterizedConstructorWhenParameterRequiresAConverterWithParameterAttribute" assertions="0" time="0.001899" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ConstructorHandlingTests">
                  
                </testcase><testcase name="SuccessWithPublicParameterizedConstructorWhenParameterRequiresAConverterWithPropertyAttribute" assertions="0" time="0.001611" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ConstructorHandlingTests">
                  
                </testcase><testcase name="UsePrivateConstructorIfThereAreMultipleConstructorsWithParametersAndNothingToFallbackTo" assertions="0" time="0.000578" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ConstructorHandlingTests">
                  
                </testcase></testsuite>
              <testsuite tests="31" time="0.202415" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:29Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.ContractResolverTests."><testcase name="AbstractDictionaryTestClass" assertions="0" time="0.007661" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="AbstractListTestClass" assertions="0" time="0.004454" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="AbstractTestClass" assertions="0" time="0.004407" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="CalculatingPropertyNameEscapedSkipping" assertions="0" time="0.001063" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="CustomOverrideCreator" assertions="0" time="0.005868" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="DefaultContractResolverIgnoreIsSpecifiedTrue" assertions="0" time="0.003720" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="DefaultContractResolverIgnoreIsSpecifiedUnset" assertions="0" time="0.003606" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="DefaultContractResolverIgnoreShouldSerializeTrue" assertions="0" time="0.001658" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="DefaultContractResolverIgnoreShouldSerializeUnset" assertions="0" time="0.001636" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="DeserializeDataMemberClassWithNoDataContract" assertions="0" time="0.001334" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="DictionaryInterfaceDefaultCreator" assertions="0" time="0.005017" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="ExtensionDataGetterCanBeIteratedMultipleTimes" assertions="0" time="0.004302" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="InternalConverter_Object_NotSet" assertions="0" time="0.000848" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="InternalConverter_Regex_Set" assertions="0" time="0.001716" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="JsonPropertyAttribute_Required" assertions="0" time="0.002631" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="JsonPropertyDefaultValue" assertions="0" time="0.001011" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="JsonRequiredAttribute" assertions="0" time="0.001683" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="ListInterface" assertions="0" time="0.000968" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="ListInterfaceDefaultCreator" assertions="0" time="0.002410" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="OverrideCreator" assertions="0" time="0.002177" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="ParameterizedCreator" assertions="0" time="0.001429" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="PropertyAttributeProvider" assertions="0" time="0.003750" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="ResolveObjectContractWithFieldsSerialization" assertions="0" time="0.003146" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="ResolveProperties_IgnoreStatic" assertions="0" time="0.014348" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="ResolveSerializableContract" assertions="0" time="0.001100" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="ResolveSerializableWithoutAttributeContract" assertions="0" time="0.001383" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="SerializeCompilerGeneratedMembers" assertions="0" time="0.013041" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="SerializeInterface" assertions="0" time="0.011893" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="SerializeWithEscapedPropertyName" assertions="0" time="0.005304" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="SerializeWithHtmlEscapedPropertyName" assertions="0" time="0.004403" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase><testcase name="SingleTypeWithMultipleContractResolvers" assertions="0" time="0.013605" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ContractResolverTests">
                  
                </testcase></testsuite>
              <testsuite tests="2" time="0.013118" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:30Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.DateTimeZoneHandlingTests."><testcase name="DeserializeFromJObject" assertions="0" time="0.002971" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DateTimeZoneHandlingTests">
                  
                </testcase><testcase name="DeserializeObject" assertions="0" time="0.001329" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DateTimeZoneHandlingTests">
                  
                </testcase></testsuite>
              <testsuite tests="17" time="0.092710" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:30Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests."><testcase name="ApproxEquals" assertions="0" time="0.001001" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests">
                  
                </testcase><testcase name="DefaultValueHandlingPropertyTest" assertions="0" time="0.002860" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests">
                  
                </testcase><testcase name="DefaultValueWithConstructorAndRenameTest" assertions="0" time="0.001976" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests">
                  
                </testcase><testcase name="DefaultValueWithConstructorTest" assertions="0" time="0.002168" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests">
                  
                </testcase><testcase name="DeserializeDefaultValueAttributeTest" assertions="0" time="0.001176" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests">
                  
                </testcase><testcase name="DeserializeIgnoreAndPopulate" assertions="0" time="0.002302" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests">
                  
                </testcase><testcase name="DeserializeWithIgnore" assertions="0" time="0.002696" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests">
                  
                </testcase><testcase name="DeserializeWithPopulate" assertions="0" time="0.003716" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests">
                  
                </testcase><testcase name="DontSetPropertiesDefaultValueUsedInConstructor" assertions="0" time="0.004932" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests">
                  
                </testcase><testcase name="EmitDefaultValueIgnoreAndPopulate" assertions="0" time="0.002163" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests">
                  
                </testcase><testcase name="EmitDefaultValueTest" assertions="0" time="0.015190" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests">
                  
                </testcase><testcase name="IgnoreNumberTypeDifferencesWithDefaultValue" assertions="0" time="0.004566" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests">
                  
                </testcase><testcase name="Include" assertions="0" time="0.004326" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests">
                  
                </testcase><testcase name="PopulateTest" assertions="0" time="0.001767" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests">
                  
                </testcase><testcase name="PopulateWithJsonIgnoreAttribute" assertions="0" time="0.002153" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests">
                  
                </testcase><testcase name="SerializeDefaultValueAttributeTest" assertions="0" time="0.001078" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests">
                  
                </testcase><testcase name="SerializeInvoice" assertions="0" time="0.001053" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests">
                  
                </testcase></testsuite>
              <testsuite tests="3" time="0.037914" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:30Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests."><testcase name="AnyMethodsExposedByDynamicConcreteAreHarmless" assertions="0" time="0.018117" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests">
                  
                </testcase><testcase name="UseDynamicConcreteIfTargetObjectTypeIsAnAbstractClassWithNoConcrete" assertions="0" time="0.005075" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests">
                  
                </testcase><testcase name="UseDynamicConcreteIfTargetObjectTypeIsAnInterfaceWithNoBackingClass" assertions="0" time="0.003651" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests">
                  
                </testcase></testsuite>
              <testsuite tests="7" time="0.208410" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:30Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.DynamicTests."><testcase name="AllowNonPublicDefaultConstructor" assertions="0" time="0.042320" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DynamicTests">
                  
                </testcase><testcase name="NoPublicDefaultConstructor" assertions="0" time="0.002026" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DynamicTests">
                  
                </testcase><testcase name="SerializeDynamicObject" assertions="0" time="0.053336" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DynamicTests">
                  
                </testcase><testcase name="SerializeDynamicObjectWithDefaultValueHandlingIgnore" assertions="0" time="0.021589" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DynamicTests">
                  
                </testcase><testcase name="SerializeDynamicObjectWithNullValueHandlingIgnore" assertions="0" time="0.015539" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DynamicTests">
                  
                </testcase><testcase name="SerializeDynamicObjectWithNullValueHandlingInclude" assertions="0" time="0.015785" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DynamicTests">
                  
                </testcase><testcase name="SerializeDynamicObjectWithObjectTracking" assertions="0" time="0.039793" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.DynamicTests">
                  
                </testcase></testsuite>
              <testsuite tests="35" time="0.292161" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:30Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.ExtensionDataTests."><testcase name="DataBagDoesNotInheritFromDictionaryClass" assertions="0" time="0.003763" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="Deserialize_WriteJsonDirectlyToJToken" assertions="0" time="0.005065" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="DeserializeDirectoryAccount" assertions="0" time="0.005203" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="DeserializeExtensionData_NoSetterAndNoExtensionData" assertions="0" time="0.005408" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="DeserializeExtensionData_NoSetterAndWithExtensionData" assertions="0" time="0.001772" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="DeserializeNoReadPublicExtensionData" assertions="0" time="0.006020" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="DeserializeNullableProperty" assertions="0" time="0.005741" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="DeserializePublicExtensionData" assertions="0" time="0.007002" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="DeserializePublicExtensionDataTypeNamdHandling" assertions="0" time="0.004844" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor" assertions="0" time="0.006986" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="DeserializePublicJTokenExtensionDataCircularReference" assertions="0" time="0.004146" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="DeserializeWithConstructor_WriteJsonDirectlyToJToken" assertions="0" time="0.007139" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="ExtensionDataAttributesInheritanceTest" assertions="0" time="0.004104" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="ExtensionDataDeserializeWithNonDefaultConstructorTest" assertions="0" time="0.005190" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="ExtensionDataExample" assertions="0" time="0.004249" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="ExtensionDataFloatParseHandling" assertions="0" time="0.002661" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="ExtensionDataTest" assertions="0" time="0.007236" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="ExtensionDataTest_DeserializeWithNamingStrategy" assertions="0" time="0.013265" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="ExtensionDataTest_SerializeWithNamingStrategy_Disabled" assertions="0" time="0.019507" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="ExtensionDataTest_SerializeWithNamingStrategy_Enabled" assertions="0" time="0.018535" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="ExtensionDataTest_SerializeWithNamingStrategyAttribute" assertions="0" time="0.005583" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="ExtensionDataWithNull" assertions="0" time="0.001290" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="FieldExtensionDataAttributeTest_Deserialize" assertions="0" time="0.004601" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="FieldExtensionDataAttributeTest_Serialize" assertions="0" time="0.001606" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="MultipleExtensionDataAttributesTest" assertions="0" time="0.004461" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="PopulateWithExtensionData" assertions="0" time="0.005913" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="RoundTripJObjectExtensionData" assertions="0" time="0.005236" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="SerializeExtensionData_NoGetter" assertions="0" time="0.003192" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="SerializeExtensionData_NoSetter" assertions="0" time="0.001468" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="SerializeExtensionData_NoSetterAndNoValue" assertions="0" time="0.000999" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="SerializePublicExtensionData" assertions="0" time="0.001047" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="SerializePublicExtensionDataCircularReference" assertions="0" time="0.001266" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="SerializePublicExtensionDataNull" assertions="0" time="0.000999" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="SerializePublicExtensionDataTypeNamdHandling" assertions="0" time="0.002171" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase><testcase name="SerializePublicNoWriteExtensionData" assertions="0" time="0.004629" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.012847" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:30Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.JsonPropertyCollectionTests."><testcase name="AddPropertyIncludesPrivateImplementations" assertions="0" time="0.005189" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonPropertyCollectionTests">
                  
                </testcase></testsuite>
              <testsuite tests="86" time="0.694993" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:30Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests."><testcase name="CollectionJsonConstructorBadIEnumerableParameter" assertions="0" time="0.006307" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="CollectionJsonConstructorMultipleParameters" assertions="0" time="0.003135" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="CollectionJsonConstructorNonGeneric" assertions="0" time="0.006026" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="CollectionJsonConstructorPrivate" assertions="0" time="0.004541" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="CollectionJsonConstructorPrivateParameterized" assertions="0" time="0.002751" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="ComplexValuesInObjectArray" assertions="0" time="0.005116" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="CustomCollectionSerialization" assertions="0" time="0.004112" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeArray2D" assertions="0" time="0.004866" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeArray2D_WithTooFewItems" assertions="0" time="0.001322" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeArray2D_WithTooManyItems" assertions="0" time="0.001385" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeArray3D" assertions="0" time="0.007252" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeArray3D_WithBadItems" assertions="0" time="0.001347" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeArray3D_WithTooFewItems" assertions="0" time="0.001190" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeArray3D_WithTooManyItems" assertions="0" time="0.001237" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeArray3DWithConverter" assertions="0" time="0.004431" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeCollectionWithConstructorArrayArgument" assertions="0" time="0.004145" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeComplexKeyValuePair" assertions="0" time="0.012256" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeConcurrentDictionary" assertions="0" time="0.009427" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeConcurrentDictionaryWithNullValue" assertions="0" time="0.000882" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeConstructorWithReadonlyArrayProperty" assertions="0" time="0.007282" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeCultureInfoKey" assertions="0" time="0.030229" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeEmpty3DArray" assertions="0" time="0.003299" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeExistingGenericList" assertions="0" time="0.002453" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeGenericList" assertions="0" time="0.001021" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeIDictionary" assertions="0" time="0.000876" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeIEnumerableFromConstructor" assertions="0" time="0.008431" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeIEnumerableFromConstructor_Failure" assertions="0" time="0.002497" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeIList" assertions="0" time="0.001383" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeIncomplete3DArray" assertions="0" time="0.001858" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeIncompleteNotTopLevel3DArray" assertions="0" time="0.002090" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeKeyValuePairArray" assertions="0" time="0.008245" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeNameValueCollection" assertions="0" time="0.004522" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeNonGenericList" assertions="0" time="0.000898" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeNonIsoDateDictionaryKey" assertions="0" time="0.006381" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeNull3DArray" assertions="0" time="0.000797" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeNullableKeyValuePairArray" assertions="0" time="0.008528" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeNullToNonNullableKeyValuePairArray" assertions="0" time="0.001199" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializePrivateListConstructor" assertions="0" time="0.003589" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializePrivateListCtor" assertions="0" time="0.003997" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeReadOnlyCollection" assertions="0" time="0.004761" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeReadOnlyCollectionInterface" assertions="0" time="0.002607" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeReadOnlyDictionary" assertions="0" time="0.005166" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeReadOnlyDictionaryInterface" assertions="0" time="0.002348" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeReadOnlyListInterface" assertions="0" time="0.002591" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeSemiEmpty3DArray" assertions="0" time="0.001055" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DeserializeSimpleKeyValuePair" assertions="0" time="0.001065" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DictionaryJsonConstructorBadIEnumerableParameter" assertions="0" time="0.004996" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DictionaryJsonConstructorMultipleParameters" assertions="0" time="0.003150" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DictionaryJsonConstructorNonGeneric" assertions="0" time="0.004018" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DictionaryJsonConstructorPrivate" assertions="0" time="0.004855" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DictionaryJsonConstructorPrivateParameterized" assertions="0" time="0.006855" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DoubleKey_MaxValue" assertions="0" time="0.013074" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="DoubleKey_WholeValue" assertions="0" time="0.001014" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="EmptyStringInHashtableIsDeserialized" assertions="0" time="0.003699" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="FloatKey_MaxValue" assertions="0" time="0.011126" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="GenericCollectionInheritance" assertions="0" time="0.018009" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="GenericIListAndOverrideConstructor" assertions="0" time="0.004119" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="InheritedListSerialize" assertions="0" time="0.006312" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="MultiDObjectArray" assertions="0" time="0.007144" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="NonDefaultConstructor_DuplicateKeyInDictionary_Replace" assertions="0" time="0.008573" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="NonZeroBasedArray" assertions="0" time="0.004225" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="NonZeroBasedMultiArray" assertions="0" time="0.001089" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="NullableValueGenericDictionary" assertions="0" time="0.007531" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="PopulateReadOnlyCollections" assertions="0" time="0.009051" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="PrimitiveValuesInObjectArray" assertions="0" time="0.000935" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="ReadOnlyCollectionSerialize" assertions="0" time="0.000777" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="SerializeArray2D" assertions="0" time="0.000827" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="SerializeArray3D" assertions="0" time="0.001400" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="SerializeArray3DWithConverter" assertions="0" time="0.001883" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="SerializeArrayAsArrayList" assertions="0" time="0.002212" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="SerializeConcurrentBag" assertions="0" time="0.011153" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="SerializeConcurrentDictionary" assertions="0" time="0.007088" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="SerializeConcurrentQueue" assertions="0" time="0.006765" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="SerializeConcurrentStack" assertions="0" time="0.003913" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="SerializeCustomConcurrentDictionary" assertions="0" time="0.008648" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="SerializeCustomReadOnlyCollection" assertions="0" time="0.002067" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="SerializeCustomReadOnlyDictionary" assertions="0" time="0.003319" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="SerializeEmpty3DArray" assertions="0" time="0.000595" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="SerializeGenericList" assertions="0" time="0.000986" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="SerializeMemberGenericList" assertions="0" time="0.008121" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="SerializeReadOnlyCollections" assertions="0" time="0.001393" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="SerializeReferenceTracked3DArray" assertions="0" time="0.007040" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="SerializeTypeName3DArray" assertions="0" time="0.004916" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="StringAppenderConverterTest" assertions="0" time="0.001234" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="StringListAppenderConverterTest" assertions="0" time="0.001420" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase><testcase name="TestEscapeDictionaryStrings" assertions="0" time="0.005476" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.015072" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:31Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+MultipleDefinedPropertySerialization."><testcase name="SerializePropertyDefinedInMultipleInterfaces" assertions="0" time="0.007211" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+MultipleDefinedPropertySerialization">
                  
                </testcase></testsuite>
              <testsuite tests="381" time="5.324934" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:31Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.JsonSerializerTest."><testcase name="AdditionalContentAfterComments" assertions="0" time="0.003191" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="AdditionalContentAfterCommentsCheckNotRequested" assertions="0" time="0.000963" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="AdditionalContentAfterFinish" assertions="0" time="0.001071" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="AdditionalContentAfterFinishCheckNotRequested" assertions="0" time="0.000787" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="AnonymousObjectSerialization" assertions="0" time="0.009715" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="AnonymousObjectSerializationWithSetting" assertions="0" time="0.004756" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="AnonymousPlusLinqToSql" assertions="0" time="0.003961" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="BackslashEqivilence" assertions="0" time="0.059122" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="BadJsonPropertyClassSerialize" assertions="0" time="0.002739" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="BaseClassDeserializesAsExpected" assertions="0" time="0.002170" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="BaseClassSerializesAsExpected" assertions="0" time="0.000962" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson" assertions="0" time="0.001768" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CanDeserializeIntArrayWhenNotFirstPropertyInJson" assertions="0" time="0.000927" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CanDeserializeSerializedJson" assertions="0" time="0.001615" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CannotDeserializeArrayIntoDictionary" assertions="0" time="0.001338" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CannotDeserializeArrayIntoDouble" assertions="0" time="0.001351" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CannotDeserializeArrayIntoDynamic" assertions="0" time="0.001246" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CannotDeserializeArrayIntoLinqToJson" assertions="0" time="0.000999" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CannotDeserializeArrayIntoObject" assertions="0" time="0.001192" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CannotDeserializeArrayIntoSerializable" assertions="0" time="0.001452" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CannotDeserializeConstructorIntoObject" assertions="0" time="0.004626" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CannotDeserializeConstructorIntoObjectNested" assertions="0" time="0.004685" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CannotDeserializeObjectIntoArray" assertions="0" time="0.001172" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CannotPopulateArrayIntoObject" assertions="0" time="0.000969" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CannotPopulateObjectIntoArray" assertions="0" time="0.001426" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CanSerializedWithGenericClosedTypeAsArgument" assertions="0" time="0.006494" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CanSerializeWithBuiltInTypeAsGenericArgument" assertions="0" time="0.005259" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CanSerializeWithBuiltInTypeAsGenericArgumentOverride" assertions="0" time="0.006215" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CanSerializeWithBuiltInTypeAsGenericArgumentVirtual" assertions="0" time="0.004253" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CaseInsensitiveRequiredPropertyConstructorCreation" assertions="0" time="0.003116" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CheckAdditionalContent" assertions="0" time="0.001712" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CheckAdditionalContentCommentsThenAnotherObject" assertions="0" time="0.000973" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CheckAdditionalContentJustComment" assertions="0" time="0.000796" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CheckAdditionalContentJustMultipleComments" assertions="0" time="0.000951" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ChildClassWithProtectedOverridePlusJsonProperty_Serialize" assertions="0" time="0.002723" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ChildDataContractTest" assertions="0" time="0.004586" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ChildDataContractTestWithDataContractSerializer" assertions="0" time="0.010321" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ChildDataContractTestWithHidden" assertions="0" time="0.004873" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ChildObjectTest" assertions="0" time="0.003198" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ChildWithDifferentOverrideObjectTest" assertions="0" time="0.002957" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CircularConstructorDeserialize" assertions="0" time="0.006199" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ClassAttributesInheritance" assertions="0" time="0.006674" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CoercedEmptyStringWithRequired" assertions="0" time="0.003038" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CoercedEmptyStringWithRequired_DisallowNull" assertions="0" time="0.002580" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CoercedEmptyStringWithRequiredConstructor" assertions="0" time="0.001021" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="CommentTestClassTest" assertions="0" time="0.006047" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ConstructorCaseSensitivity" assertions="0" time="0.004288" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ConstructorReadonlyFieldsTest" assertions="0" time="0.003119" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ConversionOperator" assertions="0" time="0.037483" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ConverterAttributeExample" assertions="0" time="0.003610" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ConvertibleIdTest" assertions="0" time="0.003774" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DataContractJsonSerializerTest" assertions="0" time="0.032945" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DateFormatString" assertions="0" time="0.001532" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DateFormatStringForInternetExplorer" assertions="0" time="0.001022" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DateFormatStringWithDateTime" assertions="0" time="0.002471" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DateFormatStringWithDateTimeAndCulture" assertions="0" time="0.001965" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DateFormatStringWithDateTimeOffset" assertions="0" time="0.002279" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DateFormatStringWithDictionaryKey_DateTime" assertions="0" time="0.003592" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DateFormatStringWithDictionaryKey_DateTime_ReadAhead" assertions="0" time="0.001232" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DateFormatStringWithDictionaryKey_DateTimeOffset" assertions="0" time="0.010783" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead" assertions="0" time="0.001440" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DateTimeDictionaryKey_DateTime_Iso" assertions="0" time="0.003586" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DateTimeDictionaryKey_DateTime_Iso_Local" assertions="0" time="0.001721" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DateTimeDictionaryKey_DateTime_MS" assertions="0" time="0.001404" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DateTimeDictionaryKey_DateTimeOffset_Iso" assertions="0" time="0.009753" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DateTimeDictionaryKey_DateTimeOffset_MS" assertions="0" time="0.011475" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DateTimeOffsetIso" assertions="0" time="0.001088" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DateTimeOffsetMsAjax" assertions="0" time="0.000941" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DateTimeTest" assertions="0" time="0.009883" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DateTimeTimeZone" assertions="0" time="0.000797" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DefaultDateStringFormatVsUnsetDateStringFormat" assertions="0" time="0.001204" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DerivedClassHidingBasePropertyDeserializesAsExpected" assertions="0" time="0.003487" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DerivedClassHidingBasePropertySerializesAsExpected" assertions="0" time="0.000929" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DerivedGenericClassHidingBasePropertyDeserializesAsExpected" assertions="0" time="0.003232" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DerivedGenericClassHidingBasePropertySerializesAsExpected" assertions="0" time="0.000667" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeAlmostImmutableStruct" assertions="0" time="0.002328" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeBaseReferenceWithDerivedValue" assertions="0" time="0.002308" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeBestMatchPropertyCase" assertions="0" time="0.003113" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeBoolAsStringInDictionary" assertions="0" time="0.000702" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeBoolean_BadString" assertions="0" time="0.002609" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeBoolean_DateTime" assertions="0" time="0.000816" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeBoolean_EmptyString" assertions="0" time="0.000805" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeBoolean_Null" assertions="0" time="0.000873" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeBooleans" assertions="0" time="0.002808" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeBoolInt" assertions="0" time="0.001032" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeByteArray" assertions="0" time="0.005035" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeByteArrayFromEmptyString" assertions="0" time="0.000643" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeByteArrayWithTypeNameHandling" assertions="0" time="0.001153" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeCaseInsensitiveKeyValuePairConverter" assertions="0" time="0.003964" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeClassWithInheritedProtectedMember" assertions="0" time="0.014200" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeCollectionItemConverter" assertions="0" time="0.002493" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeCommentTestObjectWithComments" assertions="0" time="0.001944" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeConstantProperty" assertions="0" time="0.001734" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeCustomReferenceResolver" assertions="0" time="0.008405" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeCustomReferenceResolver_ViaProvider" assertions="0" time="0.001346" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeDateTimeOffsetAndDateTime" assertions="0" time="0.003574" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializedDerivedWithPrivate" assertions="0" time="0.003065" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeDecimal" assertions="0" time="0.001299" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeDecimalArrayExact" assertions="0" time="0.000775" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeDecimalDictionaryExact" assertions="0" time="0.004305" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeDecimalExact" assertions="0" time="0.000966" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeDecimalPropertyExact" assertions="0" time="0.001015" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeDecimalsWithCulture" assertions="0" time="0.003703" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeDictionaryInterface" assertions="0" time="0.003991" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeDictionaryInterfaceWithExistingValues" assertions="0" time="0.004300" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeDictionaryItemConverter" assertions="0" time="0.001049" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeDictionaryWithNoDefaultConstructor" assertions="0" time="0.003622" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences" assertions="0" time="0.001185" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeDoubleFromEmptyString" assertions="0" time="0.000666" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeDoubleFromNullString" assertions="0" time="0.000759" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeEmptyJsonString" assertions="0" time="0.000763" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeEmptyString" assertions="0" time="0.000595" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeEmptyStrings" assertions="0" time="0.002800" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeEmptyStringToNullableDateTime" assertions="0" time="0.000817" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeEnsureTypeEmptyStringToIntError" assertions="0" time="0.008653" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeEnsureTypeNullToIntError" assertions="0" time="0.008672" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeEnumerable" assertions="0" time="0.002361" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeEnumerableAsObject" assertions="0" time="0.006266" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeEnumFromEmptyString" assertions="0" time="0.001064" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeEnumsByName" assertions="0" time="0.002611" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeException" assertions="0" time="0.006474" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeFloatAsDecimal" assertions="0" time="0.002349" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeFromNullString" assertions="0" time="0.001007" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeGenericDictionary" assertions="0" time="0.000801" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeGenericEnumerableProperty" assertions="0" time="0.006637" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeGenericIEnumerableWithImplicitConversion" assertions="0" time="0.005687" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeGoogleGeoCode" assertions="0" time="0.001130" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeGuid" assertions="0" time="0.008952" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeIConvertible" assertions="0" time="0.005030" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeIgnoredPropertyInConstructor" assertions="0" time="0.003002" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeImmutableStruct" assertions="0" time="0.002891" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeInt32FromEmptyString" assertions="0" time="0.001309" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeInt64ToNullableDouble" assertions="0" time="0.005298" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeInterfaceProperty" assertions="0" time="0.004286" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeInvalidOctalRootError" assertions="0" time="0.000752" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeISerializableIConvertible" assertions="0" time="0.003189" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeISerializableInPartialTrust" assertions="0" time="0.001387" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeIsoDatesWithIsoConverter" assertions="0" time="0.001023" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeJaggedArray" assertions="0" time="0.007127" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeJavaScriptDate" assertions="0" time="0.009547" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeJObjectWithComments" assertions="0" time="0.001590" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeJsonPropertyWithHandlingValues" assertions="0" time="0.000977" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeJsonRaw" assertions="0" time="0.000970" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeJToken" assertions="0" time="0.002931" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeLargeFloat" assertions="0" time="0.000567" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeMinValueDecimal" assertions="0" time="0.002966" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeMSDateTimeOffset" assertions="0" time="0.000747" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeNullable" assertions="0" time="0.000460" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeNullableArray" assertions="0" time="0.005573" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeNullableBooleans" assertions="0" time="0.005081" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeNullableDecimalExact" assertions="0" time="0.000710" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeNullableEnum" assertions="0" time="0.004168" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeNullableGuid" assertions="0" time="0.001835" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeNullableListWithNulls" assertions="0" time="0.007145" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeNullableMember" assertions="0" time="0.002874" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeNullableStruct" assertions="0" time="0.005898" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeNullableUnsignedLong" assertions="0" time="0.002984" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeNullableWidgetStruct" assertions="0" time="0.003804" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeNullDateTimeValueTest" assertions="0" time="0.000684" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeNullInt" assertions="0" time="0.000921" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeNullNullableDateTimeValueTest" assertions="0" time="0.000428" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeNullToJTokenProperty" assertions="0" time="0.004143" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeObjectDictionary" assertions="0" time="0.000641" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeObjectSetOnlyProperty" assertions="0" time="0.001896" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeObservableCollection" assertions="0" time="0.006743" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeOptInClasses" assertions="0" time="0.006096" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializePersonKeyedDictionary" assertions="0" time="0.003825" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializePopulateDictionaryAndList" assertions="0" time="0.005246" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializePropertiesOnToNonDefaultConstructor" assertions="0" time="0.002971" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking" assertions="0" time="0.000694" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializePropertyNullableDateTimeOffsetExactIso" assertions="0" time="0.000696" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializePropertyNullableDateTimeOffsetExactMsAjax" assertions="0" time="0.000619" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializePropertySetError" assertions="0" time="0.007697" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeRelativeUri" assertions="0" time="0.002485" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeRequiredMembersClassNullRequiredValueProperty" assertions="0" time="0.001456" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeRequiredMembersClassWithNullValues" assertions="0" time="0.000882" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeStringEnglish" assertions="0" time="0.003307" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeStringIntoNullableGuid" assertions="0" time="0.001799" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeStructProperty" assertions="0" time="0.004298" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeStructWithConstructorAttribute" assertions="0" time="0.005105" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeToObjectProperty" assertions="0" time="0.001971" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeUnexpectedEndInt" assertions="0" time="0.000805" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeUsingNonDefaultConstructorWithLeftOverValues" assertions="0" time="0.006556" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeUTC" assertions="0" time="0.002015" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeVersionString" assertions="0" time="0.004874" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeVersionString_Fail" assertions="0" time="0.001022" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DeserializeWithConstructor" assertions="0" time="0.001924" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DictionaryKeyContractResolverTest" assertions="0" time="0.010770" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DisallowNull_NoValue" assertions="0" time="0.000779" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DontCloseInputOnDeserializeError" assertions="0" time="0.016462" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DontSerializeStaticFields" assertions="0" time="0.005843" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="DuplicatePropertiesInNestedObject" assertions="0" time="0.000818" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="EmbedJValueStringInNewJObject" assertions="0" time="0.000611" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="EnumTest" assertions="0" time="0.000540" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ErrorCreatingJsonConverter" assertions="0" time="0.001027" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments" assertions="0" time="0.003508" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="FormattingOverride" assertions="0" time="0.002256" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="FullClientMapSerialization" assertions="0" time="0.005335" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="GenericAbstractProperty" assertions="0" time="0.002313" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="GenericListAndDictionaryInterfaceProperties" assertions="0" time="0.006028" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="GoogleSearchAPI" assertions="0" time="0.001282" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="GuidTest" assertions="0" time="0.000817" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="HashSetInterface" assertions="0" time="0.002479" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="HashtableDeserialization" assertions="0" time="0.000810" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="IgnoreDataMemberTest" assertions="0" time="0.002467" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="IgnoreIndexedProperties" assertions="0" time="0.011703" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ImplementInterfaceObjectTest" assertions="0" time="0.003477" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="IncompatibleJsonAttributeShouldThrow" assertions="0" time="0.002670" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="IncompleteContainers" assertions="0" time="0.005132" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="InvalidBackslash" assertions="0" time="0.000994" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="JRawValue" assertions="0" time="0.002312" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="JsonConvertSerializer" assertions="0" time="0.001008" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="JsonIgnoreAttributeOnClassTest" assertions="0" time="0.003303" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="JsonIgnoreAttributeTest" assertions="0" time="0.003104" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="JsonPropertyClassSerialize" assertions="0" time="0.003589" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="JsonPropertyConverter" assertions="0" time="0.005511" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="JsonPropertyDataMemberOrder" assertions="0" time="0.005292" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="JsonPropertyWithHandlingValues_ReferenceLoopError" assertions="0" time="0.000973" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="JsonSerializerDateFormatString" assertions="0" time="0.001287" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="JsonSerializerProperties" assertions="0" time="0.007318" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="JsonSerializerProxyProperties" assertions="0" time="0.007736" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="JsonSerializerSettingsProperties" assertions="0" time="0.006136" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="JsonSerializerStringEscapeHandling" assertions="0" time="0.003728" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="LargeIntegerAsString" assertions="0" time="0.003916" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ListSourceSerialize" assertions="0" time="0.004862" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="MailMessageConverterTest" assertions="0" time="0.020214" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="Main" assertions="0" time="0.003036" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="MultiIndexSuperTest" assertions="0" time="0.002674" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="MultipleItems" assertions="0" time="0.004454" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="MultipleParametrizedConstructorsJsonConstructorTest" assertions="0" time="0.003187" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="NestedInsideOuterObject" assertions="0" time="0.005586" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="NeverResolveIgnoredPropertyTypes" assertions="0" time="0.010330" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="NewProperty" assertions="0" time="0.002753" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="NewPropertyVirtual" assertions="0" time="0.002344" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="NoConstructorReadOnlyCollectionTest" assertions="0" time="0.003031" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="NoErrorWhenValueDoesNotMatchIgnoredProperty" assertions="0" time="0.002155" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="NonDefaultConstructorWithReadOnlyCollectionPropertyTest" assertions="0" time="0.003904" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="NonDefaultConstructorWithReadOnlyDictionaryPropertyTest" assertions="0" time="0.003791" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="NonPublicConstructorWithJsonConstructorTest" assertions="0" time="0.002028" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="NonStringKeyDictionary" assertions="0" time="0.008754" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="NullableDecimalEmptyValue" assertions="0" time="0.006010" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="NullableDeserializeUTC" assertions="0" time="0.001827" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="NullableDoubleEmptyValue" assertions="0" time="0.001449" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="NullableFloatingPoint" assertions="0" time="0.005411" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="NullableIntEmptyValue" assertions="0" time="0.001038" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="NullableLongEmptyValue" assertions="0" time="0.000844" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="NullableStructWithConverter" assertions="0" time="0.005189" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="NullReferenceResolver" assertions="0" time="0.004253" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ObjectCreationHandlingReplace" assertions="0" time="0.000622" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ObjectRequiredDeserializeMissing" assertions="0" time="0.002994" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ObjectRequiredDeserializeNull" assertions="0" time="0.002843" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ObjectRequiredSerialize" assertions="0" time="0.002668" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="OverridenPropertyMembers" assertions="0" time="0.001907" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ParameterizedConstructorWithBasePrivateProperties" assertions="0" time="0.003417" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ParametrizedConstructor_IncompleteJson" assertions="0" time="0.004005" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="PartialClassDeserialize" assertions="0" time="0.005326" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="PersonTypedObjectDeserialization" assertions="0" time="0.001704" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="PopulateDefaultValueWhenUsingConstructor" assertions="0" time="0.003873" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="PopulateResetSettings" assertions="0" time="0.001146" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor" assertions="0" time="0.004212" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="PreserveReferencesCallbackTest" assertions="0" time="0.003177" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="PrivateConstructor" assertions="0" time="0.003826" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="PrivateMembersClassWithAttributesTest" assertions="0" time="0.003151" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="PrivateSetterOnBaseClassProperty" assertions="0" time="0.005044" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="PropertyItemConverter" assertions="0" time="0.001049" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="PublicConstructorOverridenByJsonConstructorTest" assertions="0" time="0.002953" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ReadForTypeHackFixByteArray" assertions="0" time="0.005222" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ReadForTypeHackFixDateTimeOffset" assertions="0" time="0.008068" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ReadForTypeHackFixDecimal" assertions="0" time="0.001118" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ReadIntegerWithError" assertions="0" time="0.002830" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ReadStringFloatingPointSymbols" assertions="0" time="0.006319" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ReadTooLargeInteger" assertions="0" time="0.006062" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ReadWriteTimeZoneOffsetIso" assertions="0" time="0.002658" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="ReadWriteTimeZoneOffsetMsAjax" assertions="0" time="0.001262" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="RequiredMembersClass" assertions="0" time="0.001655" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="RequiredMembersClassMissingRequiredProperty" assertions="0" time="0.000786" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="RequiredPropertyConstructorTest" assertions="0" time="0.003908" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="RequiredPropertyTest" assertions="0" time="0.004379" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="RequiredWhenUsingConstructor" assertions="0" time="0.003774" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="RoleTransferTest" assertions="0" time="0.006002" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="RoundtripOfDateTimeOffset" assertions="0" time="0.001169" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="RoundtripUriOriginalString" assertions="0" time="0.001381" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="Serialize_ItemRequired_DisallowedNull" assertions="0" time="0.002283" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="Serialize_Required_DisallowedNull" assertions="0" time="0.001159" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="Serialize_Required_DisallowedNull_NullValueHandlingIgnore" assertions="0" time="0.001102" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeAndDeserializeWithAttributes" assertions="0" time="0.012982" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeAttributesOnBase" assertions="0" time="0.002822" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeBigInteger" assertions="0" time="0.004848" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeClassWithInheritedProtectedMember" assertions="0" time="0.004577" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeCollectionItemConverter" assertions="0" time="0.000967" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeConverableObjects" assertions="0" time="0.012143" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeCustomReferenceResolver" assertions="0" time="0.002439" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeCustomTupleWithSerializableAttribute" assertions="0" time="0.003518" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeCustomTupleWithSerializableAttributeInPartialTrust" assertions="0" time="0.002469" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeDataContractPrivateMembers" assertions="0" time="0.008017" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeDataContractSerializationAttributes" assertions="0" time="0.006988" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeDeserializeDictionaryKey" assertions="0" time="0.006548" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeDeserializeGetOnlyProperty" assertions="0" time="0.002333" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeDeserializeRegex" assertions="0" time="0.001149" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeDeserializeSetOnlyProperty" assertions="0" time="0.001901" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeDeserializeTuple" assertions="0" time="0.008095" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeDeserializeXmlNodeProperties" assertions="0" time="0.002898" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeDeserializeXNodeProperties" assertions="0" time="0.005223" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeDictionaryStringStringAndStringObject" assertions="0" time="0.000843" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeDictionaryWithStructKey_Custom" assertions="0" time="0.014215" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeEnumerableAsObject" assertions="0" time="0.001416" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeException1" assertions="0" time="0.008252" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeExpandoObject" assertions="0" time="0.041460" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeFloatingPointHandling" assertions="0" time="0.001169" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeFragment" assertions="0" time="0.004526" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeGenericListOfStrings" assertions="0" time="0.000948" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeGuidKeyedDictionary" assertions="0" time="0.006204" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeHashSet" assertions="0" time="0.001209" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeIConvertible" assertions="0" time="0.002243" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeInheritanceHierarchyWithDuplicateProperty" assertions="0" time="0.002581" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeInterfaceWithHiddenProperties" assertions="0" time="0.011036" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeISerializableInPartialTrust" assertions="0" time="0.001613" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeISerializableInPartialTrustWithIgnoreInterface" assertions="0" time="0.039583" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeISerializableTestObject_IsoDate" assertions="0" time="0.008912" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeISerializableTestObject_MsAjax" assertions="0" time="0.002147" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeJaggedArray" assertions="0" time="0.000704" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeJsonPropertyWithHandlingValues" assertions="0" time="0.001186" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeJsonRaw" assertions="0" time="0.000955" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeKeyValuePairConverterWithCamelCase" assertions="0" time="0.002412" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeListWithJsonConverter" assertions="0" time="0.007459" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeNonIDictionary" assertions="0" time="0.001900" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeNonPublicBaseJsonProperties" assertions="0" time="0.003488" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeNull" assertions="0" time="0.000754" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeNullableArray" assertions="0" time="0.001010" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeNullableGuidCustomWriterOverridesNullableGuid" assertions="0" time="0.002300" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeNullableWidgetStruct" assertions="0" time="0.000887" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeObject" assertions="0" time="0.000591" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeObjectWithEvent" assertions="0" time="0.003613" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeObservableCollection" assertions="0" time="0.000976" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializePersonKeyedDictionary" assertions="0" time="0.003427" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializePropertyGetError" assertions="0" time="0.012309" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeRefAdditionalContent" assertions="0" time="0.001526" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeRefBadType" assertions="0" time="0.000939" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeRefNull" assertions="0" time="0.001167" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeRequiredMembersClassNullRequiredValueProperty" assertions="0" time="0.000804" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializerShouldUseClassConverter" assertions="0" time="0.002813" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializerShouldUseClassConverterOverArgumentConverter" assertions="0" time="0.000810" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializerShouldUseMemberConverter_IsoDate" assertions="0" time="0.001514" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializerShouldUseMemberConverter_IsoDate_DateParseNone" assertions="0" time="0.001042" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializerShouldUseMemberConverter_MsDate" assertions="0" time="0.001126" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializerShouldUseMemberConverter_MsDate_DateParseNone" assertions="0" time="0.000878" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializerShouldUseMemberConverterOverArgumentConverter" assertions="0" time="0.001277" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializerShouldUseMemberConverterOverClassAndArgumentConverter" assertions="0" time="0.003500" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeStack" assertions="0" time="0.003055" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeStaticDefault" assertions="0" time="0.003907" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeStaticReflection" assertions="0" time="0.004536" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeStruct" assertions="0" time="0.004328" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeStructWithJsonObjectAttribute" assertions="0" time="0.004607" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeStructWithSerializableAndDataContract" assertions="0" time="0.008759" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeTupleWithSerializableAttribute" assertions="0" time="0.003628" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeTypeProperty" assertions="0" time="0.002688" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeUriWithQuotes" assertions="0" time="0.000694" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeUriWithSlashes" assertions="0" time="0.000997" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SerializeValueTuple" assertions="0" time="0.006520" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SkipPopulatingArrayPropertyClass" assertions="0" time="0.002144" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="StringDictionaryTest" assertions="0" time="0.005317" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="StringEmptyValue" assertions="0" time="0.001000" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SubWithContractNewPropertiesTest" assertions="0" time="0.010435" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SubWithContractVirtualPropertiesTest" assertions="0" time="0.005402" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SubWithoutContractNewPropertiesTest" assertions="0" time="0.006642" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="SubWithoutContractVirtualPropertiesTest" assertions="0" time="0.004253" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="TestMethodExecutorObject" assertions="0" time="0.003883" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="TestStringToNullableDeserialization" assertions="0" time="0.004579" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="TimeSpanTest" assertions="0" time="0.002539" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="TokenFromBson" assertions="0" time="0.001254" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="TorrentDeserializeTest" assertions="0" time="0.001476" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="TypeConverterOnInterface" assertions="0" time="0.022056" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="TypedHashtableDeserialization" assertions="0" time="0.002258" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="TypedObjectDeserialization" assertions="0" time="0.001443" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="TypedObjectDeserializationWithComments" assertions="0" time="0.001337" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="Unicode" assertions="0" time="0.002028" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="UriGuidTimeSpanTestClassEmptyTest" assertions="0" time="0.001548" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="UriGuidTimeSpanTestClassValuesTest" assertions="0" time="0.001482" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="UriSerialization" assertions="0" time="0.000597" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="UsingJsonTextWriter" assertions="0" time="0.003288" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase><testcase name="WriteJsonDates" assertions="0" time="0.002479" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest">
                  
                </testcase></testsuite>
              <testsuite tests="19" time="0.083726" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:37Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests."><testcase name="Demo" assertions="0" time="0.002348" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests">
                  
                </testcase><testcase name="DeserializeArraysWithPreserveObjectReferences" assertions="0" time="0.003549" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests">
                  
                </testcase><testcase name="DeserializeCircularReferencesWithConverter" assertions="0" time="0.003274" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests">
                  
                </testcase><testcase name="DeserializeEmployeeReference" assertions="0" time="0.003785" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests">
                  
                </testcase><testcase name="DeserializeFromJToken" assertions="0" time="0.000951" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests">
                  
                </testcase><testcase name="DeserializeGenericObjectListWithTypeName" assertions="0" time="0.001547" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests">
                  
                </testcase><testcase name="DeserializeGuid" assertions="0" time="0.001456" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests">
                  
                </testcase><testcase name="DeserializeListsWithPreserveObjectReferences" assertions="0" time="0.003793" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests">
                  
                </testcase><testcase name="DeserializeTypeNameOnly" assertions="0" time="0.000905" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests">
                  
                </testcase><testcase name="MetadataPropertyHandlingIgnore" assertions="0" time="0.002143" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests">
                  
                </testcase><testcase name="MetadataPropertyHandlingIgnore_EmptyObject" assertions="0" time="0.000468" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests">
                  
                </testcase><testcase name="PrimitiveType_MetadataPropertyIgnore" assertions="0" time="0.000963" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests">
                  
                </testcase><testcase name="PrimitiveType_MetadataPropertyIgnore_WithNoType" assertions="0" time="0.001890" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests">
                  
                </testcase><testcase name="ReadAhead_JArray_NoParent" assertions="0" time="0.000504" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests">
                  
                </testcase><testcase name="ReadAhead_JObject_NoParent" assertions="0" time="0.000594" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests">
                  
                </testcase><testcase name="ReadAhead_TypedJValue_NoParent" assertions="0" time="0.003114" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests">
                  
                </testcase><testcase name="SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid" assertions="0" time="0.006881" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests">
                  
                </testcase><testcase name="SerializeRefNull" assertions="0" time="0.001349" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests">
                  
                </testcase><testcase name="WriteListTypeNameForProperty" assertions="0" time="0.003652" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests">
                  
                </testcase></testsuite>
              <testsuite tests="8" time="0.027652" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:37Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.MissingMemberHandlingTests."><testcase name="CaseInsensitive" assertions="0" time="0.000876" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MissingMemberHandlingTests">
                  
                </testcase><testcase name="MissingJson" assertions="0" time="0.000543" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MissingMemberHandlingTests">
                  
                </testcase><testcase name="MissingMemberDeserialize" assertions="0" time="0.002460" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MissingMemberHandlingTests">
                  
                </testcase><testcase name="MissingMemberDeserializeOkay" assertions="0" time="0.001288" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MissingMemberHandlingTests">
                  
                </testcase><testcase name="MissingMemberHandling_InnerObject" assertions="0" time="0.002912" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MissingMemberHandlingTests">
                  
                </testcase><testcase name="MissingMemberHandling_RootObject" assertions="0" time="0.000830" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MissingMemberHandlingTests">
                  
                </testcase><testcase name="MissingMemberIgnoreComplexValue" assertions="0" time="0.000668" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MissingMemberHandlingTests">
                  
                </testcase><testcase name="MissingMemeber" assertions="0" time="0.000797" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.MissingMemberHandlingTests">
                  
                </testcase></testsuite>
              <testsuite tests="7" time="0.020862" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:37Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.NamingStrategyEquality."><testcase name="CamelCaseNamingStrategyEquality" assertions="0" time="0.000608" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.NamingStrategyEquality">
                  
                </testcase><testcase name="CamelCaseNamingStrategyEqualityVariants" assertions="0" time="0.000794" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.NamingStrategyEquality">
                  
                </testcase><testcase name="DefaultNamingStrategyEquality" assertions="0" time="0.000659" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.NamingStrategyEquality">
                  
                </testcase><testcase name="DefaultNamingStrategyEqualityVariants" assertions="0" time="0.000681" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.NamingStrategyEquality">
                  
                </testcase><testcase name="DifferentStrategyEquality" assertions="0" time="0.000633" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.NamingStrategyEquality">
                  
                </testcase><testcase name="SnakeCaseNamingStrategyEqualityVariants" assertions="0" time="0.000756" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.NamingStrategyEquality">
                  
                </testcase><testcase name="SnakeCaseStrategyEquality" assertions="0" time="0.000447" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.NamingStrategyEquality">
                  
                </testcase></testsuite>
              <testsuite tests="6" time="0.026335" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:37Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests."><testcase name="DeserializeEmptyStringIntoDateTimeWithEmptyStringDefaultValue" assertions="0" time="0.000864" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests">
                  
                </testcase><testcase name="DeserializeNullIntoDateTime" assertions="0" time="0.000693" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests">
                  
                </testcase><testcase name="JsonObjectNullValueHandlingIgnore" assertions="0" time="0.003649" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests">
                  
                </testcase><testcase name="JsonObjectNullValueHandlingInclude" assertions="0" time="0.003512" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests">
                  
                </testcase><testcase name="NullValueHandlingBlogPost" assertions="0" time="0.001532" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests">
                  
                </testcase><testcase name="NullValueHandlingSerialization" assertions="0" time="0.001233" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.NullValueHandlingTests">
                  
                </testcase></testsuite>
              <testsuite tests="6" time="0.018528" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:37Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.PopulateTests."><testcase name="PopulateArray" assertions="0" time="0.001360" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PopulateTests">
                  
                </testcase><testcase name="PopulateDictionary" assertions="0" time="0.000761" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PopulateTests">
                  
                </testcase><testcase name="PopulateListOfPeople" assertions="0" time="0.000685" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PopulateTests">
                  
                </testcase><testcase name="PopulatePerson" assertions="0" time="0.000613" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PopulateTests">
                  
                </testcase><testcase name="PopulateStore" assertions="0" time="0.000981" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PopulateTests">
                  
                </testcase><testcase name="PopulateWithBadJson" assertions="0" time="0.000780" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PopulateTests">
                  
                </testcase></testsuite>
              <testsuite tests="35" time="0.162488" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:38Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests."><testcase name="DeserializeArraysWithPreserveObjectReferences" assertions="0" time="0.001058" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="DeserializeCircularReference" assertions="0" time="0.001491" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="DeserializeCircularReferencesWithConverter" assertions="0" time="0.001443" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="DeserializeDictionarysWithPreserveObjectReferences" assertions="0" time="0.000769" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="DeserializeEmployeeReference" assertions="0" time="0.000850" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="DeserializeIsReferenceReadonlyProperty" assertions="0" time="0.003618" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="DeserializeListsWithPreserveObjectReferences" assertions="0" time="0.000802" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="DeserializeReferenceInDictionary" assertions="0" time="0.004439" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="DeserializeReferenceInList" assertions="0" time="0.000934" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="DeserializeTypeWithDubiousGetHashcode" assertions="0" time="0.003314" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="DuplicateId" assertions="0" time="0.004811" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="ExampleWith" assertions="0" time="0.001349" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="ExampleWithout" assertions="0" time="0.000738" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="PreserveReferencesHandlingWithReusedJsonSerializer" assertions="0" time="0.006048" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="PropertyItemIsReferenceObject" assertions="0" time="0.006064" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="ReferencedComponentDictionary" assertions="0" time="0.004236" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="ReferencedComponentList" assertions="0" time="0.003104" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="ReferencedIntDictionary" assertions="0" time="0.002231" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="ReferencedIntList" assertions="0" time="0.002427" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="ReferencedObjectItems" assertions="0" time="0.004497" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="SerializeCircularDictionarysError" assertions="0" time="0.000896" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="SerializeCircularDictionarysIgnore" assertions="0" time="0.000750" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="SerializeCircularListsError" assertions="0" time="0.001162" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="SerializeCircularListsIgnore" assertions="0" time="0.000822" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="SerializeCircularReference" assertions="0" time="0.000866" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="SerializeCircularReferencesWithConverter" assertions="0" time="0.001265" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="SerializeDictionarysWithPreserveObjectReferences" assertions="0" time="0.000812" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="SerializeEmployeeReference" assertions="0" time="0.001070" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="SerializeIsReferenceReadonlyProperty" assertions="0" time="0.001238" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="SerializeListsWithPreserveObjectReferences" assertions="0" time="0.000967" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="SerializeReadOnlyProperty" assertions="0" time="0.005921" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="SerializeReferenceInConvert" assertions="0" time="0.011554" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="SerializeReferenceInDictionary" assertions="0" time="0.000977" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="SerializeReferenceInList" assertions="0" time="0.000939" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase><testcase name="UnexpectedEnd" assertions="0" time="0.000662" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests">
                  
                </testcase></testsuite>
              <testsuite tests="11" time="0.074567" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:38Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests."><testcase name="EqualityComparer" assertions="0" time="0.003599" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests">
                  
                </testcase><testcase name="ErrorDynamicCyclicReferenceLoop" assertions="0" time="0.012504" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests">
                  
                </testcase><testcase name="ErrorISerializableCyclicReferenceLoop" assertions="0" time="0.002819" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests">
                  
                </testcase><testcase name="IgnoreArrayReferenceLoop" assertions="0" time="0.003236" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests">
                  
                </testcase><testcase name="IgnoreDictionaryReferenceLoop" assertions="0" time="0.002832" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests">
                  
                </testcase><testcase name="IgnoreDynamicCyclicReferenceLoop" assertions="0" time="0.013990" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests">
                  
                </testcase><testcase name="IgnoreISerializableCyclicReferenceLoop" assertions="0" time="0.000885" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests">
                  
                </testcase><testcase name="IgnoreObjectReferenceLoop" assertions="0" time="0.001833" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests">
                  
                </testcase><testcase name="IgnoreObjectReferenceLoopWithPropertyOverride" assertions="0" time="0.001883" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests">
                  
                </testcase><testcase name="ReferenceLoopHandlingTest" assertions="0" time="0.000901" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests">
                  
                </testcase><testcase name="SerializePropertyItemReferenceLoopHandling" assertions="0" time="0.006533" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests">
                  
                </testcase></testsuite>
              <testsuite tests="3" time="0.012001" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:38Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests."><testcase name="GetAttributes_Field" assertions="0" time="0.001088" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests">
                  
                </testcase><testcase name="GetAttributes_Parameter" assertions="0" time="0.000906" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests">
                  
                </testcase><testcase name="GetAttributes_Property" assertions="0" time="0.000557" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ReflectionAttributeProviderTests">
                  
                </testcase></testsuite>
              <testsuite tests="33" time="0.227881" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:38Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests."><testcase name="ArrayHandling" assertions="0" time="0.001710" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="ArrayHandling_JTokenReader" assertions="0" time="0.001882" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="ArrayHandlingInObject" assertions="0" time="0.005299" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="DeserializeNestedUnhandled" assertions="0" time="0.005109" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="DeserializeRootConverter" assertions="0" time="0.001851" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="DeserializeWrappingErrorsAndErrorHandling" assertions="0" time="0.002285" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="DeserializingErrorHandlingUsingEvent" assertions="0" time="0.002151" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="DeserializingErrorInChildObject" assertions="0" time="0.005519" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="DeserializingErrorInDateTimeCollection" assertions="0" time="0.004198" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled" assertions="0" time="0.001516" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="ErrorDeserializingIntegerInObject" assertions="0" time="0.002439" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="ErrorDeserializingListHandled" assertions="0" time="0.004643" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="ErrorHandlingAndAvoidingRecursiveDepthError" assertions="0" time="0.003540" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="ErrorHandlingEndOfContent" assertions="0" time="0.009832" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="ErrorHandlingEndOfContentDictionary" assertions="0" time="0.003242" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="ErrorHandlingEndOfContentDynamic" assertions="0" time="0.015772" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="ErrorHandlingMetadata" assertions="0" time="0.003901" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="ErrorHandlingMetadata_TopLevel" assertions="0" time="0.001656" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="HandleErrorInDictionaryObject" assertions="0" time="0.007333" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="HandlingArrayErrors" assertions="0" time="0.001158" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="HandlingMultidimensionalArrayErrors" assertions="0" time="0.001103" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="InfiniteErrorHandlingLoopFromInputError" assertions="0" time="0.032971" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="IntegerToLarge_ReadNextValue" assertions="0" time="0.002370" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="MultipleRequiredPropertyErrors" assertions="0" time="0.002345" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="NoObjectWithAttribute" assertions="0" time="0.001353" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="NoObjectWithEvent" assertions="0" time="0.001760" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="SerializePerson" assertions="0" time="0.003648" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="SerializeRootConverter" assertions="0" time="0.000903" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="SerializeWrappingErrorsAndErrorHandling" assertions="0" time="0.003143" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="SerializingErrorIn3DArray" assertions="0" time="0.003546" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="SerializingErrorInChildObject" assertions="0" time="0.001012" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="WriteEndOnPropertyState" assertions="0" time="0.008296" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase><testcase name="WriteEndOnPropertyState2" assertions="0" time="0.001534" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests">
                  
                </testcase></testsuite>
              <testsuite tests="12" time="0.092308" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:38Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests."><testcase name="DerivedDerivedSerializationEvents" assertions="0" time="0.003547" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests">
                  
                </testcase><testcase name="DerivedDerivedSerializationEvents_DataContractSerializer" assertions="0" time="0.016959" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests">
                  
                </testcase><testcase name="DerivedSerializationEvents" assertions="0" time="0.001590" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests">
                  
                </testcase><testcase name="DictionaryEvents" assertions="0" time="0.009328" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests">
                  
                </testcase><testcase name="ListEvents" assertions="0" time="0.005995" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests">
                  
                </testcase><testcase name="NoStreamingContextParameter" assertions="0" time="0.003846" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests">
                  
                </testcase><testcase name="ObjectEvents" assertions="0" time="0.011289" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests">
                  
                </testcase><testcase name="ObjectEventsDocumentationExample" assertions="0" time="0.001351" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests">
                  
                </testcase><testcase name="ObjectWithConstructorEvents" assertions="0" time="0.005711" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests">
                  
                </testcase><testcase name="SerializationEventContextTest" assertions="0" time="0.001977" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests">
                  
                </testcase><testcase name="SerializationEventContextTestObjectSubClassTest" assertions="0" time="0.002037" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests">
                  
                </testcase><testcase name="WhenSerializationErrorDetectedBySerializer_ThenCallbackIsCalled" assertions="0" time="0.002555" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SerializationEventAttributeTests">
                  
                </testcase></testsuite>
              <testsuite tests="9" time="0.076508" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:38Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests."><testcase name="ShouldDeserialize_False" assertions="0" time="0.005949" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests">
                  
                </testcase><testcase name="ShouldDeserialize_True" assertions="0" time="0.003657" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests">
                  
                </testcase><testcase name="ShouldSerializeExample" assertions="0" time="0.005081" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests">
                  
                </testcase><testcase name="ShouldSerializeInheritedClassTest" assertions="0" time="0.002513" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests">
                  
                </testcase><testcase name="ShouldSerializeTest" assertions="0" time="0.003030" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests">
                  
                </testcase><testcase name="SpecifiedExample" assertions="0" time="0.005988" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests">
                  
                </testcase><testcase name="SpecifiedTest" assertions="0" time="0.006834" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests">
                  
                </testcase><testcase name="VirtualShouldSerialize" assertions="0" time="0.021979" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests">
                  
                </testcase><testcase name="VirtualShouldSerializeSimple" assertions="0" time="0.001848" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTests">
                  
                </testcase></testsuite>
              <testsuite tests="9" time="0.082600" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:38Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.SnakeCaseNamingStrategyTests."><testcase name="BlogPostExample" assertions="0" time="0.009432" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SnakeCaseNamingStrategyTests">
                  
                </testcase><testcase name="DictionarySnakeCasePropertyNames_Disabled" assertions="0" time="0.005002" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SnakeCaseNamingStrategyTests">
                  
                </testcase><testcase name="DictionarySnakeCasePropertyNames_Enabled" assertions="0" time="0.004515" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SnakeCaseNamingStrategyTests">
                  
                </testcase><testcase name="DynamicSnakeCasePropertyNames" assertions="0" time="0.021859" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SnakeCaseNamingStrategyTests">
                  
                </testcase><testcase name="JsonConvertSerializerSettings" assertions="0" time="0.007862" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SnakeCaseNamingStrategyTests">
                  
                </testcase><testcase name="JsonDictionaryAttribute_NamingStrategyType" assertions="0" time="0.003709" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SnakeCaseNamingStrategyTests">
                  
                </testcase><testcase name="JsonObjectAttribute_NamingStrategyType" assertions="0" time="0.002645" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SnakeCaseNamingStrategyTests">
                  
                </testcase><testcase name="JsonPropertyAttribute_NamingStrategyType" assertions="0" time="0.002480" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SnakeCaseNamingStrategyTests">
                  
                </testcase><testcase name="JTokenWriter_OverrideSpecifiedName" assertions="0" time="0.003070" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.SnakeCaseNamingStrategyTests">
                  
                </testcase></testsuite>
              <testsuite tests="31" time="0.207350" errors="0" failures="2" skipped="0" timestamp="2019-11-12 05:39:38Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.TraceWriterTests."><testcase name="Deserialize" assertions="0" time="0.005858" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="DeserializeConverter" assertions="0" time="0.001055" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="DeserializeDictionarysWithPreserveObjectReferences" assertions="0" time="0.001546" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="DeserializedJsonWithAlreadyReadReader" assertions="0" time="0.003350" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="DeserializeMissingMember" assertions="0" time="0.001241" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="DeserializeMissingMemberConstructor" assertions="0" time="0.001572" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="DeserializeTypeName" assertions="0" time="0.001739" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="DiagnosticsTraceWriterTest" assertions="0" time="0.010795" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="ErrorDeserializing" assertions="0" time="0.002756" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="ErrorDeserializingNested" assertions="0" time="0.001587" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="MemoryTraceWriterDeserializeTest" assertions="0" time="0.003629" status="Failed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                  <failure message="  Expected: 1058&#10;  But was:  1043&#10;">at Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterDeserializeTest () [0x0008f] in /root/repo/Src/Newtonsoft.Json-for-Unity.Tests/Assets/Newtonsoft.Json.Tests/Serialization/TraceWriterTests.cs:373
</failure>
                </testcase><testcase name="MemoryTraceWriterLimitTest" assertions="0" time="0.063700" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="MemoryTraceWriterSerializeTest" assertions="0" time="0.002943" status="Failed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                  <failure message="  Expected: 916&#10;  But was:  901&#10;">at Newtonsoft.Json.Tests.Serialization.TraceWriterTests.MemoryTraceWriterSerializeTest () [0x00080] in /root/repo/Src/Newtonsoft.Json-for-Unity.Tests/Assets/Newtonsoft.Json.Tests/Serialization/TraceWriterTests.cs:304
</failure>
                </testcase><testcase name="Populate" assertions="0" time="0.001998" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="PublicParameterizedConstructorWithPropertyNameConflictWithAttribute" assertions="0" time="0.000751" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="Serialize" assertions="0" time="0.001659" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="SerializeConverter" assertions="0" time="0.001409" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="SerializeDictionarysWithPreserveObjectReferences" assertions="0" time="0.001817" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="ShouldSerializeTestClass" assertions="0" time="0.001304" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="SpecifiedTest" assertions="0" time="0.002683" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="TraceJsonReaderTest" assertions="0" time="0.004146" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="TraceJsonWriterTest" assertions="0" time="0.007513" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="TraceJsonWriterTest_WriteObjectInObject" assertions="0" time="0.000799" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="WriteJRaw" assertions="0" time="0.000739" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="WriteJRawInArray" assertions="0" time="0.004111" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="WriteNullableByte" assertions="0" time="0.000889" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="WriteNullByteArray" assertions="0" time="0.000916" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="WriteNullObject" assertions="0" time="0.000919" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="WriteNullString" assertions="0" time="0.000525" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="WriteNullUri" assertions="0" time="0.000852" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase><testcase name="WriteTypeNameForObjects" assertions="0" time="0.001624" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TraceWriterTests">
                  
                </testcase></testsuite>
              <testsuite tests="57" time="0.425296" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:39Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests."><testcase name="ByteArrays" assertions="0" time="0.005121" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="CollectionWithAbstractItems" assertions="0" time="0.016268" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="DeserializeByteArrayWithTypeName" assertions="0" time="0.002132" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="DeserializeByteArrayWithTypeName_BadAdditionalContent" assertions="0" time="0.000923" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="DeserializeByteArrayWithTypeName_ExtraProperty" assertions="0" time="0.000721" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="DeserializeComplexGenericDictionary_Full" assertions="0" time="0.006349" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="DeserializeComplexGenericDictionary_Simple" assertions="0" time="0.000967" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="DeserializeGenericObjectListWithTypeName" assertions="0" time="0.001260" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="DeserializeGenericTypeName" assertions="0" time="0.005900" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="DeserializeNullableStructProperty_Auto" assertions="0" time="0.003629" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="DeserializeTypeName" assertions="0" time="0.000821" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="DeserializeTypeNameFromGacAssembly" assertions="0" time="0.007223" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="DeserializeTypeNameOnly" assertions="0" time="0.000783" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="DeserializeTypeNameWithNoTypeNameHandling" assertions="0" time="0.000760" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="DeserializeUsingCustomBinder" assertions="0" time="0.000949" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="DeserializeWithBadTypeName" assertions="0" time="0.000804" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="DictionaryAuto" assertions="0" time="0.000728" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="ExistingBaseValue" assertions="0" time="0.005036" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="GenericDictionaryObject" assertions="0" time="0.007800" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="GenericItemTypeCollection" assertions="0" time="0.018895" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="ISerializableTypeNameHandlingTest" assertions="0" time="0.006113" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="KeyValuePairAuto" assertions="0" time="0.010036" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="ListOfStackWithFullAssemblyName" assertions="0" time="0.010655" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="NestedValueObjects" assertions="0" time="0.001925" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="NewSerializeUsingCustomBinder" assertions="0" time="0.010617" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="ObsoleteBinderThrowsIfISerializationBinderSet" assertions="0" time="0.001327" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="ParentTypeNameHandlingWithISerializableValues" assertions="0" time="0.012591" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="PropertyItemTypeNameHandling" assertions="0" time="0.005291" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="PropertyItemTypeNameHandlingDynamic" assertions="0" time="0.044223" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="PropertyItemTypeNameHandlingNestedCollections" assertions="0" time="0.001867" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="PropertyItemTypeNameHandlingNestedDictionaries" assertions="0" time="0.002727" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="PropertyItemTypeNameHandlingObject" assertions="0" time="0.004882" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="SerializationBinderWithFullName" assertions="0" time="0.012785" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid" assertions="0" time="0.001202" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="SerializeGenericObjectListWithTypeName" assertions="0" time="0.001161" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="SerializeNullableStructProperty_Auto" assertions="0" time="0.001969" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="SerializeObjectWithMultipleGenericLists" assertions="0" time="0.003088" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="SerializeRootTypeNameAutoWithJsonConvert" assertions="0" time="0.000755" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="SerializeRootTypeNameAutoWithJsonConvert_Generic" assertions="0" time="0.001044" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="SerializeRootTypeNameAutoWithJsonConvert_Generic2" assertions="0" time="0.000868" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="SerializeRootTypeNameIfDerivedWithAuto" assertions="0" time="0.001436" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="SerializerWithDefaultBinder" assertions="0" time="0.000638" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="SerializeUsingCustomBinder" assertions="0" time="0.001683" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="SerializeValueTupleWithTypeName" assertions="0" time="0.000999" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="SerializeWrapper" assertions="0" time="0.004999" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="SerializingIEnumerableOfTShouldRetainGenericTypeInfo" assertions="0" time="0.002483" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="SetOldBinderAndSerializationBinderReturnsWrapper" assertions="0" time="0.000950" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="TypeNameComponentList" assertions="0" time="0.003999" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="TypeNameDictionary" assertions="0" time="0.003294" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="TypeNameHandlingWithISerializableValues" assertions="0" time="0.000992" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="TypeNameHandlingWithISerializableValuesAndArray" assertions="0" time="0.003793" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="TypeNameIntList" assertions="0" time="0.005099" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="TypeNameObjectItems" assertions="0" time="0.006991" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="WriteListTypeNameForProperty" assertions="0" time="0.001340" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="WriteObjectTypeNameForProperty" assertions="0" time="0.000948" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="WriteObjectTypeNameForPropertyDemo" assertions="0" time="0.003446" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase><testcase name="WriteTypeNameForObjects" assertions="0" time="0.000913" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests">
                  
                </testcase></testsuite>
              <testsuite tests="2" time="0.018916" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:39Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Serialization.WebApiIntegrationTests."><testcase name="SerializeInheritedType" assertions="0" time="0.003749" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.WebApiIntegrationTests">
                  
                </testcase><testcase name="SerializeSerializableType" assertions="0" time="0.006553" status="Passed" classname="Newtonsoft.Json.Tests.Serialization.WebApiIntegrationTests">
                  
                </testcase></testsuite>
            
            
              
              <testsuite tests="6" time="0.328010" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:42Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Utilities.ConvertUtilsTests."><testcase name="DecimalTryParse" assertions="0" time="0.300470" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.ConvertUtilsTests">
                  
                </testcase><testcase name="HexParse" assertions="0" time="0.001225" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.ConvertUtilsTests">
                  
                </testcase><testcase name="HexParseError" assertions="0" time="0.000738" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.ConvertUtilsTests">
                  
                </testcase><testcase name="HexParseOffset" assertions="0" time="0.001122" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.ConvertUtilsTests">
                  
                </testcase><testcase name="Int32TryParse" assertions="0" time="0.005070" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.ConvertUtilsTests">
                  
                </testcase><testcase name="Int64TryParse" assertions="0" time="0.002089" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.ConvertUtilsTests">
                  
                </testcase></testsuite>
              <testsuite tests="6" time="0.024842" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:42Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests."><testcase name="NewDateTimeOffsetParse" assertions="0" time="0.002717" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests">
                  
                </testcase><testcase name="NewDateTimeParse" assertions="0" time="0.002678" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests">
                  
                </testcase><testcase name="Parse24HourDateTime" assertions="0" time="0.001048" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests">
                  
                </testcase><testcase name="Parse24HourDateTimeOffset" assertions="0" time="0.000937" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests">
                  
                </testcase><testcase name="ReadOffsetMSDateTimeOffset" assertions="0" time="0.000848" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests">
                  
                </testcase><testcase name="RoundTripDateTimeMinAndMax" assertions="0" time="0.000907" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.DateTimeUtilsTests">
                  
                </testcase></testsuite>
              
                
                <testsuite tests="49" time="0.111585" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:42Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Utilities.EnumUtilsTests.Parse."><testcase name="Parse(&quot;Min&quot;,Min)" assertions="0" time="0.001159" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;mAx&quot;,Max)" assertions="0" time="0.000577" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;1&quot;,One)" assertions="0" time="0.001115" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;5&quot;,5)" assertions="0" time="0.000370" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;Min&quot;,Min)" assertions="0" time="0.000522" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;mAx&quot;,Max)" assertions="0" time="0.000491" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;1&quot;,One)" assertions="0" time="0.001195" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;5&quot;,5)" assertions="0" time="0.000520" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;Min&quot;,Min)" assertions="0" time="0.000614" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;mAx&quot;,Max)" assertions="0" time="0.000476" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;1&quot;,One)" assertions="0" time="0.001107" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;5&quot;,5)" assertions="0" time="0.000457" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;Min&quot;,Min)" assertions="0" time="0.000521" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;mAx&quot;,Max)" assertions="0" time="0.000491" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;1&quot;,One)" assertions="0" time="0.001289" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;5&quot;,5)" assertions="0" time="0.000379" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;Min&quot;,Min)" assertions="0" time="0.000502" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;mAx&quot;,Max)" assertions="0" time="0.000354" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;1&quot;,One)" assertions="0" time="0.000422" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;5&quot;,5)" assertions="0" time="0.000347" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;Min&quot;,Min)" assertions="0" time="0.000588" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;mAx&quot;,Max)" assertions="0" time="0.000374" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;1&quot;,One)" assertions="0" time="0.000710" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;5&quot;,5)" assertions="0" time="0.000480" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;Min&quot;,Min)" assertions="0" time="0.000595" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;mAx&quot;,Max)" assertions="0" time="0.000403" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;1&quot;,One)" assertions="0" time="0.000826" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;5&quot;,5)" assertions="0" time="0.000905" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;Min&quot;,Min)" assertions="0" time="0.000989" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;mAx&quot;,Max)" assertions="0" time="0.000600" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;1&quot;,One)" assertions="0" time="0.001647" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;5&quot;,5)" assertions="0" time="0.000607" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;Red&quot;,Red)" assertions="0" time="0.000850" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot; Red&quot;,Red)" assertions="0" time="0.000723" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;Red &quot;,Red)" assertions="0" time="0.000593" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot; red &quot;,Red)" assertions="0" time="0.000595" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;B&quot;,B)" assertions="0" time="0.000472" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;B,B&quot;,B)" assertions="0" time="0.002429" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot; Red , Blue &quot;,Green)" assertions="0" time="0.000376" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;Blue,Red,Green&quot;,Green)" assertions="0" time="0.000461" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;Blue,Red,Red,Red,Green&quot;,Green)" assertions="0" time="0.000416" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;Red,Blue,   Green&quot;,Green)" assertions="0" time="0.000449" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;1&quot;,Red)" assertions="0" time="0.000481" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot; 1 &quot;,Red)" assertions="0" time="0.000406" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;2&quot;,Blue)" assertions="0" time="0.000707" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;99&quot;,99)" assertions="0" time="0.000521" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;-42&quot;,-42)" assertions="0" time="0.000476" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;   -42&quot;,-42)" assertions="0" time="0.000389" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse(&quot;   -42 &quot;,-42)" assertions="0" time="0.000512" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase></testsuite>
                <testsuite tests="19" time="0.046108" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:43Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Utilities.EnumUtilsTests.Parse_Invalid."><testcase name="Parse_Invalid(null,&quot;&quot;,System.ArgumentNullException)" assertions="0" time="0.001036" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse_Invalid(Newtonsoft.Json.Tests.Utilities.SimpleEnum,null,System.ArgumentNullException)" assertions="0" time="0.000377" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse_Invalid(System.Object,&quot;&quot;,System.ArgumentException)" assertions="0" time="0.000486" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse_Invalid(Newtonsoft.Json.Tests.Utilities.SimpleEnum,&quot;&quot;,System.ArgumentException)" assertions="0" time="0.000373" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse_Invalid(Newtonsoft.Json.Tests.Utilities.SimpleEnum,&quot;    \t&quot;,System.ArgumentException)" assertions="0" time="0.000378" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse_Invalid(Newtonsoft.Json.Tests.Utilities.SimpleEnum,&quot;Purple&quot;,System.ArgumentException)" assertions="0" time="0.000410" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse_Invalid(Newtonsoft.Json.Tests.Utilities.SimpleEnum,&quot;,Red&quot;,System.ArgumentException)" assertions="0" time="0.000362" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse_Invalid(Newtonsoft.Json.Tests.Utilities.SimpleEnum,&quot;Red,&quot;,System.ArgumentException)" assertions="0" time="0.000503" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse_Invalid(Newtonsoft.Json.Tests.Utilities.SimpleEnum,&quot;B,&quot;,System.ArgumentException)" assertions="0" time="0.000415" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse_Invalid(Newtonsoft.Json.Tests.Utilities.SimpleEnum,&quot; , , ,&quot;,System.ArgumentException)" assertions="0" time="0.000465" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse_Invalid(Newtonsoft.Json.Tests.Utilities.SimpleEnum,&quot;Red,Blue,&quot;,System.ArgumentException)" assertions="0" time="0.000432" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse_Invalid(Newtonsoft.Json.Tests.Utilities.SimpleEnum,&quot;Red,,Blue&quot;,System.ArgumentException)" assertions="0" time="0.000637" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse_Invalid(Newtonsoft.Json.Tests.Utilities.SimpleEnum,&quot;Red,Blue, &quot;,System.ArgumentException)" assertions="0" time="0.000387" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse_Invalid(Newtonsoft.Json.Tests.Utilities.SimpleEnum,&quot;Red Blue&quot;,System.ArgumentException)" assertions="0" time="0.000465" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse_Invalid(Newtonsoft.Json.Tests.Utilities.SimpleEnum,&quot;1,Blue&quot;,System.ArgumentException)" assertions="0" time="0.000478" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse_Invalid(Newtonsoft.Json.Tests.Utilities.SimpleEnum,&quot;Blue,1&quot;,System.ArgumentException)" assertions="0" time="0.000493" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse_Invalid(Newtonsoft.Json.Tests.Utilities.SimpleEnum,&quot;Blue, 1&quot;,System.ArgumentException)" assertions="0" time="0.000416" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse_Invalid(Newtonsoft.Json.Tests.Utilities.SimpleEnum,&quot;2147483649&quot;,System.OverflowException)" assertions="0" time="0.000445" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="Parse_Invalid(Newtonsoft.Json.Tests.Utilities.SimpleEnum,&quot;2147483648&quot;,System.OverflowException)" assertions="0" time="0.000387" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase></testsuite>
                <testsuite tests="36" time="0.073103" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:43Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Utilities.EnumUtilsTests.ToString_Format."><testcase name="ToString_Format(Min,&quot;Min&quot;)" assertions="0" time="0.000933" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(5,null)" assertions="0" time="0.000357" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(Max,&quot;Max&quot;)" assertions="0" time="0.000392" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(Min,&quot;Min&quot;)" assertions="0" time="0.000354" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(5,null)" assertions="0" time="0.000375" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(Max,&quot;Max&quot;)" assertions="0" time="0.000408" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(3,null)" assertions="0" time="0.000346" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(Min,&quot;Min&quot;)" assertions="0" time="0.000439" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(5,null)" assertions="0" time="0.000360" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(Max,&quot;Max&quot;)" assertions="0" time="0.000388" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(3,null)" assertions="0" time="0.000378" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(Min,&quot;Min&quot;)" assertions="0" time="0.000407" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(5,null)" assertions="0" time="0.000384" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(Max,&quot;Max&quot;)" assertions="0" time="0.000429" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(3,null)" assertions="0" time="0.000379" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(Min,&quot;Min&quot;)" assertions="0" time="0.000403" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(5,null)" assertions="0" time="0.000406" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(Max,&quot;Max&quot;)" assertions="0" time="0.000347" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(3,null)" assertions="0" time="0.000403" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(Min,&quot;Min&quot;)" assertions="0" time="0.000421" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(5,null)" assertions="0" time="0.000421" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(Max,&quot;Max&quot;)" assertions="0" time="0.000372" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(3,null)" assertions="0" time="0.000379" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(Min,&quot;Min&quot;)" assertions="0" time="0.000372" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(5,null)" assertions="0" time="0.000397" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(Max,&quot;Max&quot;)" assertions="0" time="0.000386" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(3,null)" assertions="0" time="0.000421" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(Min,&quot;Min&quot;)" assertions="0" time="0.000504" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(5,null)" assertions="0" time="0.000540" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(Max,&quot;Max&quot;)" assertions="0" time="0.000369" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(3,null)" assertions="0" time="0.000407" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(Red,&quot;Red&quot;)" assertions="0" time="0.000380" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(Blue,&quot;Blue&quot;)" assertions="0" time="0.000385" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(99,null)" assertions="0" time="0.000382" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(0,null)" assertions="0" time="0.000360" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase><testcase name="ToString_Format(Class, Delegate,&quot;Class, Delegate&quot;)" assertions="0" time="0.000735" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.EnumUtilsTests">
                    
                  </testcase></testsuite>
              
              <testsuite tests="5" time="0.021595" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:43Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Utilities.LateboundReflectionDelegateFactoryTests."><testcase name="ConstructorWithInString" assertions="0" time="0.002129" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.LateboundReflectionDelegateFactoryTests">
                  
                </testcase><testcase name="ConstructorWithInStringAndBool" assertions="0" time="0.001005" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.LateboundReflectionDelegateFactoryTests">
                  
                </testcase><testcase name="ConstructorWithRefString" assertions="0" time="0.001603" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.LateboundReflectionDelegateFactoryTests">
                  
                </testcase><testcase name="ConstructorWithRefStringAndOutBool" assertions="0" time="0.001165" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.LateboundReflectionDelegateFactoryTests">
                  
                </testcase><testcase name="ConstructorWithRefStringAndRefBoolAndRefBool" assertions="0" time="0.001210" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.LateboundReflectionDelegateFactoryTests">
                  
                </testcase></testsuite>
              <testsuite tests="1" time="0.007769" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:43Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests."><testcase name="GetTypeNameSimpleForGenericTypes" assertions="0" time="0.000947" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests">
                  
                </testcase></testsuite>
              <testsuite tests="2" time="0.010834" errors="0" failures="0" skipped="0" timestamp="2019-11-12 05:39:43Z" name="UnityTestFramework.Newtonsoft.Json.Tests.dll.Newtonsoft.Json.Tests.Utilities.StringUtilsTests."><testcase name="ToCamelCaseTest" assertions="0" time="0.001405" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.StringUtilsTests">
                  
                </testcase><testcase name="ToSnakeCaseTest" assertions="0" time="0.001085" status="Passed" classname="Newtonsoft.Json.Tests.Utilities.StringUtilsTests">
                  
                </testcase></testsuite>
            
          
        
      
    
    
      
      
        
        
          
          
            
            
              
              
                
              
            
          
        
      
    
  
</testsuites>
